{"version":3,"file":"nodom.esm.js","sources":["../core/defineelementmanager.ts","../core/directivetype.ts","../core/directivemanager.ts","../core/locales/msg_en.ts","../core/error.ts","../core/util.ts","../core/expression.ts","../node_modules/tslib/tslib.es6.js","../core/modulefactory.ts","../core/cssmanager.ts","../core/event.ts","../core/eventmanager.ts","../core/renderer.ts","../core/route.ts","../core/types.ts","../core/router.ts","../core/scheduler.ts","../core/nodom.ts","../core/directive.ts","../core/virtualdom.ts","../core/compiler.ts","../core/difftool.ts","../core/defineelement.ts","../core/eventfactory.ts","../core/cache.ts","../core/globalcache.ts","../core/factory.ts","../core/locales/msg_zh.ts","../core/modelmanager.ts","../core/model.ts","../core/objectmanager.ts","../core/module.ts","../extend/elementinit.ts","../extend/directiveinit.ts","../extend/eventinit.ts"],"sourcesContent":["import { DefineElement } from \"./defineelement\";\r\n\r\n/**\r\n * 自定义元素管理器\r\n */\r\nexport class DefineElementManager {\r\n    /**\r\n     * 自定义element\r\n     */\r\n    private static elements: Map<string, DefineElement> = new Map();\r\n    /**\r\n     * 添加自定义元素类\r\n     * @param clazz     自定义元素类或类数组\r\n     * @param alias     别名   \r\n     */\r\n    public static add(clazz:any,alias?:string) {\r\n        if(Array.isArray(clazz)){\r\n            for(let c of clazz){\r\n                this.elements.set(c.name.toUpperCase(), c);\r\n            }\r\n        }else{\r\n            this.elements.set((alias||clazz.name).toUpperCase(), clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取自定义元素类\r\n     * @param tagName   元素名\r\n     * @returns         自定义元素类\r\n     */\r\n    public static get(tagName: string): any {\r\n        return this.elements.get(tagName.toUpperCase());\r\n    }\r\n\r\n    /**\r\n     * 是否存在自定义元素\r\n     * @param tagName   元素名\r\n     * @returns         存在或不存在\r\n     */\r\n    public static has(tagName:string):boolean{\r\n        return this.elements.has(tagName.toUpperCase());\r\n    }\r\n}\r\n","/**\r\n * 指令类\r\n */\r\nexport  class DirectiveType {\r\n    /**\r\n     * 指令类型名\r\n     */\r\n    public name:string;\r\n    \r\n    /**\r\n     * 优先级，越小优先级越高\r\n     */\r\n    public prio:number;\r\n\r\n    /**\r\n     * 渲染时执行方法\r\n     */\r\n    public handle:Function;\r\n    \r\n    /**\r\n     * 构造方法\r\n     * @param name      指令类型名       \r\n     * @param handle    渲染时执行方法\r\n     * @param prio      类型优先级\r\n     */ \r\n    constructor(name:string,handle:Function, prio?:number) {\r\n        this.name = name;\r\n        this.prio = prio>=0?prio:10;\r\n        this.handle = handle;\r\n    }\r\n}\r\n","import { DirectiveType } from \"./directivetype\";\r\n/**\r\n * 指令管理器\r\n */\r\nexport  class DirectiveManager {\r\n    /**\r\n     * 指令映射\r\n     */\r\n    private static directiveTypes:Map<string,DirectiveType> = new Map();\r\n    \r\n    /**\r\n     * 增加指令映射\r\n     * @param name      指令类型名\r\n     * @param handle    渲染处理函数\r\n     * @param prio      类型优先级\r\n     */\r\n    public static addType(name:string,handle:Function,prio?:number) {\r\n        this.directiveTypes.set(name, new DirectiveType(name,handle,prio));\r\n    }\r\n\r\n    /**\r\n     * 移除指令映射\r\n     * @param name  指令类型名\r\n     */\r\n    public static removeType(name:string) {\r\n        this.directiveTypes.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 获取指令\r\n     * @param name  指令类型名\r\n     * @returns     指令类型或undefined\r\n     */\r\n    public static getType(name:string) {\r\n        return this.directiveTypes.get(name);\r\n    }\r\n\r\n    /**\r\n     * 是否含有某个指令\r\n     * @param name  指令类型名\r\n     * @returns     true/false\r\n     */\r\n    public static hasType(name:string) {\r\n        return this.directiveTypes.has(name);\r\n    }\r\n}\r\n","/*\r\n * 消息js文件 中文文件\r\n */\r\nexport const NodomMessage_en = {\r\n    /**\r\n     * tip words\r\n     */\r\n    TipWords:{\r\n        application:\"Application\",\r\n        system:\"System\",\r\n        module:\"Module\",\r\n        moduleClass:'ModuleClass',\r\n        model:\"Model\",\r\n        directive:\"Directive\",\r\n        directiveType:\"Directive-type\",\r\n        expression:\"Expression\",\r\n        event:\"Event\",\r\n        method:\"Method\",\r\n        filter:\"Filter\",\r\n        filterType:\"Filter-type\",\r\n        data:\"Data\",\r\n        dataItem:'Data-item',\r\n        route:'Route',\r\n        routeView:'Route-container',\r\n        plugin:'Plugin',\r\n        resource:'Resource',\r\n        root:'Root',\r\n        element:'VirtualDom'\r\n    },\r\n    /**\r\n     * error info\r\n     */\r\n    ErrorMsgs:{\r\n        unknown:\"unknown error\",\r\n        paramException:\"{0} '{1}' parameter error，see api\",\r\n        invoke:\"method {0} parameter {1} must be {2}\",\r\n        invoke1:\"method {0} parameter {1} must be {2} or {3}\",\r\n        invoke2:\"method {0} parameter {1} or {2} must be {3}\",\r\n        invoke3:\"method {0} parameter {1} not allowed empty\",\r\n        exist:\"{0} is already exist\",\r\n        exist1:\"{0} '{1}' is already exist\",\r\n        notexist:\"{0} is not exist\",\r\n        notexist1:\"{0} '{1}' is not exist\",\r\n        notupd:\"{0} not allow to change\",\r\n        notremove:\"{0} not allow to delete\",\r\n        notremove1:\"{0} {1} not allow to delete\",\r\n        namedinvalid:\"{0} {1} name error，see name rules\",\r\n        initial:\"{0} init parameter error\",\r\n        jsonparse:\"JSON parse error\",\r\n        timeout:\"request overtime\",\r\n        config:\"{0} config parameter error\",\r\n        config1:\"{0} config parameter '{1}' error\",\r\n        itemnotempty:\"{0} '{1}' config item '{2}' not allow empty\",\r\n\t\titemincorrect:\"{0} '{1}' config item '{2}' error\",\r\n        wrongTemplate:\"wrong template\"\r\n    },\r\n\r\n    /**\r\n     * form info\r\n     */\r\n    FormMsgs:{\r\n        type:\"please input valid {0}\",\r\n        unknown:\"input error\",\r\n        required:\"is required\",\r\n        min:\"min value is {0}\",\r\n        max:\"max value is {0}\"\r\n    },\r\n    WeekDays:{\r\n\t\t\"0\" : \"Sun\",\r\n\t\t\"1\" : \"Mon\",\r\n\t\t\"2\" : \"Tue\",\r\n\t\t\"3\" : \"Wed\",\r\n\t\t\"4\" : \"Thu\",\r\n\t\t\"5\" : \"Fri\",\r\n\t\t\"6\" : \"Sat\"\r\n\t}\r\n}\r\n","import { NodomMessage_en } from \"./locales/msg_en\";\r\n\r\n/**\r\n * 异常处理类\r\n * @since       1.0.0\r\n */\r\nexport  class NError extends Error{\r\n    constructor(errorName:string,p1?:string,p2?:string,p3?:string,p4?:string){\r\n        super(errorName);\r\n        let msg:string = NodomMessage_en.ErrorMsgs[errorName];\r\n        if(msg === undefined){\r\n            this.message = \"未知错误\";\r\n            return;\r\n        }\r\n        //复制请求参数\r\n        let params:Array<string> = [msg];\r\n        for(let i=1;i<arguments.length;i++){\r\n            params.push(arguments[i]);\r\n        }\r\n        this.message = this.compile.apply(null,params);\r\n    }\r\n\r\n    /**\r\n     * 编译字符串，把{n}替换成带入值\r\n     * @param src   待编译的字符串\r\n     * @returns     转换后的消息\r\n     */\r\n    private compile(src: string, p1?: any, p2?: any, p3?: any, p4?: any, p5?: any): string {\r\n        let reg: RegExp;\r\n        let args = arguments;\r\n        let index = 0;\r\n        for (; ;) {\r\n            if (src.indexOf('\\{' + index + '\\}') !== -1) {\r\n                reg = new RegExp('\\\\{' + index + '\\\\}', 'g');\r\n                src = src.replace(reg, args[index + 1]);\r\n                index++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    }\r\n}   \r\n","import { NError } from \"./error\";\r\nimport { NEvent } from \"./event\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { NodomMessage_en as NodomMessage } from \"./locales/msg_en\";\r\nimport { IRenderedDom } from \"./types\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\n/**\r\n * 基础服务库\r\n * @since       1.0.0\r\n */\r\nexport class Util {\r\n    /**\r\n     * 全局id\r\n     */\r\n    private static generatedId: number = 1;\r\n    \r\n    /**\r\n     * js 保留字 map\r\n     */\r\n    public static keyWordMap = new Map();\r\n    \r\n    /**\r\n     * 唯一主键\r\n     */\r\n    public static genId() {\r\n        return this.generatedId++;\r\n    }\r\n\r\n    /**\r\n     * 初始化保留字map\r\n     */\r\n    public static initKeyMap(){\r\n        this.keyWordMap.set('arguments',true);\r\n        this.keyWordMap.set('boolean',true);\r\n        this.keyWordMap.set('break',true);\r\n        this.keyWordMap.set('byte',true);\r\n        this.keyWordMap.set('catch',true);\r\n        this.keyWordMap.set('char',true);\r\n        this.keyWordMap.set('const',true);\r\n        this.keyWordMap.set('default',true);\r\n        this.keyWordMap.set('delete',true);\r\n        this.keyWordMap.set('do',true);\r\n        this.keyWordMap.set('double',true);\r\n        this.keyWordMap.set('else',true);\r\n        this.keyWordMap.set('enum',true);\r\n        this.keyWordMap.set('eval',true);\r\n        this.keyWordMap.set('false',true);\r\n        this.keyWordMap.set('float',true);\r\n        this.keyWordMap.set('for',true);\r\n        this.keyWordMap.set('function',true);\r\n        this.keyWordMap.set('goto',true);\r\n        this.keyWordMap.set('if',true);\r\n        this.keyWordMap.set('in',true);\r\n        this.keyWordMap.set('instanceof',true);\r\n        this.keyWordMap.set('int',true);\r\n        this.keyWordMap.set('let',true);\r\n        this.keyWordMap.set('long',true);\r\n        this.keyWordMap.set('new',true);\r\n        this.keyWordMap.set('null',true);\r\n        this.keyWordMap.set('return',true);\r\n        this.keyWordMap.set('short',true);\r\n        this.keyWordMap.set('switch',true);\r\n        this.keyWordMap.set('this',true);\r\n        this.keyWordMap.set('throw',true);\r\n        this.keyWordMap.set('true',true);\r\n        this.keyWordMap.set('try',true);\r\n        this.keyWordMap.set('this',true);\r\n        this.keyWordMap.set('throw',true);\r\n        this.keyWordMap.set('typeof',true);\r\n        this.keyWordMap.set('var',true);\r\n        this.keyWordMap.set('while',true);\r\n        this.keyWordMap.set('with',true);\r\n        this.keyWordMap.set('Array',true);\r\n        this.keyWordMap.set('Date',true);\r\n        this.keyWordMap.set('JSON',true);\r\n        this.keyWordMap.set('Set',true);\r\n        this.keyWordMap.set('Map',true);\r\n        this.keyWordMap.set('eval',true);\r\n        this.keyWordMap.set('function',true);\r\n        this.keyWordMap.set('Infinity',true);\r\n        this.keyWordMap.set('isFinite',true);\r\n        this.keyWordMap.set('isNaN',true);\r\n        this.keyWordMap.set('isPrototypeOf',true);\r\n        this.keyWordMap.set('Math',true);\r\n        this.keyWordMap.set('NaN',true);\r\n        this.keyWordMap.set('Number',true);\r\n        this.keyWordMap.set('Object',true);\r\n        this.keyWordMap.set('prototype',true);\r\n        this.keyWordMap.set('String',true);\r\n        this.keyWordMap.set('isPrototypeOf',true);\r\n        this.keyWordMap.set('undefined',true);\r\n        this.keyWordMap.set('valueOf',true);\r\n    }\r\n    /**\r\n     * 是否为 js 保留关键字\r\n     * @param name  名字\r\n     * @returns     如果为保留字，则返回true，否则返回false\r\n     */\r\n    public static isKeyWord(name:string):boolean{\r\n        return this.keyWordMap.has(name);\r\n    }\r\n\r\n    /******对象相关******/\r\n\r\n    /**\r\n     * 对象复制\r\n     * @param srcObj    源对象\r\n     * @param expKey    不复制的键正则表达式或名\r\n     * @param extra     clone附加参数\r\n     * @returns         复制的对象\r\n     */\r\n\r\n    public static clone(srcObj: Object, expKey?: RegExp | string[], extra?: any): any {\r\n        let me = this;\r\n        let map: WeakMap<Object, any> = new WeakMap();\r\n        return clone(srcObj, expKey, extra);\r\n\r\n        /**\r\n         * clone对象\r\n         * @param src      待clone对象\r\n         * @param expKey   不克隆的键\r\n         * @param extra    clone附加参数\r\n         * @returns        克隆后的对象\r\n         */\r\n        function clone(src, expKey, extra?) {\r\n            //非对象或函数，直接返回            \r\n            if (!src || typeof src !== 'object' || Util.isFunction(src)) {\r\n                return src;\r\n            }\r\n            let dst;\r\n\r\n            //带有clone方法，则直接返回clone值\r\n            if (src.clone && Util.isFunction(src.clone)) {\r\n                return src.clone(extra);\r\n            } else if (me.isObject(src)) {\r\n                dst = new Object();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                map.set(src, dst);\r\n                Object.getOwnPropertyNames(src).forEach((prop) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && (<RegExp>expKey).test(prop) //正则表达式匹配的键不复制\r\n                            || Util.isArray(expKey) && (<any[]>expKey).includes(prop)                        //被排除的键不复制\r\n                        ) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst[prop] = getCloneObj(src[prop], expKey, extra);\r\n                });\r\n            } else if (me.isMap(src)) {\r\n                dst = new Map();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach((value, key) => {\r\n                    //不克隆的键\r\n                    if (expKey) {\r\n                        if (expKey.constructor === RegExp && (<RegExp>expKey).test(key)       //正则表达式匹配的键不复制\r\n                            || (<any[]>expKey).includes(key)) {     //被排除的键不复制\r\n                            return;\r\n                        }\r\n                    }\r\n                    dst.set(key, getCloneObj(value, expKey, extra));\r\n                });\r\n            } else if (me.isArray(src)) {\r\n                dst = new Array();\r\n                //把对象加入map，如果后面有新克隆对象，则用新克隆对象进行覆盖\r\n                src.forEach(function (item, i) {\r\n                    dst[i] = getCloneObj(item, expKey, extra);\r\n                });\r\n            }\r\n            return dst;\r\n        }\r\n\r\n        /**\r\n         * 获取clone对象\r\n         * @param value     待clone值\r\n         * @param expKey    排除键\r\n         * @param extra     附加参数\r\n         */\r\n        function getCloneObj(value, expKey, extra) {\r\n            if (typeof value === 'object' && !Util.isFunction(value)) {\r\n                let co = null;\r\n                if (!map.has(value)) {  //clone新对象\r\n                    co = clone(value, expKey, extra);\r\n                } else {                    //从map中获取对象\r\n                    co = map.get(value);\r\n                }\r\n                return co;\r\n            }\r\n            return value;\r\n        }\r\n    }\r\n    /**\r\n     * 合并多个对象并返回\r\n     * @param   参数数组\r\n     * @returns 返回对象\r\n     */\r\n    public static merge(o1?: Object, o2?: Object, o3?: Object, o4?: Object, o5?: Object, o6?: Object) {\r\n        let me = this;\r\n        for (let i = 0; i < arguments.length; i++) {\r\n            if (!this.isObject(arguments[i])) {\r\n                throw new NError('invoke', 'Util.merge', i + '', 'object');\r\n            }\r\n        }\r\n        let retObj = Object.assign.apply(null, arguments);\r\n        subObj(retObj);\r\n        return retObj;\r\n        //处理子对象\r\n        function subObj(obj) {\r\n            for (let o in obj) {\r\n                if (me.isObject(obj[o]) || me.isArray(obj[o])) { //对象或数组\r\n                    retObj[o] = me.clone(retObj[o]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 把obj2对象所有属性赋值给obj1\r\n     * @returns 返回对象obj1\r\n     */\r\n    public static assign(obj1, obj2) {\r\n        if (Object.assign) {\r\n            Object.assign(obj1, obj2);\r\n        } else {\r\n            this.getOwnProps(obj2).forEach(function (p) {\r\n                obj1[p] = obj2[p];\r\n            });\r\n        }\r\n        return obj1;\r\n    }\r\n\r\n    /**\r\n     * 比较两个对象值是否相同(只比较object和array)\r\n     * @param src   源对象\r\n     * @param dst   目标对象 \r\n     * @returns     值相同则返回true，否则返回false \r\n     */\r\n    public static compare(src:any,dst:any,deep?:boolean):boolean{\r\n        if(!src && !dst){\r\n            return true;\r\n        }\r\n        if (typeof src !== 'object' || typeof dst !== 'object') {\r\n            return false;\r\n        }\r\n        const keys = Object.getOwnPropertyNames(src);\r\n        if(keys.length !== Object.getOwnPropertyNames(dst).length){\r\n            return false;\r\n        }\r\n        for(let k of keys){\r\n            if(src[k] !== dst[k]){\r\n                return false;\r\n            }\r\n        }\r\n        //深度比较\r\n        if(deep){\r\n            for(let k of keys){\r\n                let r = this.compare(src[k],dst[k]);\r\n                if(!r){\r\n                    return false;\r\n                }\r\n            }   \r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * 获取对象自有属性\r\n     * @param obj   需要获取属性的对象\r\n     * @returns     返回属性数组\r\n     */\r\n    public static getOwnProps(obj): Array<string> {\r\n        if (!obj) {\r\n            return [];\r\n        }\r\n        return Object.getOwnPropertyNames(obj);\r\n    }\r\n    /**************对象判断相关************/\r\n    /**\r\n     * 判断是否为函数\r\n     * @param foo   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isFunction(foo): boolean {\r\n        return foo !== undefined && foo !== null && foo.constructor === Function;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为数组\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isArray(obj): boolean {\r\n        return Array.isArray(obj);\r\n    }\r\n\r\n    /**\r\n     * 判断是否为map\r\n     * @param obj   检查的对象\r\n     */\r\n    public static isMap(obj): boolean {\r\n        return obj !== null && obj !== undefined && obj.constructor === Map;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为对象\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isObject(obj): boolean {\r\n        return obj !== null && obj !== undefined && obj.constructor === Object;\r\n    }\r\n\r\n    /**\r\n     * 判断是否为整数\r\n     * @param v     检查的值\r\n     * @returns     true/false\r\n     */\r\n    public static isInt(v): boolean {\r\n        return Number.isInteger(v);\r\n    }\r\n    /**\r\n     * 判断是否为number\r\n     * @param v     检查的值\r\n     * @returns     true/false\r\n     */\r\n    public static isNumber(v): boolean {\r\n        return typeof v === 'number';\r\n    }\r\n\r\n    /**\r\n     * 判断是否为boolean\r\n     * @param v     检查的值\r\n     * @returns     true/false\r\n     */\r\n    public static isBoolean(v): boolean {\r\n        return typeof v === 'boolean';\r\n    }\r\n    /**\r\n     * 判断是否为字符串\r\n     * @param v     检查的值\r\n     * @returns     true/false\r\n     */\r\n    public static isString(v): boolean {\r\n        return typeof v === 'string';\r\n    }\r\n\r\n    /**\r\n     * 判断是否为数字串\r\n     * @param v     检查的值\r\n     * @returns     true/false\r\n     */\r\n    public static isNumberString(v): boolean {\r\n        return /^\\d+\\.?\\d*$/.test(v);\r\n    }\r\n\r\n    /**\r\n     * 判断对象/字符串是否为空\r\n     * @param obj   检查的对象\r\n     * @returns     true/false\r\n     */\r\n    public static isEmpty(obj): boolean {\r\n        if (obj === null || obj === undefined)\r\n            return true;\r\n        let tp = typeof obj;\r\n        if (this.isObject(obj)) {\r\n            let keys = Object.keys(obj);\r\n            if (keys !== undefined) {\r\n                return keys.length === 0;\r\n            }\r\n        } else if (tp === 'string') {\r\n            return obj === '';\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    /**\r\n     * 把srcNode替换为nodes\r\n     * @param srcNode       源dom\r\n     * @param nodes         替换的dom或dom数组\r\n     */\r\n    public static replaceNode(srcNode: Node, nodes: Node | Array<Node>) {\r\n        // if (!this.isNode(srcNode)) {\r\n        //     throw new NError('invoke', 'this.replaceNode', '0', 'Node');\r\n        // }\r\n\r\n        // if (!this.isNode(nodes) && !this.isArray(nodes)) {\r\n        //     throw new NError('invoke1', 'this.replaceNode', '1', 'Node', 'Node Array');\r\n        // }\r\n        let pnode: Node = srcNode.parentNode;\r\n        let bnode: Node = srcNode.nextSibling;\r\n        if (pnode === null) {\r\n            return;\r\n        }\r\n        pnode.removeChild(srcNode);\r\n        const nodeArr: Array<Node> = this.isArray(nodes) ? <Node[]>nodes : [<Node>nodes];\r\n        nodeArr.forEach(function (node) {\r\n            if (bnode === undefined || bnode === null) {\r\n                pnode.appendChild(node);\r\n            } else {\r\n                pnode.insertBefore(node, bnode);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * 清空子节点\r\n     * @param el   需要清空的节点\r\n     */\r\n    public static empty(el: HTMLElement) {\r\n        const me = this;\r\n        let nodes: NodeList = el.childNodes;\r\n        for (let i = nodes.length - 1; i >= 0; i--) {\r\n            el.removeChild(nodes[i]);\r\n        }\r\n    }\r\n    \r\n    /******日期相关******/\r\n    /**\r\n     * 日期格式化\r\n     * @param srcDate    时间戳串\r\n     * @param format     日期格式\r\n     * @returns          日期串\r\n     */\r\n    public static formatDate(srcDate: string | number, format: string): string {\r\n        //时间戳\r\n        let timeStamp: number;\r\n        if (this.isString(srcDate)) {\r\n            //排除日期格式串,只处理时间戳\r\n            let reg = /^\\d+$/;\r\n            if (reg.test(<string>srcDate) === true) {\r\n                timeStamp = parseInt(<string>srcDate);\r\n            }\r\n        } else if (this.isNumber(srcDate)) {\r\n            timeStamp = <number>srcDate;\r\n        } else {\r\n            throw new NError('invoke', 'this.formatDate', '0', 'date string', 'date');\r\n        }\r\n        //得到日期\r\n        let date: Date = new Date(timeStamp);\r\n        // invalid date\r\n        if (isNaN(date.getDay())) {\r\n            return '';\r\n        }\r\n\r\n        let o = {\r\n            \"M+\": date.getMonth() + 1, //月份\r\n            \"d+\": date.getDate(), //日\r\n            \"h+\": date.getHours() % 12 === 0 ? 12 : date.getHours() % 12, //小时\r\n            \"H+\": date.getHours(), //小时\r\n            \"m+\": date.getMinutes(), //分\r\n            \"s+\": date.getSeconds(), //秒\r\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\r\n            \"S\": date.getMilliseconds() //毫秒\r\n        };\r\n\r\n        //年\r\n        if (/(y+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substring(4 - RegExp.$1.length));\r\n        }\r\n        //月日\r\n        this.getOwnProps(o).forEach(function (k) {\r\n            if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n                format = format.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substring((\"\" + o[k]).length)));\r\n            }\r\n        });\r\n\r\n        //星期\r\n        if (/(E+)/.test(format)) {\r\n            format = format.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? \"/u661f/u671f\" : \"/u5468\") : \"\") + NodomMessage.WeekDays[date.getDay() + \"\"]);\r\n        }\r\n        return format;\r\n    }\r\n\r\n    /******字符串相关*****/\r\n    /**\r\n     * 编译字符串，把{n}替换成带入值\r\n     * @param src   待编译的字符串\r\n     * @returns     转换后的消息\r\n     */\r\n    public static compileStr(src: string, p1?: any, p2?: any, p3?: any, p4?: any, p5?: any): string {\r\n        let reg: RegExp;\r\n        let args = arguments;\r\n        let index = 0;\r\n        for (; ;) {\r\n            if (src.indexOf('\\{' + index + '\\}') !== -1) {\r\n                reg = new RegExp('\\\\{' + index + '\\\\}', 'g');\r\n                src = src.replace(reg, args[index + 1]);\r\n                index++;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * 函数调用\r\n     * @param foo   函数\r\n     * @param obj   this指向\r\n     * @param args  参数数组\r\n     */\r\n    public static apply(foo: Function, obj: any, args?: Array<any>): any {\r\n        if (!foo) {\r\n            return;\r\n        }\r\n        return Reflect.apply(foo, obj || null, args);\r\n    }\r\n\r\n    /**\r\n     * 合并并修正路径，即路径中出现'//','///','\\/'的情况，统一置换为'/'\r\n     * @param paths     待合并路径数组\r\n     * @returns         返回路径\r\n     */\r\n    public static mergePath(paths: string[]): string {\r\n        return paths.join('/').replace(/(\\/{2,})|\\\\\\//g, '\\/');\r\n    }\r\n\r\n    /**\r\n     * eval\r\n     * @param evalStr   eval串\r\n     * @returns         eval值\r\n     */\r\n    public static eval(evalStr: string): any {\r\n        return new Function(`return(${evalStr})`)();\r\n    }\r\n\r\n    /**\r\n     * 改造 dom key，避免克隆时重复，格式为：key_id\r\n     * @param node    节点\r\n     * @param id      附加id\r\n     * @param deep    是否深度处理\r\n     */\r\n    public static setNodeKey(node:VirtualDom, id?:string,deep?:boolean){\r\n        node.key += '_' + (id||Util.genId());\r\n        if(deep && node.children){\r\n            for(let c of node.children) {\r\n                Util.setNodeKey(c,id,deep);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置dom asset\r\n     * @param dom       渲染后的dom节点\r\n     * @param name      asset name    \r\n     * @param value     asset value\r\n     */\r\n    public static setDomAsset(dom:IRenderedDom,name:string,value:any){\r\n        if(!dom.assets){\r\n            dom.assets = {};\r\n        }\r\n        dom.assets[name] = value;\r\n    }\r\n\r\n    /**\r\n     * 删除dom asset\r\n     * @param dom   渲染后的dom节点\r\n     * @param name  asset name\r\n     * @returns \r\n     */\r\n    public static delDomAsset(dom:IRenderedDom,name:string){\r\n        if(!dom.assets){\r\n            return;\r\n        }\r\n        delete dom.assets[name];\r\n    }\r\n}\r\n\r\n//初始化keymap\r\nUtil.initKeyMap();","import { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 表达式类\r\n */\r\nexport class Expression {\r\n    /**\r\n      * 表达式id\r\n      */\r\n    id: number;\r\n\r\n    /**\r\n     * 执行函数\r\n     */\r\n    execFunc: Function;\r\n\r\n    /**\r\n     * 只包含自有model变量\r\n     */\r\n    allModelField: boolean;\r\n\r\n    /**\r\n     * 值\r\n     */\r\n    value:any;\r\n\r\n    /**\r\n     * @param exprStr\t表达式串\r\n     */\r\n    constructor(exprStr: string) {\r\n        this.id = Util.genId();\r\n        this.allModelField = true;\r\n        if (!exprStr) {\r\n            return;\r\n        }\r\n        const funStr = this.compile(exprStr);\r\n        this.execFunc = new Function('$model',`return ` + funStr);\r\n    }\r\n\r\n    /**\r\n     * 编译表达式串，替换字段和方法\r\n     * @param exprStr   表达式串\r\n     * @returns         编译后的表达式串\r\n     */\r\n    private compile(exprStr:string){\r\n        //字符串，object key，有效命名(函数或字段)\r\n        const reg = /('[\\s\\S]*?')|(\"[\\s\\S]*?\")|(`[\\s\\S]*?`)|([a-zA-Z$_][\\w$]*\\s*?:)|((\\.{3}|\\.)?[a-zA-Z$_][\\w$]*(\\.[a-zA-Z$_][\\w$]*)*(\\s*[\\[\\(](\\s*\\))?)?)/g;\r\n        let r;\r\n        let retS = '';\r\n        let index = 0;  //当前位置\r\n\r\n        while((r=reg.exec(exprStr)) !== null){\r\n            let s = r[0];\r\n            if(index < r.index){\r\n                retS += exprStr.substring(index,r.index);\r\n            }\r\n            if(s[0] === \"'\" || s[0] === '\"' || s[0] === '`'){ //字符串\r\n                retS += s;\r\n            }else{\r\n                let lch = s[s.length-1];\r\n                if(lch === ':'){  //object key\r\n                    retS += s;\r\n                }else if(lch === '(' || lch === ')'){ //函数，非内部函数\r\n                    retS += handleFunc(s);\r\n                }else { //字段 this $model .field等不做处理\r\n                    if(s.startsWith('this.') || s==='$model' || s.startsWith('$model.') || Util.isKeyWord(s) || (s[0] === '.' && s[1]!=='.')){ //非model属性\r\n                        retS += s; \r\n                    }else{  //model属性\r\n                        let s1 = '';\r\n                        if(s.startsWith('...')){ // ...属性名\r\n                            s1 = '...';\r\n                            s = s.substring(3);\r\n                        }\r\n                        retS += s1 +'$model.' + s;\r\n                        \r\n                        //存在‘.’，则变量不全在在当前模型中\r\n                        if(s.indexOf('.') !== -1){\r\n                            this.allModelField = false;\r\n                        }\r\n                    }\r\n                }\r\n            } \r\n            index = reg.lastIndex;\r\n        }\r\n        if(index < exprStr.length){\r\n            retS += exprStr.substring(index);\r\n        }\r\n        \r\n        return retS;\r\n\r\n        /**\r\n         * 处理函数串\r\n         * @param str   源串\r\n         * @returns     处理后的串\r\n         */\r\n        function handleFunc(str):string{\r\n            let ind = str.indexOf('.');\r\n                    \r\n            //中间无'.'\r\n            if(ind === -1){\r\n                let ind1 = str.lastIndexOf('(');\r\n                let fn = str.substring(0,ind1);\r\n                //末尾字符\r\n                if(!Util.isKeyWord(fn)){\r\n                    let lch = str[str.length-1];\r\n                    if(lch !== ')'){ //有参数\r\n                        return 'this.invokeMethod(\"' + fn + '\",';\r\n                    }else{ //无参数\r\n                        return 'this.invokeMethod(\"' + fn + '\")';\r\n                    }\r\n                }\r\n            }else if(str[0] !== '.'){  //第一个为点不处理\r\n                let fn = str.substring(0,ind);\r\n                if(!Util.isKeyWord(fn)){ //首字段非关键词，则为属性\r\n                    return '$model.' + str;\r\n                }\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 表达式计算\r\n     * @param module    模块\r\n     * @param model \t模型\r\n     * @returns \t\t计算结果\r\n     */\r\n    public val(module:Module,model: Model) {\r\n        let v;\r\n        try {\r\n            v = this.execFunc.apply(module,[model]);\r\n        } catch (e) {\r\n            // console.error(e);\r\n        }\r\n        this.value = v;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n     public clone() {\r\n        return this;\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Module } from \"./module\";\r\n\r\n/**\r\n * 过滤器工厂，存储模块过滤器\r\n */\r\nexport class ModuleFactory {\r\n    /**\r\n     * 模块对象工厂 {moduleId:{key:容器key,className:模块类名,instance:模块实例}}\r\n     */\r\n    private static modules: Map<number, Module> = new Map();\r\n\r\n    /**\r\n     * 模块类集合 {className:class}\r\n     */\r\n    public static classes: Map<string, Module> = new Map();\r\n\r\n    /**\r\n     * 主模块\r\n     */\r\n    private static mainModule: Module;\r\n    /**\r\n     * 添加模块到工厂\r\n     * @param item  模块对象\r\n     */\r\n    public static add(item: Module) {\r\n        // //第一个为主模块\r\n        if (this.modules.size === 0) {\r\n            this.mainModule = item;\r\n        }\r\n        this.modules.set(item.id, item);\r\n\r\n        //添加模块类\r\n        this.addClass(item.constructor);\r\n    }\r\n\r\n    /**\r\n     * 获得模块\r\n     * @param name  类、类名或实例id\r\n     */\r\n    public static get(name: any): Module {\r\n        if (typeof name === 'number') {\r\n            return this.modules.get(name);\r\n        } else {\r\n            return this.getInstance(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否存在模块类\r\n     * @param clazzName     模块类名\r\n     * @returns     true/false\r\n     */\r\n    public static hasClass(clazzName: string): boolean {\r\n        return this.classes.has(clazzName.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * 添加模块类\r\n     * @param clazz     模块类\r\n     * @param alias     注册别名\r\n     */\r\n    public static addClass(clazz: any, alias?: string) {\r\n        //转换成小写\r\n        let name = clazz.name.toLowerCase();\r\n        if (this.classes.has(name)) {\r\n            return;\r\n        }\r\n        this.classes.set(name, clazz);\r\n        if (alias) {\r\n            this.classes.set(alias.toLowerCase(), clazz);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取模块实例（通过类名）\r\n     * @param className     模块类或类名\r\n     * @param props         模块外部属性\r\n     */\r\n    private static getInstance(clazz: any): Module {\r\n        let className = (typeof clazz === 'string') ? clazz : clazz.name.toLowerCase();\r\n        let cls;\r\n        // 初始化模块\r\n        if (!this.classes.has(className) && typeof clazz === 'function') {\r\n            cls = clazz;\r\n        } else {\r\n            cls = this.classes.get(className);\r\n        }\r\n        if (!cls) {\r\n            return;\r\n        }\r\n        let m: Module = Reflect.construct(cls, []);\r\n        m.init();\r\n        return m;\r\n    }\r\n    /**\r\n     * 从工厂移除模块\r\n     * @param id    模块id\r\n     */\r\n    static remove(id: number) {\r\n        this.modules.delete(id);\r\n    }\r\n    /**\r\n     * 设置主模块\r\n     * @param m \t模块 \r\n     */\r\n    static setMain(m: Module) {\r\n        this.mainModule = m;\r\n    }\r\n\r\n    /**\r\n     * 获取主模块\r\n     * @returns \t应用的主模块\r\n     */\r\n    static getMain() {\r\n        return this.mainModule;\r\n    }\r\n}\r\n","import {Module} from \"./module\";\r\nimport { IRenderedDom } from \"./types\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\n/**\r\n * css 管理器\r\n * 针对不同的rule，处理方式不同\r\n * CssStyleRule 进行保存和替换，同时 scopeInModule(模块作用域)有效\r\n * CssImportRule 路径不重复添加，因为必须加在stylerule前面，所以需要记录最后的import索引号\r\n */\r\nexport class CssManager{\r\n\r\n    /**\r\n     * style sheet\r\n     */\r\n    private static sheet:any;\r\n\r\n    /**\r\n     * import url map，用于存储import的url路径\r\n     */\r\n    private static importMap = new Map();\r\n\r\n    /**\r\n     * importrule 位置\r\n     */\r\n    private static importIndex = 0;\r\n\r\n    /**\r\n     * css class 前置名\r\n     */\r\n    private static cssPreName = '___nodommodule___';\r\n    \r\n    /**\r\n     * 处理style 元素\r\n     * @param module    模块\r\n     * @param dom       虚拟dom\r\n     * @param root      模块root dom\r\n     * @param add       是否添加根模块类名\r\n     * @returns         如果是styledom，则返回true，否则返回false\r\n     */\r\n    public static handleStyleDom(module:Module,dom:IRenderedDom,root:IRenderedDom,add?:boolean):boolean{\r\n        if(dom.tagName.toLowerCase() !== 'style'){\r\n            return false;\r\n        }\r\n        if(add){\r\n            let cls = this.cssPreName + module.id;\r\n            if(root.props['class']){\r\n                root.props['class'] = dom.props['class'] + ' ' + cls;\r\n            }else{\r\n                root.props['class'] = cls;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 处理 style 下的文本元素\r\n     * @param module    模块\r\n     * @param dom       style text element\r\n     * @returns         如果是styleTextdom返回true，否则返回false\r\n     */\r\n    public static handleStyleTextDom(module:Module,dom:IRenderedDom):boolean{\r\n        if(!dom.parent || dom.parent.tagName.toLowerCase() !== 'style'){\r\n            return false;\r\n        }\r\n        //scope=this，在模块根节点添加 限定 class\r\n        CssManager.addRules(module,dom.textContent,dom.parent.props['scope'] === 'this'?'.' + this.cssPreName + module.id:undefined);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 添加多个css rule\r\n     * @param cssText           rule集合 \r\n     * @param module            模块\r\n     * @param scopeName         作用域名(前置选择器)\r\n     */\r\n    public static addRules(module:Module,cssText:string,scopeName?:string){\r\n        //sheet 初始化\r\n        if(!this.sheet){\r\n            //safari不支持 cssstylesheet constructor，用 style代替\r\n            let sheet = document.createElement('style');\r\n            document.head.appendChild(sheet);\r\n            this.sheet = document.styleSheets[0];\r\n        }\r\n\r\n        //如果有作用域，则清除作用域下的rule\r\n        if(scopeName){\r\n            this.clearModuleRules(module);\r\n        }\r\n\r\n        //是否限定在模块内\r\n        //cssRule 获取正则式  @import\r\n        const reg = /(@[a-zA-Z]+\\s+url\\(.+?\\))|([.#@a-zA-Z]\\S*(\\s*\\S*\\s*?)?{)|\\}/g;\r\n\r\n        //import support url正则式\r\n        const regImp = /@[a-zA-Z]+\\s+url/;\r\n        \r\n        // keyframe font page support... 开始 位置\r\n        let startIndex:number=-1;\r\n        // { 个数，遇到 } -1 \r\n        let beginNum:number = 0;\r\n        let re;\r\n        while((re=reg.exec(cssText)) !== null){\r\n            if(regImp.test(re[0])){ //import namespace\r\n                handleImport(re[0]);\r\n            }else if(re[0] === '}'){ //回收括号，单个样式结束判断\r\n                if(startIndex>=0 && --beginNum <= 0){  //style @ end\r\n                    let txt = cssText.substring(startIndex,re.index+1);\r\n                    if(txt[0] === '@'){ //@开头\r\n                        this.sheet.insertRule(txt,CssManager.sheet.cssRules?CssManager.sheet.cssRules.length:0);\r\n                    }else{  //style\r\n                        handleStyle(module,txt,scopeName);\r\n                    }\r\n                    startIndex = -1;\r\n                    beginNum = 0;\r\n                }\r\n            }else{ //style 或 @内部\r\n                if(startIndex === -1){\r\n                    startIndex = re.index;\r\n                    beginNum++;\r\n                }else{\r\n                    beginNum++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        /**\r\n         * 处理style rule\r\n         * @param module         模块\r\n         * @param cssText        css 文本\r\n         * @param scopeName      作用域名(前置选择器)\r\n         * @returns              如果css文本最后一个\"{\"前没有字符串，则返回void   \r\n         */\r\n        function handleStyle(module:Module,cssText:string,scopeName?:string){\r\n            const reg = /.+(?=\\{)/; //匹配字符\"{\"前出现的所有字符\r\n            let r = reg.exec(cssText);\r\n            if(!r){\r\n                return;\r\n            }\r\n            // 保存样式名，在模块 object manager 中以数组存储\r\n            if(scopeName){\r\n                let arr = module.objectManager.get('$cssRules');\r\n                if(!arr){\r\n                    arr = [];\r\n                    module.objectManager.set('$cssRules',arr);\r\n                }\r\n                arr.push((scopeName + ' ' + r[0]));\r\n                //为样式添加 scope name\r\n                cssText = scopeName + ' ' + cssText;\r\n            }\r\n            //加入到样式表\r\n            CssManager.sheet.insertRule(cssText,CssManager.sheet.cssRules?CssManager.sheet.cssRules.length:0);\r\n        } \r\n\r\n        /**\r\n         * 处理import rule\r\n         * @param cssText   css文本\r\n         * @returns         如果cssText中\"()\"内有字符串且importMap中存在键值为\"()\"内字符串的第一个字符，则返回void\r\n         */\r\n        function handleImport(cssText:string){\r\n            let ind = cssText.indexOf('(');\r\n            let ind1 = cssText.lastIndexOf(')');\r\n            if(ind === -1 || ind1 === -1 || ind>=ind1){\r\n                return;\r\n            }\r\n            let css = cssText.substring(ind,ind1);\r\n            if(CssManager.importMap.has(css)){\r\n                return;\r\n            }\r\n            //插入import rule\r\n            CssManager.sheet.insertRule(cssText,CssManager.importIndex++);\r\n            CssManager.importMap.set(css,true);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * 清除模块css rules\r\n     * @param module  模块\r\n     * @returns       如果模块不存在css rules，则返回void \r\n     */\r\n    public static clearModuleRules(module:Module){\r\n        let rules = module.objectManager.get('$cssRules');\r\n        if(!rules || rules.length === 0){\r\n            return;\r\n        }\r\n        //从sheet清除\r\n        for(let i=0;i<this.sheet.cssRules.length;i++){\r\n            let r = this.sheet.cssRules[i];\r\n            if(r.selectorText && rules.indexOf(r.selectorText) !== -1){\r\n                this.sheet.deleteRule(i--);\r\n            }\r\n        }\r\n\r\n        //置空cache\r\n        module.objectManager.set('$cssRules',[]);\r\n    }\r\n}","import { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\nimport { IRenderedDom } from \"./types\";\r\n\r\n/**\r\n * 事件类\r\n * @remarks\r\n * 事件分为自有事件和代理事件\r\n * @author      yanglei\r\n * @since       1.0\r\n */\r\nexport class NEvent {\r\n    /**\r\n     * 事件id\r\n     */\r\n    public id: number;\r\n    /**\r\n     * 事件所属模块\r\n     */\r\n    public module:Module;\r\n    /**\r\n     * 事件名\r\n     */\r\n    public name: string;\r\n    /**\r\n     * 事件处理函数名(需要在模块中定义)\r\n     */\r\n    public handler: string | Function;\r\n    /**\r\n     * 代理模式，事件代理到父对象\r\n     */\r\n    public delg: boolean;\r\n    /**\r\n     * 禁止冒泡，代理模式下无效\r\n     */\r\n    public nopopo: boolean;\r\n    /**\r\n     * 只执行一次\r\n     */\r\n    public once: boolean;\r\n\r\n    /**\r\n     * 使用 capture，代理模式下无效\r\n     */\r\n    public capture: boolean;\r\n\r\n    /**\r\n     * 依赖事件，用于扩展事件存储原始事件\r\n     */\r\n    public dependEvent:NEvent;\r\n    \r\n\r\n    /**\r\n     * @param eventName     事件名\r\n     * @param eventStr      事件串或事件处理函数,以“:”分割,中间不能有空格,结构为: 方法名[:delg(代理到父对象):nopopo(禁止冒泡):once(只执行一次):capture(useCapture)]\r\n     *                      如果为函数，则替代第三个参数\r\n     * @param handler       事件执行函数，如果方法不在module methods中定义，则可以直接申明，eventStr第一个参数失效，即eventStr可以是\":delg:nopopo...\"\r\n     */\r\n    constructor(module:Module,eventName: string, eventStr?: string | Function, handler?: Function) {\r\n        this.id = Util.genId();\r\n        this.module = module;\r\n        this.name = eventName;\r\n        // GlobalCache.saveEvent(this);\r\n        //如果事件串不为空，则不需要处理\r\n        if (eventStr) {\r\n            let tp = typeof eventStr;\r\n            if (tp === 'string') {\r\n                let eStr: string = (<string>eventStr).trim();\r\n                eStr.split(':').forEach((item, i) => {\r\n                    item = item.trim();\r\n                    if (i === 0) { //事件方法\r\n                        this.handler = item;\r\n                    } else { //事件附加参数\r\n                        switch (item) {\r\n                            case 'delg':\r\n                                this.delg = true;\r\n                                break;\r\n                            case 'nopopo':\r\n                                this.nopopo = true;\r\n                                break;\r\n                            case 'once':\r\n                                this.once = true;\r\n                                break;\r\n                            case 'capture':\r\n                                this.capture = true;\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n\r\n            } else if (tp === 'function') {\r\n                handler = <Function>eventStr;\r\n            }\r\n        }\r\n        //新增事件方法（不在methods中定义）\r\n        if (handler) {\r\n            this.handler = handler;\r\n        }\r\n        \r\n        if (document.ontouchend) { //触屏设备\r\n            switch (this.name) {\r\n                case 'click':\r\n                    this.name = 'tap';\r\n                    break;\r\n                case 'mousedown':\r\n                    this.name = 'touchstart';\r\n                    break;\r\n                case 'mouseup':\r\n                    this.name = 'touchend';\r\n                    break;\r\n                case 'mousemove':\r\n                    this.name = 'touchmove';\r\n                    break;\r\n            }\r\n        } else { //转非触屏\r\n            switch (this.name) {\r\n                case 'tap':\r\n                    this.name = 'click';\r\n                    break;\r\n                case 'touchstart':\r\n                    this.name = 'mousedown';\r\n                    break;\r\n                case 'touchend':\r\n                    this.name = 'mouseup';\r\n                    break;\r\n                case 'touchmove':\r\n                    this.name = 'mousemove';\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置附加参数值\r\n     * @param module    模块\r\n     * @param dom       虚拟dom\r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    public setParam(module:Module,dom:IRenderedDom,name: string, value: any) {\r\n        module.objectManager.setEventParam(this.id,dom.key,name,value);\r\n    }\r\n\r\n    /**\r\n     * 获取附加参数值\r\n     * @param module    模块\r\n     * @param dom       虚拟dom\r\n     * @param name      参数名\r\n     * @returns         附加参数值\r\n     */\r\n    public getParam(module:Module,dom:IRenderedDom,name: string) {\r\n        return module.objectManager.getEventParam(this.id,dom.key,name);\r\n    }\r\n\r\n    /**\r\n     * 移除参数\r\n     * @param module    模块 \r\n     * @param dom       虚拟dom\r\n     * @param name      参数名\r\n     */\r\n    public removeParam(module:Module,dom:IRenderedDom,name: string) {\r\n        return module.objectManager.removeEventParam(this.id,dom.key,name);\r\n    }\r\n    /**\r\n     * 清参数cache\r\n     * @param module    模块\r\n     * @param dom       虚拟dom\r\n     */\r\n    public clearParam(module:Module,dom:IRenderedDom){\r\n        module.objectManager.clearEventParam(this.id,dom.key);\r\n    }\r\n}\r\n","import { NEvent } from \"./event\";\r\nimport { Module } from \"./module\";\r\nimport { IRenderedDom } from \"./types\";\r\n/**\r\n * 事件管理器\r\n */\r\nexport class EventManager {\r\n    /**\r\n     * 外部事件集\r\n     */\r\n    private static extendEventMap = new Map();\r\n\r\n    /**\r\n     * 绑定事件\r\n     * @param module \r\n     * @param dom \r\n     */\r\n    public static bind(module:Module,dom:IRenderedDom){\r\n        const eobj = module.eventFactory.getEvent(dom.key);\r\n        if(!eobj){\r\n            return;\r\n        }\r\n        \r\n        //判断并设置事件绑定标志\r\n        const parent = dom.parent;\r\n        for (let evt of eobj) {\r\n            if(evt[0] === 'bindMap'){\r\n                continue;\r\n            }\r\n            \r\n            //代理事件\r\n            if(evt[1].toDelg){\r\n                for(let i=0;i<evt[1].toDelg.length;i++){\r\n                    let ev = evt[1].toDelg[i];\r\n                    //事件添加到父dom\r\n                    module.eventFactory.addEvent(parent.key,ev,dom.key);\r\n                    module.eventFactory.bind(parent.key,evt[0],handler,ev.capture);\r\n                }\r\n            }\r\n            //自己的事件\r\n            if(evt[1].own){\r\n                // 保存handler\r\n                module.eventFactory.bind(dom.key,evt[0],handler,evt[1].capture);\r\n            }\r\n        }\r\n        \r\n        /**\r\n         * 事件handler\r\n         * @param e  Event\r\n         */\r\n        function handler(e) {\r\n            //从事件element获取事件\r\n            let el = e.currentTarget;\r\n            const dom = module.getVirtualDom(el['vdom']);\r\n            const eobj = module.eventFactory.getEvent(dom.key);\r\n            if(!dom || !eobj || !eobj.has(e.type)){\r\n                return;\r\n            }\r\n            const evts = eobj.get(e.type);\r\n            \r\n            if(evts.capture){ //先执行自己的事件\r\n                doOwn(evts.own);\r\n                doDelg(evts.delg);\r\n            }else{\r\n                if(!doDelg(evts.delg)){\r\n                    doOwn(evts.own);\r\n                }\r\n            }\r\n\r\n            if(evts.own && evts.own.length === 0){\r\n                delete evts.own;\r\n            }\r\n            if(evts.delg && evts.delg.length === 0){\r\n                delete evts.delg;\r\n            }\r\n            // if(!evts.own && !evts.delg){\r\n            //     module.eventFactory.unbind(dom.key,e.type);\r\n            // }\r\n\r\n            /**\r\n             * 处理自有事件\r\n             * @param events \r\n             * @returns \r\n             */\r\n            function doOwn(events){\r\n                if(!events){\r\n                    return;\r\n                }\r\n                let nopopo = false;\r\n                for(let i=0;i<events.length;i++){\r\n                    const ev = events[i];\r\n                    if(typeof ev.handler === 'string'){\r\n                        ev.handler = ev.module.getMethod(ev.handler);\r\n                    }\r\n                    if(!ev.handler){\r\n                        return;\r\n                    }\r\n                    ev.handler.apply((ev.module||module),[dom.model, dom,ev, e]);\r\n                    if(ev.once){  //移除事件\r\n                        events.splice(i--,1);\r\n                    }\r\n                    nopopo = ev.nopopo;\r\n                }\r\n                if(nopopo){\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 处理代理事件\r\n             * @param events \r\n             * @returns         是否禁止冒泡\r\n             */\r\n            function doDelg(events):boolean{\r\n                if(!events){\r\n                    return false;\r\n                }\r\n                let nopopo = false;\r\n                for(let i=0;i<events.length;i++){\r\n                    const evo = events[i];\r\n                    const ev = evo.event;\r\n                    if(typeof ev.handler === 'string'){\r\n                        ev.handler = ev.module.getMethod(ev.handler);\r\n                    }\r\n                    if(!ev.handler){\r\n                        return;\r\n                    }\r\n\r\n                    for(let j=0;j<e.path.length&&e.path[j]!==el;j++){\r\n                        if(e.path[j]['vdom'] === evo.key){\r\n                            let dom1 = module.getVirtualDom(evo.key);\r\n                            ev.handler.apply((ev.module||module),[dom1.model, dom1,ev, e]);\r\n                            nopopo = ev.nopopo;\r\n                            if(ev.once){  //移除代理事件，需要从被代理元素删除\r\n                                //从当前dom删除\r\n                                events.splice(i--,1);\r\n                                //从被代理dom删除\r\n                                module.eventFactory.removeEvent(dom1.key,ev,null,true);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return nopopo;\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * 处理外部事件\r\n     * @param dom       dom节点\r\n     * @param event     事件对象\r\n     * @returns         如果有是外部事件，则返回true，否则返回false\r\n     */\r\n    private static handleExtendEvent(module:Module,dom:IRenderedDom,event:NEvent):boolean{\r\n        let evts = this.get(event.name);\r\n        if (!evts) {\r\n            return false;\r\n        }\r\n        for(let key of Object.keys(evts)){\r\n            let ev = new NEvent(module,key,evts[key]);\r\n            ev.capture = event.capture;\r\n            ev.nopopo = event.nopopo;\r\n            ev.delg = event.delg;\r\n            ev.once = event.once;\r\n            //设置依赖事件\r\n            ev.dependEvent = event;\r\n            module.eventFactory.addEvent(dom.key,ev);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n      * 注册扩展事件\r\n      * @param eventName    事件名\r\n      * @param handleObj    事件处理集\r\n      */\r\n     public static regist(eventName:string,handleObj:any) {\r\n         this.extendEventMap.set(eventName,handleObj);\r\n     }\r\n \r\n     /**\r\n      * 取消注册扩展事件\r\n      * @param eventName     事件名\r\n      */\r\n     static unregist(eventName:string) {\r\n         return this.extendEventMap.delete(eventName);\r\n     }\r\n \r\n     /**\r\n      * 获取扩展事件\r\n      * @param eventName     事件名\r\n      * @returns             事件处理集\r\n      */\r\n      public static get(eventName:string):any{\r\n         return this.extendEventMap.get(eventName);\r\n     }\r\n}\r\n","import { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\nimport { Model } from \"./model\";\r\nimport { Expression } from \"./expression\";\r\nimport { CssManager } from \"./cssmanager\";\r\nimport { EventManager } from \"./eventmanager\";\r\nimport { IRenderedDom } from \"./types\";\r\n\r\n/**\r\n * 渲染器\r\n */\r\nexport class Renderer {\r\n    /**\r\n     * 等待渲染列表（模块名）\r\n     */\r\n    public static waitList: Array < number > = [];\r\n\r\n    /**\r\n     * 当前模块根dom\r\n     */\r\n    private static currentModuleRoot:IRenderedDom;\r\n    /**\r\n     * 添加到渲染列表\r\n     * @param module 模块\r\n     */\r\n    public static add(module:Module) {\r\n        //如果已经在列表中，不再添加\r\n        if (!module.dontAddToRender && !this.waitList.includes(module.id)) {\r\n            //计算优先级\r\n            this.waitList.push(module.id);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 队列渲染\r\n     */\r\n    public static render() {\r\n        for(;this.waitList.length>0;){\r\n            ModuleFactory.get(this.waitList.shift()).render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染dom\r\n     * @param module            模块 \r\n     * @param src               源dom\r\n     * @param model             模型，如果src已经带有model，则此参数无效\r\n     * @param parent            父dom\r\n     * @param key               key 附加key，放在domkey的后面\r\n     * @returns \r\n     */\r\n    public static renderDom(module:Module,src:VirtualDom,model:Model,parent?:IRenderedDom,key?:string):IRenderedDom{\r\n        let dst:IRenderedDom = {\r\n            key:key?src.key+'_'+key:src.key,\r\n            vdom:src\r\n        }\r\n        module.saveVirtualDom(dst);\r\n        \r\n        if(src.tagName){\r\n            dst.tagName = src.tagName;\r\n            dst.props = {};\r\n        }else{\r\n            dst.textContent = src.textContent;\r\n        }\r\n        \r\n        //设置model\r\n        model = src.model || model;\r\n        //设置当前根root\r\n        if(!parent){\r\n            this.currentModuleRoot = dst;\r\n        }else{\r\n            if(!model){\r\n                model = parent.model;\r\n            }\r\n            // 设置父对象\r\n            dst.parent = parent;\r\n        }\r\n        // 默认根model\r\n        if(!model){\r\n            model = module.model;\r\n        }\r\n        \r\n        dst.model = model;\r\n        dst.staticNum = src.staticNum;\r\n        if(src.staticNum>0){\r\n            src.staticNum--;\r\n        }\r\n        \r\n        //先处理model指令\r\n        if(src.directives && src.directives.length>0 && src.directives[0].type.name === 'model'){\r\n            src.directives[0].exec(module,dst,src);\r\n        }\r\n        if(dst.tagName){\r\n            if(!dst.notChange){\r\n                handleProps();\r\n                //处理style，如果为style，则不处理assets和events\r\n                if(!CssManager.handleStyleDom(module,src,Renderer.currentModuleRoot,src.getProp('scope') === 'this')){\r\n                    //assets\r\n                    if(src.assets && src.assets.size>0){\r\n                        for(let p of src.assets){\r\n                            dst[p[0]] = p[1];\r\n                        }\r\n                    }\r\n                }\r\n                if(!handleDirectives()){\r\n                    return dst;\r\n                }\r\n            }\r\n            \r\n            //复制源dom事件到事件工厂\r\n            if(src.events && !module.eventFactory.getEvent(dst.key)){\r\n                for(let evt of src.events){\r\n                    module.eventFactory.addEvent(dst.key,evt);\r\n                }\r\n            }\r\n            // 子节点\r\n            if(src.children && src.children.length>0){\r\n                dst.children = [];\r\n                for(let c of src.children){\r\n                    Renderer.renderDom(module,c,dst.model,dst,key?key:null);\r\n                }\r\n            }\r\n        }else if(!dst.notChange){\r\n            if(src.expressions){ //文本节点\r\n                let value = '';\r\n                src.expressions.forEach((v) => {\r\n                    if (v instanceof Expression) { //处理表达式\r\n                        let v1 = v.val(module,dst.model);\r\n                        value += v1 !== undefined ? v1 : '';\r\n                    } else {\r\n                        value += v;\r\n                    }\r\n                });\r\n                dst.textContent = value;\r\n                dst.staticNum = -1;\r\n            }else{\r\n                dst.textContent = src.textContent;\r\n            }\r\n        }\r\n        //添加到dom tree\r\n        if(parent){\r\n            parent.children.push(dst);\r\n        }\r\n        return dst;\r\n\r\n        /**\r\n         * 处理指令\r\n         * @returns     true继续执行，false不执行后续渲染代码\r\n         */\r\n        function handleDirectives():boolean {\r\n            if(!src.directives || src.directives.length===0){\r\n                return true;\r\n            }\r\n            dst.staticNum = -1;\r\n            for(let d of src.directives){\r\n                //model指令不执行\r\n                if(d.type.name==='model'){\r\n                    continue;\r\n                }\r\n                if(!d.exec(module,dst,src)){\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        \r\n        /**\r\n         * 处理属性（带表达式）\r\n         */\r\n        function handleProps() {\r\n            if(!src.props || src.props.size === 0){\r\n                return;\r\n            }\r\n            //因为存在大小写，所以用正则式进行匹配\r\n            const styleReg = /^style$/i;\r\n            const classReg = /^class$/i;\r\n            let value;\r\n            for(let k of src.props){\r\n                if(Array.isArray(k[1])){  //数组，需要合并\r\n                    value = [];\r\n                    for(let i=0;i<k[1].length;i++){\r\n                        let a = k[1][i];\r\n                        if(a instanceof Expression){\r\n                            value.push(a.val(module,dst.model));\r\n                            dst.staticNum = -1;\r\n                        }else{\r\n                            value.push(a);\r\n                        }\r\n                    }\r\n                    if(styleReg.test(k[0])){\r\n                        value = src.getStyleString(value);\r\n                    }else if(classReg.test(k[0])){\r\n                        value = src.getClassString(value);\r\n                    }\r\n                }else if(k[1] instanceof Expression){\r\n                    value = k[1].val(module,dst.model);\r\n                    dst.staticNum = -1;\r\n                }else{\r\n                    value = k[1];\r\n                }\r\n                dst.props[k[0]] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 渲染为html element\r\n     * @param module \t        模块\r\n     * @param src               渲染节点\r\n     * @param parentEl \t        父html\r\n     * @param isRenderChild     是否渲染子节点\r\n     */\r\n    public static renderToHtml(module: Module,src:IRenderedDom, parentEl:HTMLElement,isRenderChild?:boolean):Node {\r\n        let el = module.getNode(src.key);\r\n        if(el){   //html dom节点已存在\r\n            if(src.tagName){\r\n                let attrs = (<HTMLElement>el).attributes;\r\n                let arr = [];\r\n                for(let i=0;i<attrs.length;i++){\r\n                    arr.push(attrs[i].name);\r\n                }\r\n                //设置属性\r\n                for(let p of Object.keys(src.props)){\r\n                    (<HTMLElement>el).setAttribute(p,src.props[p]===undefined?'':src.props[p]);\r\n                    let ind;\r\n                    if((ind=arr.indexOf(p)) !== -1){\r\n                        arr.splice(ind,1);\r\n                    }\r\n                }\r\n                //清理多余attribute\r\n                if(arr.length>0){\r\n                    for(let a of arr){\r\n                        (<HTMLElement>el).removeAttribute(a);\r\n                    }\r\n                }\r\n                handleAssets(src,<HTMLElement>el);\r\n            }else{  //文本节点\r\n                (<any>el).textContent = src.textContent;\r\n            }\r\n        }else{\r\n            if(src.tagName){\r\n                el = newEl(src);\r\n            }else{\r\n                el = newText(src);\r\n            }\r\n            //先创建子节点，再添加到html dom树，避免频繁添加\r\n            if(el && src.tagName  && isRenderChild){\r\n                genSub(el, src);\r\n            }\r\n            if(el && parentEl){\r\n                parentEl.appendChild(el);\r\n            }\r\n        }\r\n        return el;\r\n        \r\n        /**\r\n         * 新建element节点\r\n         * @param dom \t\t虚拟dom\r\n         * @returns \t\t新的html element\r\n         */\r\n        function newEl(dom:IRenderedDom): HTMLElement {\r\n            //style不处理\r\n            if(dom.tagName.toLowerCase() === 'style'){\r\n                return;\r\n            }\r\n            //创建element\r\n            let el= document.createElement(dom.tagName);\r\n            //保存虚拟dom\r\n            el['vdom'] = dom.key;\r\n            \r\n            //把el引用与key关系存放到cache中\r\n            module.saveNode(dom.key,el);\r\n            //保存自定义key对应element\r\n            if(dom.props['key']){\r\n                module.saveElement(dom.props['key'],el);\r\n            }\r\n            //子模块容器的处理由子模块处理\r\n            if(!dom.subModuleId){\r\n                //设置属性\r\n                for(let p of Object.keys(dom.props)){\r\n                    el.setAttribute(p,dom.props[p]===undefined?'':dom.props[p]);\r\n                }\r\n                //asset\r\n                if(dom.assets){\r\n                    for (let p of Object.keys(dom.assets)) {\r\n                        el[p] = dom.assets[p];\r\n                    }\r\n                }\r\n                //处理event\r\n                EventManager.bind(module,dom);\r\n            }\r\n            return el;\r\n        }\r\n\r\n        /**\r\n         * 新建文本节点\r\n         */\r\n        function newText(dom:IRenderedDom): Node {\r\n            //样式表处理，如果是样式表文本，则不添加到dom树\r\n            if(CssManager.handleStyleTextDom(module,dom)){\r\n                 return;\r\n            }\r\n            let node = document.createTextNode(<string>dom.textContent || '');\r\n            module.saveNode(dom.key,node);\r\n            return node;\r\n        }\r\n\r\n        /**\r\n         * 生成子节点\r\n         * @param pEl \t父节点\r\n         * @param vdom  虚拟dom节点\t\r\n         */\r\n        function genSub(pEl: Node, vdom: IRenderedDom) {\r\n            if (vdom.children && vdom.children.length > 0) {\r\n                vdom.children.forEach(item => {\r\n                    let el1;\r\n                    if (item.tagName) {\r\n                        el1 = newEl(item);\r\n                        genSub(el1, item);\r\n                    } else {\r\n                        el1 = newText(item);\r\n                    }\r\n                    if(el1){\r\n                        pEl.appendChild(el1);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 处理assets\r\n         */\r\n        function handleAssets(dom:IRenderedDom,el:HTMLElement){\r\n            //处理asset\r\n            if (dom.assets) {\r\n                for (let k of Object.keys(dom.assets)) {\r\n                    el[k] = dom.assets[k];\r\n                }    \r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理更改的dom节点\r\n     * @param module        待处理模块\r\n     * @param changeDoms    更改的dom参数数组\r\n     */\r\n    public static handleChangedDoms(module:Module,changeDoms:any[]){\r\n        for(let item of changeDoms){\r\n            let[n1,n2,pEl] = [\r\n                item[1]?module.getNode(item[1].key):null,\r\n                item[2]&&typeof item[2]==='object'?module.getNode(item[2].key):null,\r\n                item[3]?module.getNode(item[3].key):null\r\n            ];\r\n            switch(item[0]){\r\n                case 1: //添加\r\n                    //把新dom缓存添加到旧dom缓存\r\n                    Renderer.renderToHtml(module,item[1],<HTMLElement>pEl,true);\r\n                    n1 = module.getNode(item[1].key);\r\n                    if(!n2){ //不存在添加节点或为索引号\r\n                        if(typeof item[2] === 'number' && pEl.childNodes.length-1>item[2]){\r\n                            pEl.insertBefore(n1,pEl.childNodes[item[2]]);\r\n                        }else{\r\n                            pEl.appendChild(n1);\r\n                        }\r\n                    }else{\r\n                        pEl.insertBefore(n1,n2);\r\n                    }\r\n                    break;\r\n                case 2: //修改\r\n                    Renderer.renderToHtml(module,item[1],null,false);\r\n                    break;\r\n                case 3: //删除\r\n                    //从模块移除（考虑子模块）\r\n                    module.removeNode(item[1],true);\r\n                    //从html dom树移除\r\n                    if(pEl && n1 && pEl.contains(n1)){\r\n                        pEl.removeChild(n1);\r\n                    }\r\n                    break;\r\n                case 4: //移动\r\n                    if(item[4] ){  //相对节点后\r\n                        if(n2&&n2.nextSibling){\r\n                            pEl.insertBefore(n1,n2.nextSibling);\r\n                        }else{\r\n                            pEl.appendChild(n1);\r\n                        }\r\n                    }else{\r\n                        pEl.insertBefore(n1,n2);\r\n                    }\r\n                    break;\r\n                default: //替换\r\n                    Renderer.renderToHtml(module,item[1],<HTMLElement>pEl,true);\r\n                    n1 = module.getNode(item[1].key);\r\n                    if(pEl){\r\n                        pEl.replaceChild(n1,n2);\r\n                    }\r\n                    \r\n            }\r\n        }\r\n    }\r\n}","import { IRouteCfg } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 路由类\r\n */\r\n export class Route {\r\n    /**\r\n     * 路由id\r\n     */\r\n    id:number;\r\n    /**\r\n     * 路由参数名数组\r\n     */\r\n    params:Array<string> = [];\r\n    /**\r\n     * 路由参数数据\r\n     */\r\n    data:any = {};\r\n    /**\r\n     * 子路由\r\n     */\r\n    children:Array<Route> = [];\r\n    /**\r\n     * 进入路由事件方法\r\n     */\r\n    onEnter:Function;\r\n    /**\r\n     * 离开路由方法\r\n     */\r\n    onLeave:Function;\r\n    \r\n    /**\r\n     * 路由路径\r\n     */\r\n    path:string;\r\n    /**\r\n     * 完整路径\r\n     */\r\n    fullPath:string;\r\n\r\n    /**\r\n     * 路由对应模块对象或类或模块类名\r\n     */\r\n    module:any;\r\n    \r\n    /**\r\n     * 模块路径，当module为类名时需要，默认执行延迟加载\r\n     */\r\n    modulePath:string;\r\n\r\n    /**\r\n     * 父路由\r\n     */\r\n    parent:Route;\r\n\r\n    /**\r\n     * \r\n     * @param config 路由配置项\r\n     */\r\n    constructor(config?:IRouteCfg,parent?:Route) {\r\n        if (!config || Util.isEmpty(config.path)) {\r\n            return;\r\n        }\r\n        this.id = Util.genId();\r\n        //参数赋值\r\n        for(let o in config){\r\n            this[o] = config[o];   \r\n        }\r\n        this.parent = parent;\r\n        //解析路径\r\n        if(this.path){\r\n            this.parse();\r\n        }\r\n        if(parent){\r\n            parent.addChild(this);\r\n        }\r\n        //子路由\r\n        if (config.routes && Array.isArray(config.routes)) {\r\n            config.routes.forEach((item) => {\r\n                new Route(item,this);\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 添加子路由\r\n     * @param child \r\n     */\r\n    public addChild(child:Route){\r\n        this.children.push(child);\r\n        child.parent = this;\r\n    }\r\n\r\n    /**\r\n     * 通过路径解析路由对象\r\n     */\r\n    private parse(){\r\n        let pathArr:Array<string> = this.path.split('/');\r\n        let node:Route = this.parent;\r\n        let param:Array<string> = [];\r\n        let paramIndex:number = -1; //最后一个参数开始\r\n        let prePath:string = '';    //前置路径\r\n        for (let i = 0; i < pathArr.length; i++) {\r\n            let v = pathArr[i].trim();\r\n            if (v === '') {\r\n                pathArr.splice(i--, 1);\r\n                continue;\r\n            }\r\n\r\n            if (v.startsWith(':')) { //参数\r\n                if (param.length === 0) {\r\n                    paramIndex = i;\r\n                }\r\n                param.push(v.substring(1));\r\n            } else {\r\n                paramIndex = -1;\r\n                param = []; //上级路由的参数清空\r\n                this.path = v; //暂存path\r\n                let j = 0;\r\n                for (; j < node.children.length; j++) {\r\n                    let r = node.children[j];\r\n                    if (r.path === v) {\r\n                        node = r;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //没找到，创建新节点\r\n                if (j === node.children.length) {\r\n                    if (prePath !== '') {\r\n                        new Route({ path: prePath},node);\r\n                        node = node.children[node.children.length - 1];\r\n                    }\r\n                    prePath = v;\r\n                }\r\n            }\r\n\r\n            //不存在参数\r\n            this.params = paramIndex===-1?[]:param;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @returns 克隆对象\r\n     */\r\n    clone(){\r\n        let r = new Route();\r\n        Object.getOwnPropertyNames(this).forEach(item=>{\r\n            if(item === 'data'){    \r\n                return;\r\n            }\r\n            r[item] = this[item];\r\n        });\r\n        if(this.data){\r\n            r.data = Util.clone(this.data);\r\n        }\r\n        return r;\r\n    }\r\n}","import { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { Route } from \"./route\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\n\r\n/**\r\n * 应用初始化配置类型\r\n */\r\n/**\r\n * 路由配置\r\n */\r\nexport interface IRouteCfg {\r\n    /**\r\n     * 路由路径，可以带通配符*，可以带参数 /:\r\n     */\r\n    path?: string;\r\n    \r\n    /**\r\n     * 路由对应模块对象或类或模块类名\r\n     */\r\n    module?:any;\r\n\r\n    /**\r\n     * 模块路径，当module为类名时需要，默认执行延迟加载\r\n     */\r\n    modulePath?:string;\r\n    /**\r\n     * 子路由数组\r\n     */\r\n    routes?: Array<IRouteCfg>;\r\n\r\n    /**\r\n     * 进入路由事件方法\r\n     */\r\n    onEnter?: Function;\r\n    /**\r\n     * 离开路由方法\r\n     */\r\n    onLeave?: Function;\r\n    \r\n    /**\r\n     * 父路由\r\n     */\r\n    parent?: Route;\r\n}\r\n\r\n/**\r\n * 模块状态类型\r\n */\r\nexport enum EModuleState {\r\n    INITED = 1,\r\n    UNACTIVE=2,\r\n    RENDERED=4\r\n}\r\n\r\n/**\r\n * 渲染后的节点接口\r\n */\r\nexport interface IRenderedDom{\r\n    /**\r\n     * 元素名，如div\r\n     */\r\n    tagName?: string;\r\n\r\n    /**\r\n     * key，整颗虚拟dom树唯一\r\n     */\r\n    key: string;\r\n \r\n    /**\r\n      * 绑定模型\r\n     */\r\n    model?: Model;\r\n\r\n    /**\r\n     * 是否静态节点\r\n     */\r\n    isStatic?:boolean;\r\n\r\n    /**\r\n     * 直接属性 不是来自于attribute，而是直接作用于html element，如el.checked,el.value等\r\n     */\r\n    assets?: Object;\r\n\r\n    /**\r\n     * 静态属性(attribute)集合\r\n     * {prop1:value1,...}\r\n     */\r\n    props?: Object;\r\n \r\n    /**\r\n     * element为textnode时有效\r\n     */\r\n    textContent?: string;\r\n\r\n    /**\r\n     * 子节点数组[]\r\n     */\r\n    children?: Array<IRenderedDom>;\r\n\r\n    /**\r\n     * 父虚拟dom\r\n     */\r\n    parent?: IRenderedDom;\r\n\r\n     /**\r\n      * staticNum 静态标识数\r\n      *  0 表示静态，不进行比较\r\n      *  > 0 每次比较后-1\r\n      *  < 0 不处理\r\n      */\r\n    staticNum?: number;\r\n \r\n    /**\r\n     * 子模块id，模块容器时有效\r\n     */\r\n    subModuleId?: number;\r\n\r\n    /**\r\n     * 未改变标志，本次不渲染\r\n     */\r\n    notChange?: boolean;\r\n\r\n    /**\r\n     * 源虚拟dom\r\n     */\r\n    vdom?: VirtualDom;\r\n}\r\n\r\n","import { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Route } from \"./route\";\r\nimport { EModuleState } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 路由管理类\r\n * @since \t1.0\r\n */\r\nexport class Router {\r\n    /**\r\n     * 当前路径\r\n     */\r\n    public static currentPath: string;\r\n\r\n    /**\r\n     * path等待链表\r\n     */\r\n    private static waitList: Array<string> = [];\r\n\r\n    /**\r\n     * 默认路由进入事件方法\r\n     */\r\n    private static onDefaultEnter: Function;\r\n    /**\r\n     * 默认路由离开事件\r\n     */\r\n    private static onDefaultLeave: Function;\r\n\r\n    /**\r\n     * 启动方式 0:直接启动 1:popstate 启动\r\n     */\r\n    public static startStyle: number = 0;\r\n\r\n    /**\r\n     * 激活Dom map，格式为{moduleId:[]}\r\n     */\r\n    private static activeFieldMap: Map<number, Array<any>> = new Map();\r\n\r\n    /**\r\n     * 绑定到module的router指令对应的key，即router容器对应的key，格式为 {moduleId:routerKey,...}\r\n     */\r\n    public static routerKeyMap: Map<number, string> = new Map();\r\n\r\n    /**\r\n     * 根路由\r\n     */\r\n    public static root:Route = new Route();\r\n\r\n    /**\r\n     * 基础路径，实际显示路径为 basePath+routePath\r\n     */\r\n    public static basePath:string;\r\n    \r\n    /**\r\n     * 把路径加入跳转列表(准备跳往该路由)\r\n     * @param path \t路径 \r\n     */\r\n    static go(path: string) {\r\n        //相同路径不加入\r\n        if (path === this.currentPath) {\r\n            return;\r\n        }\r\n\r\n        //添加路径到等待列表，已存在，不加入\r\n        if (this.waitList.indexOf(path) === -1) {\r\n            this.waitList.push(path);\r\n        }\r\n\r\n        //延迟加载，避免同一个路径多次加入\r\n        setTimeout(() => {\r\n            this.load();\r\n        }, 0);\r\n    }\r\n\r\n    /**\r\n     * 启动加载\r\n     */\r\n    private static load() {\r\n        //在加载，或无等待列表，则返回\r\n        if (this.waitList.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let path: string = this.waitList.shift();\r\n        this.start(path).then(() => {\r\n            //继续加载\r\n            this.load();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 切换路由\r\n     * @param path \t路径\r\n     */\r\n    private static async start(path: string) {\r\n        let diff = this.compare(this.currentPath, path);\r\n        // 当前路由依赖的容器模块\r\n        let parentModule: Module;\r\n        if (diff[0] === null) {\r\n            parentModule = ModuleFactory.getMain();\r\n        } else {\r\n            parentModule = await this.getModule(diff[0]);\r\n        }\r\n\r\n        //onleave事件，从末往前执行\r\n        for (let i = diff[1].length - 1; i >= 0; i--) {\r\n            const r = diff[1][i];\r\n            if (!r.module) {\r\n                continue;\r\n            }\r\n            let module: Module = await this.getModule(r);\r\n            if (Util.isFunction(this.onDefaultLeave)) {\r\n                this.onDefaultLeave(module.model);\r\n            }\r\n            if (Util.isFunction(r.onLeave)) {\r\n                r.onLeave(module.model);\r\n            }\r\n            // 清理map映射\r\n            this.activeFieldMap.delete(module.id);\r\n            //module置为不激活\r\n            module.unactive();\r\n        }\r\n        if (diff[2].length === 0) { //路由相同，参数不同\r\n            let route: Route = diff[0];\r\n            if (route !== null) {\r\n                let module: Module = await this.getModule(route);\r\n                // 模块处理\r\n                this.dependHandle(module, route, diff[3] ? diff[3].module : null);\r\n            }\r\n        } else { //路由不同\r\n            //加载模块\r\n            for (let ii = 0; ii < diff[2].length; ii++) {\r\n                let route: Route = diff[2][ii];\r\n\r\n                //路由不存在或路由没有模块（空路由）\r\n                if (!route || !route.module) {\r\n                    continue;\r\n                }\r\n\r\n                let module: Module = await this.getModule(route);\r\n\r\n                // 模块处理\r\n                this.dependHandle(module, route, parentModule);\r\n                //默认全局路由enter事件\r\n                if (Util.isFunction(this.onDefaultEnter)) {\r\n                    this.onDefaultEnter(module.model);\r\n                }\r\n                //当前路由进入事件\r\n                if (Util.isFunction(route.onEnter)) {\r\n                    route.onEnter(module.model);\r\n                }\r\n                parentModule = module;\r\n            }\r\n        }\r\n\r\n        //如果是history popstate，则不加入history\r\n        if (this.startStyle === 0) {\r\n            let path1:string = Router.basePath + path;\r\n            //子路由，替换state\r\n            if (path.startsWith(this.currentPath)) {\r\n                history.replaceState(path1, '', path1);\r\n            } else { //路径push进history\r\n                history.pushState(path1, '', path1);\r\n            }\r\n        }\r\n        //修改currentPath\r\n        this.currentPath = path;\r\n        //设置start类型为正常start\r\n        this.startStyle = 0;\r\n    }\r\n\r\n    /*\r\n     * 重定向\r\n     * @param path \t路径\r\n     */\r\n    public static redirect(path: string) {\r\n        this.go(path);\r\n    }\r\n\r\n    /**\r\n     * 获取module\r\n     * @param route 路由对象 \r\n     * @returns     路由对应模块\r\n     */\r\n    private static async getModule(route: Route) {\r\n        let module = route.module;\r\n        //已经是模块实例\r\n        if (typeof module === 'object') {\r\n            return module;\r\n        }\r\n        //非模块类，是加载函数\r\n        if (!module.__proto__.name) {\r\n            const m = await module();\r\n            //通过import的模块，查找模块类\r\n            for(let k of Object.keys(m)){\r\n                if(m[k].name){\r\n                    module = m[k];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //模块类\r\n        if (typeof module === 'function') {\r\n            module = ModuleFactory.get(module);\r\n        }\r\n        route.module = module;\r\n        return module;\r\n    }\r\n    /**\r\n     * 比较两个路径对应的路由链\r\n     * @param path1 \t第一个路径\r\n     * @param path2 \t第二个路径\r\n     * @returns \t\t数组 [父路由或不同参数的路由，第一个需要销毁的路由数组，第二个需要增加的路由数组，不同参数路由的父路由]\r\n     */\r\n    private static compare(path1: string, path2: string): Array<any> {\r\n        // 获取路由id数组\r\n        let arr1: Array<Route> = null;\r\n        let arr2: Array<Route> = null;\r\n\r\n        if (path1) {\r\n            //采用克隆方式复制，避免被第二个路径返回的路由覆盖参数\r\n            arr1 = this.getRouteList(path1, true);\r\n        }\r\n        if (path2) {\r\n            arr2 = this.getRouteList(path2);\r\n        }\r\n\r\n        let len = 0;\r\n        if (arr1 !== null) {\r\n            len = arr1.length;\r\n        }\r\n\r\n        if (arr2 !== null) {\r\n            if (arr2.length < len) {\r\n                len = arr2.length;\r\n            }\r\n        } else {\r\n            len = 0;\r\n        }\r\n        //需要销毁的旧路由数组\r\n        let retArr1 = [];\r\n        //需要加入的新路由数组\r\n        let retArr2 = [];\r\n        let i = 0;\r\n        for (i = 0; i < len; i++) {\r\n            //找到不同路由开始位置\r\n            if (arr1[i].id === arr2[i].id) {\r\n                //比较参数\r\n                if (JSON.stringify(arr1[i].data) !== JSON.stringify(arr2[i].data)) {\r\n                    i++;\r\n                    break;\r\n                }\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        //旧路由改变数组\r\n        if (arr1 !== null) {\r\n            retArr1 = arr1.slice(i);\r\n        }\r\n\r\n        //新路由改变数组（相对于旧路由）\r\n        if (arr2 !== null) {\r\n            retArr2 = arr2.slice(i);\r\n        }\r\n\r\n        //上一级路由或参数不同的当前路由\r\n        let p1: Route = null;\r\n        //上二级路由或参数不同路由的上一级路由\r\n        let p2: Route = null;\r\n        if (arr2 && i > 0) {\r\n            // 可能存在空路由，需要向前遍历\r\n            for (let j = i - 1; j >= 0; j--) {\r\n                if (!p1) {\r\n                    if (arr2[j].module) {\r\n                        p1 = arr2[j];\r\n                        continue;\r\n                    }\r\n                } else if (!p2) {\r\n                    if (arr2[j].module) {\r\n                        p2 = arr2[j];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return [p1, retArr1, retArr2, p2];\r\n    }\r\n\r\n    /**\r\n     * 添加激活字段\r\n     * @param module    模块 \r\n     * @param path      路由路径\r\n     * @param model     激活字段所在model\r\n     * @param field     字段名\r\n     */\r\n    public static addActiveField(module: Module, path: string, model: any, field: string) {\r\n        if (!model || !field) {\r\n            return;\r\n        }\r\n        let arr = Router.activeFieldMap.get(module.id);\r\n        if (!arr) {  //尚未存在，新建\r\n            Router.activeFieldMap.set(module.id, [{ path: path, model: model, field: field }]);\r\n        } else if (arr.find(item => item.model === model && item.field === field) === undefined) {  //不重复添加\r\n            arr.push({ path: path, model: model, field: field });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 依赖模块相关处理\r\n     * @param module \t模块\r\n     * @param pm        依赖模块\r\n     * @param path \t\tview对应的route路径\r\n     */\r\n    private static dependHandle(module: Module, route: Route, pm: Module) {\r\n        const me = this;\r\n        //深度激活\r\n        module.active();\r\n        //设置参数\r\n        let o = {\r\n            path: route.path\r\n        };\r\n        if (!Util.isEmpty(route.data)) {\r\n            o['data'] = route.data;\r\n        }\r\n        module.model['$route'] = o;\r\n        if(pm){\r\n            if(pm.state === EModuleState.RENDERED){  //被依赖模块处于渲染后状态\r\n                module.setContainer(<HTMLElement>pm.getNode(Router.routerKeyMap.get(pm.id)));\r\n                this.setDomActive(pm, route.fullPath);\r\n            } else { //被依赖模块不处于被渲染后状态\r\n                pm.addRenderOps(function (m, p) {\r\n                    module.setContainer(<HTMLElement>m.getNode(Router.routerKeyMap.get(m.id)));\r\n                    me.setDomActive(m, p);\r\n                }, 1, [pm, route.fullPath], true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置路由元素激活属性\r\n     * @param module    模块 \r\n     * @param path      路径\r\n     * @returns \r\n     */\r\n    private static setDomActive(module: Module, path: string) {\r\n        let arr = Router.activeFieldMap.get(module.id);\r\n        if (!arr) {\r\n            return;\r\n        }\r\n        for (let o of arr) {\r\n            o.model[o.field] = o.path === path;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 获取路由数组\r\n     * @param path \t要解析的路径\r\n     * @param clone 是否clone，如果为false，则返回路由树的路由对象，否则返回克隆对象\r\n     * @returns     路由对象数组\r\n     */\r\n    static getRouteList(path: string, clone?: boolean): Array<Route> {\r\n        if (!this.root) {\r\n            return [];\r\n        }\r\n        let pathArr: string[] = path.split('/');\r\n        let node: Route = this.root;\r\n\r\n        let paramIndex: number = 0;      //参数索引\r\n        let retArr: Array<Route> = [];\r\n        let fullPath: string = '';       //完整路径\r\n        let preNode: Route = this.root;  //前一个节点\r\n\r\n        for (let i = 0; i < pathArr.length; i++) {\r\n            let v: string = pathArr[i].trim();\r\n            if (v === '') {\r\n                continue;\r\n            }\r\n            let find: boolean = false;\r\n            for (let j = 0; j < node.children.length; j++) {\r\n                if (node.children[j].path === v) {\r\n                    //设置完整路径\r\n                    if (preNode !== this.root) {\r\n                        preNode.fullPath = fullPath;\r\n                        preNode.data = node.data;\r\n                        retArr.push(preNode);\r\n                    }\r\n\r\n                    //设置新的查找节点\r\n                    node = clone ? node.children[j].clone() : node.children[j];\r\n                    //参数清空\r\n                    node.data = {};\r\n                    preNode = node;\r\n                    find = true;\r\n                    //参数索引置0\r\n                    paramIndex = 0;\r\n                    break;\r\n                }\r\n            }\r\n            //路径叠加\r\n            fullPath += '/' + v;\r\n            //不是孩子节点,作为参数\r\n            if (!find) {\r\n                if (paramIndex < node.params.length) { //超出参数长度的废弃\r\n                    node.data[node.params[paramIndex++]] = v;\r\n                }\r\n            }\r\n        }\r\n\r\n        //最后一个节点\r\n        if (node !== this.root) {\r\n            node.fullPath = fullPath;\r\n            retArr.push(node);\r\n        }\r\n        return retArr;\r\n    }\r\n}\r\n\r\n//处理popstate事件\r\nwindow.addEventListener('popstate', function (e) {\r\n    //根据state切换module\r\n    const state = history.state;\r\n    if (!state) {\r\n        return;\r\n    }\r\n    Router.startStyle = 1;\r\n    Router.go(state);\r\n});\r\n","import { NError } from \"./error\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 调度器，用于每次空闲的待操作序列调度\r\n */\r\nexport class Scheduler{\r\n\tprivate static tasks:Array<any> = [];\r\n\tpublic static dispatch(){\r\n\t\tScheduler.tasks.forEach((item)=>{\r\n\t\t\tif(Util.isFunction(item.func)){\r\n\t\t\t\tif(item.thiser){\r\n\t\t\t\t\titem.func.call(item.thiser);\r\n\t\t\t\t}else{\r\n\t\t\t\t\titem.func();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 启动调度器\r\n\t * @param scheduleTick \t渲染间隔\r\n\t */\r\n\tpublic static start(scheduleTick?:number){\r\n\t\tScheduler.dispatch();\r\n\t\tif(window.requestAnimationFrame){\r\n\t\t\twindow.requestAnimationFrame(Scheduler.start);\r\n\t\t}else{\r\n\t\t\twindow.setTimeout(Scheduler.start,scheduleTick||50);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * 添加任务\r\n\t * @param foo \t\t任务和this指向\r\n\t * @param thiser \tthis指向\r\n\t */\r\n\tpublic static addTask(foo:Function,thiser?:any){\r\n\t\tif(!Util.isFunction(foo)){\r\n\t\t\tthrow new NError(\"invoke\",\"Scheduler.addTask\",\"0\",\"function\");\r\n\t\t}\r\n\t\t\r\n\t\tScheduler.tasks.push({func:foo,thiser:thiser});\r\n\t}\r\n\r\n\t/**\r\n\t * 移除任务\r\n\t * @param foo \t任务\r\n\t */\r\n\tpublic static removeTask(foo){\r\n\t\tif(!Util.isFunction(foo)){\r\n\t\t\tthrow new NError(\"invoke\",\"Scheduler.removeTask\",\"0\",\"function\");\r\n\t\t}\r\n\t\tlet ind = -1;\r\n\t\tif((ind = Scheduler.tasks.indexOf(foo)) !== -1){\r\n\t\t\tScheduler.tasks.splice(ind,1);\r\n\t\t}\t\r\n\t}\r\n}\r\n","import { DirectiveManager } from \"./directivemanager\";\r\nimport { NError } from \"./error\";\r\nimport { NodomMessage_en } from \"./locales/msg_en\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { Route } from \"./route\";\r\nimport { Router } from \"./router\";\r\nimport { Scheduler } from \"./scheduler\";\r\nimport { IRouteCfg } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 新建store方法\r\n */\r\n/**\r\n * nodom提示消息\r\n */\r\nexport var NodomMessage;\r\n/**\r\n * 新建一个App\r\n * @param clazz     模块类\r\n * @param el        el选择器\r\n */\r\nexport function nodom(clazz:any,el:string){\r\n    //渲染器启动渲染\r\n    Scheduler.addTask(Renderer.render, Renderer);\r\n    //启动调度器\r\n    Scheduler.start();\r\n    NodomMessage = NodomMessage_en;\r\n    let mdl = ModuleFactory.get(clazz);\r\n    mdl.setContainer(document.querySelector(el));\r\n    mdl.active();\r\n}\r\n\r\n/**\r\n * 暴露的创建路由方法\r\n * @param config  数组或单个配置\r\n */\r\nexport function createRoute(config: IRouteCfg | Array<IRouteCfg>,parent?:Route): Route {\r\n    let route:Route;\r\n    parent = parent || Router.root;\r\n    if (Util.isArray(config)) {\r\n        for (let item of <Array<IRouteCfg>>config) {\r\n            route = new Route(item,parent);\r\n        }\r\n    } else {\r\n        route = new Route(<IRouteCfg>config,parent);\r\n    }\r\n    return route;\r\n}\r\n\r\n/**\r\n * 创建指令\r\n * @param name      指令名 \r\n * @param priority  优先级（1最小，1-10为框架保留优先级）\r\n * @param init      初始化方法\r\n * @param handler   渲染时方法\r\n */\r\nexport function createDirective(name: string, handler: Function,priority?: number) {\r\n    return DirectiveManager.addType(name,handler,priority);\r\n}\r\n\r\n/**\r\n * 注册模块\r\n * @param clazz     模块类\r\n * @param name      注册名，如果没有，则为类名\r\n */\r\nexport function registModule(clazz:any,name?:string){\r\n    ModuleFactory.addClass(clazz,name);\r\n}\r\n\r\n/**\r\n * ajax 请求\r\n * @param config    object 或 string\r\n *                  如果为string，则直接以get方式获取资源\r\n *                  object 项如下:\r\n *                  参数名|类型|默认值|必填|可选值|描述\r\n *                  -|-|-|-|-|-\r\n *                  url|string|无|是|无|请求url\r\n *\t\t\t\t\tmethod|string|GET|否|GET,POST,HEAD|请求类型\r\n *\t\t\t\t\tparams|Object/FormData|{}|否|无|参数，json格式\r\n *\t\t\t\t\tasync|bool|true|否|true,false|是否异步\r\n *  \t\t\t\ttimeout|number|0|否|无|请求超时时间\r\n *                  type|string|text|否|json,text|\r\n *\t\t\t\t\twithCredentials|bool|false|否|true,false|同源策略，跨域时cookie保存\r\n *                  header|Object|无|否|无|request header 对象\r\n *                  user|string|无|否|无|需要认证的请求对应的用户名\r\n *                  pwd|string|无|否|无|需要认证的请求对应的密码\r\n *                  rand|bool|无|否|无|请求随机数，设置则浏览器缓存失效\r\n */\r\nexport async function request(config): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        if (typeof config === 'string') {\r\n            config = {\r\n                url: config\r\n            }\r\n        }\r\n        config.params = config.params || {};\r\n        //随机数\r\n        if (config.rand) { //针对数据部分，仅在app中使用\r\n            config.params.$rand = Math.random();\r\n        }\r\n        let url: string = config.url;\r\n        const async: boolean = config.async === false ? false : true;\r\n        const req: XMLHttpRequest = new XMLHttpRequest();\r\n        //设置同源策略\r\n        req.withCredentials = config.withCredentials;\r\n        //类型默认为get\r\n        const method: string = (config.method || 'GET').toUpperCase();\r\n        //超时，同步时不能设置\r\n        req.timeout = async ? config.timeout : 0;\r\n\r\n        req.onload = () => {\r\n            if (req.status === 200) {\r\n                let r = req.responseText;\r\n                if (config.type === 'json') {\r\n                    try {\r\n                        r = JSON.parse(r);\r\n                    } catch (e) {\r\n                        reject({ type: \"jsonparse\" });\r\n                    }\r\n                }\r\n                resolve(r);\r\n            } else {\r\n                reject({ type: 'error', url: url });\r\n            }\r\n        }\r\n\r\n        req.ontimeout = () => reject({ type: 'timeout' });\r\n        req.onerror = () => reject({ type: 'error', url: url });\r\n        //上传数据\r\n        let data = null;\r\n        switch (method) {\r\n            case 'GET':\r\n                //参数\r\n                let pa: string;\r\n                if (Util.isObject(config.params)) {\r\n                    let ar: string[] = [];\r\n                    Util.getOwnProps(config.params).forEach(function (key) {\r\n                        ar.push(key + '=' + config.params[key]);\r\n                    });\r\n                    pa = ar.join('&');\r\n                }\r\n                if (pa !== undefined) {\r\n                    if (url.indexOf('?') !== -1) {\r\n                        url += '&' + pa;\r\n                    } else {\r\n                        url += '?' + pa;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            case 'POST':\r\n                if (config.params instanceof FormData) {\r\n                    data = config.params;\r\n                } else {\r\n                    let fd: FormData = new FormData();\r\n                    for (let o in config.params) {\r\n                        fd.append(o, config.params[o]);\r\n                    }\r\n                    data = fd;\r\n                }\r\n                break;\r\n        }\r\n\r\n        req.open(method, url, async, config.user, config.pwd);\r\n        //设置request header\r\n        if (config.header) {\r\n            Util.getOwnProps(config.header).forEach((item) => {\r\n                req.setRequestHeader(item, config.header[item]);\r\n            })\r\n        }\r\n        req.send(data);\r\n    }).catch((re) => {\r\n        switch (re.type) {\r\n            case \"error\":\r\n                throw new NError(\"notexist1\", NodomMessage.TipWords['resource'], re.url);\r\n            case \"timeout\":\r\n                throw new NError(\"timeout\");\r\n            case \"jsonparse\":\r\n                throw new NError(\"jsonparse\");\r\n        }\r\n    });\r\n}","import { DirectiveManager } from \"./directivemanager\";\r\nimport { DirectiveType } from \"./directivetype\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\nimport { Expression } from \"./expression\";\r\nimport { NError } from \"./error\";\r\nimport { NodomMessage } from \"./nodom\";\r\nimport { IRenderedDom } from \"./types\";\r\n\r\n/**\r\n * 指令类\r\n */\r\nexport  class Directive {\r\n    /**\r\n     * 指令id\r\n     */\r\n    public id:number;\r\n\r\n    /**\r\n     * 指令类型\r\n     */\r\n    public type:DirectiveType;\r\n    \r\n    /**\r\n     * 指令值\r\n     */\r\n    public value:any;\r\n    \r\n    /**\r\n     * 表达式\r\n     */\r\n    public expression:Expression;\r\n\r\n    /**\r\n     * 禁用指令\r\n     */\r\n    public disabled:boolean;\r\n\r\n    /**\r\n     * 指令参数\r\n     */\r\n    public params:any;\r\n    /**\r\n     * 构造方法\r\n     * @param type  \t类型名\r\n     * @param value \t指令值\r\n     */\r\n    constructor(type?:string,value?:string|Expression) {\r\n        this.id = Util.genId();\r\n        if(type){\r\n            this.type = DirectiveManager.getType(type);\r\n            if(!this.type){\r\n                throw new NError('notexist1',NodomMessage.TipWords['directive'],type);\r\n            }\r\n        }\r\n        \r\n        if (Util.isString(value)) {\r\n            this.value = (<string>value).trim();\r\n        }else if(value instanceof Expression){\r\n            this.expression = value;\r\n        }else{\r\n            this.value = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行指令\r\n     * @param module    模块\r\n     * @param dom       渲染目标节点对象\r\n     * @param src       源节点\r\n     * @returns         true/false\r\n     */\r\n    public exec(module:Module,dom:IRenderedDom,src:VirtualDom):boolean {\r\n        //禁用，不执行\r\n        if(this.disabled){\r\n            return true;\r\n        }\r\n        if(this.expression){\r\n            this.value = this.expression.val(module,dom.model);\r\n        }\r\n        return this.type.handle.apply(this,[module,dom,src]);\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone():Directive{\r\n        let d = new Directive();\r\n        d.type = this.type;\r\n        d.expression = this.expression;\r\n        d.value = this.value;\r\n        return d;\r\n    }\r\n}\r\n","\r\nimport { Directive } from \"./directive\";\r\nimport { DirectiveManager } from \"./directivemanager\";\r\nimport { NEvent } from \"./event\";\r\nimport { Expression } from \"./expression\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { IRenderedDom } from \"./types\";\r\nimport { Util } from \"./util\";\r\n\r\n/**\r\n * 虚拟dom\r\n */\r\nexport class VirtualDom {\r\n    /**\r\n     * 元素名，如div\r\n     */\r\n    public tagName: string;\r\n\r\n    /**\r\n     * key，整颗虚拟dom树唯一\r\n     */\r\n    public key: string;\r\n\r\n    /**\r\n     * 绑定模型\r\n     */\r\n    public model: Model;\r\n\r\n    /**\r\n     * element为textnode时有效\r\n     */\r\n    public textContent: string;\r\n\r\n    /**\r\n     * 表达式+字符串数组，用于textnode\r\n     */\r\n    public expressions: Array<Expression | string>;\r\n\r\n    /**\r\n     * 指令集\r\n     */\r\n    public directives: Directive[];\r\n\r\n    /**\r\n     * 直接属性 不是来自于attribute，而是直接作用于html element，如el.checked,el.value等\r\n     */\r\n    public assets: Map<string, any>;\r\n\r\n    /**\r\n     * 属性(attribute)集合\r\n     * {prop1:value1,...}\r\n     * 属性值可能是值，也可能是表达式，还可能是数组，当为子模块时，存在从props传递过来的属性，如果模块模版存在相同属性，则会变成数组。\r\n     */\r\n    public props: Map<string, any>;\r\n\r\n    /**\r\n     * 删除的class名数组\r\n     */\r\n    removedClassMap:Map<string,boolean>;\r\n\r\n    /**\r\n     * 删除的style属性名map\r\n     */\r\n    removedStyleMap:Map<string,boolean>;\r\n\r\n    /**\r\n     * 事件数组\r\n     */\r\n    public events: Array<NEvent>;\r\n\r\n    /**\r\n     * 子节点数组[]\r\n     */\r\n    public children: Array<VirtualDom>;\r\n\r\n    /**\r\n     * 父虚拟dom\r\n     */\r\n    public parent: VirtualDom;\r\n\r\n    /**\r\n     * staticNum 静态标识数\r\n     *  0 表示静态，不进行比较\r\n     *  > 0 每次比较后-1\r\n     *  < 0 不处理\r\n     */\r\n    public staticNum: number = 0;\r\n\r\n    /**\r\n     * 对应的所有表达式的字段都属于dom model内\r\n     */\r\n    public allModelField: boolean = true;\r\n\r\n    /**\r\n     * 未改变标志，本次不渲染\r\n     */\r\n    public notChange: boolean;\r\n\r\n    /**\r\n     * 渲染后节点，isStatic为true时保留\r\n     */\r\n    public renderedDom:IRenderedDom;\r\n\r\n    /**\r\n     * @param tag       标签名\r\n     * @param key       key\r\n     */\r\n    constructor(tag?: string, key?: string, module?: Module) {\r\n        this.key = key || ((module ? module.getDomKeyId() : Util.genId()) + '');\r\n        if (tag) {\r\n            this.tagName = tag;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除多个指令\r\n     * @param directives \t待删除的指令类型数组或指令类型\r\n     * @returns             如果虚拟dom上的指令集为空，则返回void\r\n     */\r\n    public removeDirectives(directives: string[]) {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        //数组\r\n        directives.forEach(d => {\r\n            this.removeDirective(d);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 移除指令\r\n     * @param directive \t待删除的指令类型名\r\n     * @returns             如果虚拟dom上的指令集为空，则返回void\r\n     */\r\n    public removeDirective(directive: string) {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n\r\n        let ind;\r\n        if ((ind = this.directives.findIndex(item => item.type.name === directive)) !== -1) {\r\n            this.directives.splice(ind, 1);\r\n        }\r\n        if (this.directives.length === 0) {\r\n            delete this.directives;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加指令\r\n     * @param directive     指令对象\r\n     * @param sort          是否排序\r\n     * @returns             如果虚拟dom上的指令集不为空，且指令集中已经存在传入的指令对象，则返回void\r\n     */\r\n    public addDirective(directive: Directive, sort?: boolean) {\r\n        if (!this.directives) {\r\n            this.directives = [];\r\n        } else if (this.directives.find(item => item.type.name === directive.type.name)) {\r\n            return;\r\n        }\r\n        this.directives.push(directive);\r\n        //指令按优先级排序\r\n        if (sort) {\r\n            this.sortDirective();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指令排序\r\n     * @returns           如果虚拟dom上指令集为空，则返回void\r\n     */\r\n    public sortDirective() {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        if (this.directives.length > 1) {\r\n            this.directives.sort((a, b) => {\r\n                return DirectiveManager.getType(a.type.name).prio < DirectiveManager.getType(b.type.name).prio ? -1 : 1;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否有某个类型的指令\r\n     * @param typeName \t    指令类型名\r\n     * @returns             如果指令集不为空，且含有传入的指令类型名则返回true，否则返回false\r\n     */\r\n    public hasDirective(typeName: string): boolean {\r\n        return this.directives && this.directives.findIndex(item => item.type.name === typeName) !== -1;\r\n    }\r\n\r\n    /**\r\n     * 获取某个类型的指令\r\n     * @param module            模块\r\n     * @param directiveType \t指令类型名\r\n     * @returns                 如果指令集为空，则返回void；否则返回指令类型名等于传入参数的指令对象\r\n     */\r\n    public getDirective(directiveType: string): Directive {\r\n        if (!this.directives) {\r\n            return;\r\n        }\r\n        return this.directives.find(item => item.type.name === directiveType);\r\n    }\r\n\r\n    /**\r\n     * 添加子节点\r\n     * @param dom       子节点 \r\n     * @param index     指定位置，如果不传此参数，则添加到最后\r\n     */\r\n    public add(dom:VirtualDom,index?:number){\r\n        if (!this.children) {\r\n            this.children = [];\r\n        }\r\n        if(index){\r\n            this.children.splice(index,0,dom);\r\n        }else{\r\n            this.children.push(dom);\r\n        }\r\n        dom.parent = this;\r\n    }\r\n\r\n    /**\r\n     * 移除子节点\r\n     * @param dom   子节点\r\n     */\r\n    public remove(dom:VirtualDom){\r\n        let index = this.children.indexOf(dom);\r\n        if(index !== -1){\r\n            this.children.splice(index,1);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 添加css class\r\n     * @param cls class名或表达式,可以多个，以“空格”分割\r\n     */\r\n    public addClass(cls: string|Expression) {\r\n        this.addProp('class',cls);\r\n        //需要从remove class map 移除\r\n        if(this.removedClassMap && this.removedClassMap.size>0){\r\n            let arr = (<string>cls).trim().split(/\\s+/);\r\n            for(let a of arr){\r\n                if(a === ''){\r\n                    continue;\r\n                }\r\n                this.removedClassMap.delete(a);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除css class，因为涉及到表达式，此处只记录删除标识\r\n     * @param cls class名,可以多个，以“空格”分割\r\n     */\r\n    public removeClass(cls: string) {\r\n        let pv = this.getProp('class');\r\n        if(!pv){\r\n            return;\r\n        }\r\n        if(!this.removedClassMap){\r\n            this.removedClassMap = new Map();\r\n        }\r\n        let arr = cls.trim().split(/\\s+/);\r\n        for(let a of arr){\r\n            if(a === ''){\r\n                continue;\r\n            }\r\n            this.removedClassMap.set(a,true);\r\n        }\r\n        this.setStaticOnce();\r\n    }\r\n\r\n    /**\r\n     * 获取class串\r\n     * @returns class 串\r\n     */\r\n    public getClassString(values):string{\r\n        let clsArr = [];\r\n        for(let pv of values){\r\n            let arr = pv.trim().split(/\\s+/);\r\n            for (let a of arr) {\r\n                if(!this.removedClassMap || !this.removedClassMap.has(a)){\r\n                    if (!clsArr.includes(a)) {\r\n                        clsArr.push(a);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(clsArr.length>0){\r\n            return clsArr.join(' ');\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * 添加style\r\n     *  @param style style字符串或表达式\r\n     */\r\n    public addStyle(style: string|Expression) {\r\n        this.addProp('style',style);\r\n        if(typeof style === 'string'){\r\n            //需要从remove class map 移除\r\n            if(this.removedStyleMap && this.removedStyleMap.size>0){\r\n                let arr = style.trim().split(/\\s*;\\s*/);\r\n                for(let a of arr){\r\n                    if(a === ''){\r\n                        continue;\r\n                    }\r\n                    let sa1 = a.split(/\\s*:\\s*/);\r\n                    let p = sa1[0].trim();\r\n                    if(p !== ''){\r\n                        this.removedClassMap.delete(sa1[0].trim());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除style\r\n     * @param styleStr style字符串，多个style以空格' '分割\r\n     */\r\n    public removeStyle(styleStr: string) {\r\n        if(!this.removedClassMap){\r\n            this.removedClassMap = new Map();\r\n        }\r\n        let arr = styleStr.trim().split(/\\s+/);\r\n        for(let a of arr){\r\n            if (a === '') {\r\n                continue;\r\n            }\r\n            this.removedClassMap.set(a,true);\r\n        }\r\n        this.setStaticOnce();\r\n    }\r\n\r\n    /**\r\n     * 获取style串\r\n     * @returns style 串\r\n     */\r\n    public getStyleString(values):string{\r\n        let map = new Map();\r\n        for(let pv of values){\r\n            let sa = pv.trim().split(/\\s*;\\s*/);\r\n            for (let s of sa) {\r\n                if (s === '') {\r\n                    continue;\r\n                }\r\n                let sa1 = s.split(/\\s*:\\s*/);\r\n                //不在移除style map才能加入\r\n                if(!this.removedStyleMap || !this.removedStyleMap.has(sa1[0])){\r\n                    map.set(sa1[0], sa1[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(map.size>0){\r\n            return [...map].map(item => item.join(':')).join(';');\r\n        }\r\n    }\r\n    /**\r\n     * 是否拥有属性\r\n     * @param propName  属性名\r\n     * @param isExpr    是否只检查表达式属性\r\n     * @returns         如果属性集含有传入的属性名返回true，否则返回false\r\n     */\r\n    public hasProp(propName: string) {\r\n        if (this.props) {\r\n            return this.props.has(propName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取属性值\r\n     * @param propName  属性名\r\n     * @param isExpr    是否只获取表达式属性\r\n     * @returns         传入属性名的value\r\n     */\r\n    public getProp(propName: string, isExpr?: boolean) {\r\n        if (this.props) {\r\n            return this.props.get(propName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置属性值\r\n     * @param propName  属性名\r\n     * @param v         属性值\r\n     */\r\n    public setProp(propName: string, v: any) {\r\n        if (!this.props) {\r\n            this.props = new Map();\r\n        }\r\n        if(propName === 'style'){  \r\n            if(this.removedStyleMap){ //清空removedStyleMap\r\n                this.removedStyleMap.clear();\r\n            }\r\n        }else if(propName === 'class'){ \r\n            if(this.removedClassMap){ //清空removedClassMap\r\n                this.removedClassMap.clear();\r\n            }\r\n        }\r\n        this.props.set(propName, v);\r\n    }\r\n\r\n    /**\r\n     * 添加属性，如果原来的值存在，则属性值变成数组\r\n     * @param pName     属性名\r\n     * @param pValue    属性值\r\n     */\r\n    public addProp(pName,pValue):boolean{\r\n        let pv = this.getProp(pName);\r\n        if(!pv){\r\n            this.setProp(pName,pValue);\r\n        }else if(Array.isArray(pv)){\r\n            if(pv.includes(pValue)){\r\n                return false;\r\n            }\r\n            pv.push(pValue);\r\n        }else if(pv !== pValue){\r\n            this.setProp(pName,[pv,pValue]);\r\n        }else{\r\n            return false;\r\n        }\r\n        this.setStaticOnce();\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 删除属性\r\n     * @param props     属性名或属性名数组\r\n     * @returns         如果虚拟dom上的属性集为空，则返回void\r\n     */\r\n    public delProp(props: string | string[]) {\r\n        if (!this.props) {\r\n            return;\r\n        }\r\n        if (Util.isArray(props)) {\r\n            for (let p of <string[]>props) {\r\n                this.props.delete(p);\r\n            }\r\n        } else {\r\n            this.props.delete(<string>props);\r\n        }\r\n        //设置静态标志，至少要比较一次\r\n        this.setStaticOnce();\r\n    }\r\n\r\n    /**\r\n     * 设置asset\r\n     * @param assetName     asset name\r\n     * @param value         asset value\r\n     */\r\n    public setAsset(assetName: string, value: any) {\r\n        if (!this.assets) {\r\n            this.assets = new Map();\r\n        }\r\n        this.assets.set(assetName, value);\r\n    }\r\n\r\n    /**\r\n     * 删除asset\r\n     * @param assetName     asset name\r\n     * @returns             如果虚拟dom上的直接属性集为空，则返回void\r\n     */\r\n    public delAsset(assetName: string) {\r\n        if (!this.assets) {\r\n            return;\r\n        }\r\n        this.assets.delete(assetName);\r\n    }\r\n\r\n    /**\r\n     * 获取html dom\r\n     * @param module    模块 \r\n     * @returns         对应的html dom\r\n     */\r\n    public getEl(module: Module): Node {\r\n        return module.getNode(this.key);\r\n    }\r\n\r\n    /**\r\n     * 查找子孙节点\r\n     * @param key \telement key\r\n     * @returns\t\t虚拟dom/undefined\r\n     */\r\n    public query(key: string) {\r\n        if (this.key === key) {\r\n            return this;\r\n        }\r\n        if (this.children) {\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                let dom = this.children[i].query(key);\r\n                if (dom) {\r\n                    return dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置cache参数\r\n     * @param module    模块\r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    public setParam(module: Module, name: string, value: any) {\r\n        module.objectManager.setDomParam(this.key, name, value);\r\n    }\r\n\r\n    /**\r\n     * 获取参数值\r\n     * @param module    模块 \r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    public getParam(module: Module, name: string) {\r\n        return module.objectManager.getDomParam(this.key, name);\r\n    }\r\n\r\n    /**\r\n     * 移除参数\r\n     * @param module    模块\r\n     * @param name      参数名\r\n     */\r\n    public removeParam(module: Module, name: string) {\r\n        module.objectManager.removeDomParam(this.key, name);\r\n    }\r\n\r\n    /**\r\n     * 设置单次静态标志\r\n     */\r\n    private setStaticOnce() {\r\n        if (this.staticNum !== -1) {\r\n            this.staticNum = 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     */\r\n    public clone(): VirtualDom {\r\n        let dst: VirtualDom = new VirtualDom(this.tagName, this.key);\r\n        if (this.tagName) {\r\n            //属性\r\n            if (this.props && this.props.size > 0) {\r\n                for (let p of this.props) {\r\n                    dst.setProp(p[0], p[1]);\r\n                }\r\n            }\r\n\r\n            if (this.assets && this.assets.size > 0) {\r\n                for (let p of this.assets) {\r\n                    dst.setAsset(p[0], p[1]);\r\n                }\r\n            }\r\n\r\n            if (this.directives && this.directives.length > 0) {\r\n                dst.directives = [];\r\n                for (let d of this.directives) {\r\n                    dst.directives.push(d.clone());\r\n                }\r\n            }\r\n            //复制事件\r\n            dst.events = this.events;\r\n\r\n            //子节点clone\r\n            if (this.children) {\r\n                for (let c of this.children) {\r\n                    dst.add(c.clone());\r\n                }\r\n            }\r\n        } else {\r\n            dst.expressions = this.expressions;\r\n            dst.textContent = this.textContent;\r\n        }\r\n        dst.staticNum = this.staticNum;\r\n        return dst;\r\n    }\r\n\r\n    /**\r\n     * 保存事件\r\n     * @param key       dom key \r\n     * @param event     事件对象\r\n     */\r\n    public addEvent(event: NEvent) {\r\n        if (!this.events) {\r\n            this.events = [];\r\n        }\r\n        this.events.push(event);\r\n    }\r\n}\r\n","import { DefineElementManager } from \"./defineelementmanager\";\r\nimport { Directive } from \"./directive\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\nimport { NError } from \"./error\";\r\nimport { NEvent } from \"./event\";\r\nimport { Expression } from \"./expression\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\n\r\nexport class Compiler {\r\n    /**\r\n     * 模块\r\n     */\r\n    private module:Module;\r\n\r\n    /**\r\n     * 根结点\r\n     */\r\n    private root:VirtualDom;\r\n    /**\r\n     * 构造器\r\n     * @param module \r\n     */\r\n    constructor(module:Module){\r\n        this.module = module;\r\n    }\r\n    /**\r\n    * 编译\r\n    * @param elementStr     待编译html串\r\n    * @returns              虚拟dom\r\n    */\r\n    public compile(elementStr: string): VirtualDom {\r\n        return this.compileTemplate(elementStr);\r\n    }\r\n\r\n    /**\r\n     * 编译模版串\r\n     * @param srcStr    源串\r\n     * @returns         \r\n     */\r\n    private compileTemplate(srcStr:string):VirtualDom{\r\n        const me = this;\r\n        // 清理comment\r\n        srcStr = srcStr.replace(/\\<\\!\\-\\-[\\s\\S]*?\\-\\-\\>/g,'');\r\n        // 正则式分解标签和属性\r\n        // const regWhole = /((?<!\\\\)'[\\s\\S]*?(?<!\\\\)')|((?<!\\\\)\"[\\s\\S]*?(?<!\\\\)\")|((?<!\\\\)`[\\s\\S]*?(?<!\\\\)`)|({{{*)|(}*}})|([\\w$-]+(\\s*=)?)|(<\\s*[a-zA-Z][a-zA-Z0-9-_]*)|(\\/?>)|(<\\/\\s*[a-zA-Z][a-zA-Z0-9-_]*>)/g;\r\n        const regWhole = /('[\\s\\S]*?')|(\"[\\s\\S]*?\")|(`[\\s\\S]*?`)|({{{*)|(}*}})|([\\w$-]+(\\s*=)?)|(<\\s*[a-zA-Z][a-zA-Z0-9-_]*)|(\\/?>)|(<\\/\\s*[a-zA-Z][a-zA-Z0-9-_]*>)/g;\r\n        //属性名正则式\r\n        const propReg = /^[a-zA-Z_$][$-\\w]*?\\s*?=?$/;\r\n        //不可见字符正则式\r\n        const regSpace = /^[\\s\\n\\r\\t\\v]+$/;\r\n        //dom数组\r\n        let domArr = [];\r\n        //已闭合的tag，与domArr对应\r\n        let closedTag = [];\r\n        //文本开始index\r\n        let txtStartIndex = 0;\r\n        //属性值\r\n        let propName:string;\r\n        //pre标签标志\r\n        let isPreTag:boolean = false;\r\n        //当前标签名\r\n        let tagName:string;\r\n        //表达式开始index\r\n        let exprStartIndex = 0;\r\n        //表达式计数器\r\n        let exprCount = 0;\r\n        //当前dom节点\r\n        let dom;\r\n        //正则式匹配结果\r\n        let result;\r\n        while((result = regWhole.exec(srcStr)) !== null){\r\n            let re = result[0];\r\n            if(re.startsWith('{{')){  //表达式开始符号\r\n                //整除2个数\r\n                if(exprCount === 0){ //表达式开始\r\n                    exprStartIndex = result.index;\r\n                }\r\n                exprCount += re.length/2 | 0;  \r\n            }else if(re.endsWith('}}')){  //表达式结束\r\n                exprCount -= re.length/2 | 0;\r\n                if(exprCount === 0){\r\n                    handleExpr();\r\n                }\r\n            }\r\n            \r\n            //不在表达式中\r\n            if(exprCount === 0){\r\n                if(re[0] === '<'){ //标签\r\n                    //处理文本\r\n                    handleText(srcStr.substring(txtStartIndex,result.index));\r\n                    if(re[1] === '/'){ //标签结束\r\n                        finishTag(re);\r\n                    }else{ //标签开始\r\n                        tagName = re.substring(1).trim().toLowerCase();\r\n                        txtStartIndex = undefined;\r\n                        isPreTag = (tagName === 'pre');\r\n                        //新建dom节点\r\n                        dom = new VirtualDom(tagName,this.genKey());\r\n                        //第一个dom为root\r\n                        if(!me.root){\r\n                            me.root = dom;\r\n                        }\r\n                        domArr.push(dom);\r\n                        closedTag.push(false);\r\n                    }\r\n                }else if(re === '>'){ //标签头结束\r\n                    finishTagHead();\r\n                }else if(re === '/>'){ //标签结束\r\n                    finishTag();\r\n                }else if(dom&&dom.tagName){ //属性\r\n                    if(propReg.test(re)){\r\n                        if(propName){ //propName=无值 情况，当无值处理\r\n                            handleProp();\r\n                        }\r\n                        if(re.endsWith('=')){ //属性带=，表示后续可能有值\r\n                            propName = re.substring(0,re.length-1).trim();\r\n                        }else{ //只有属性，无属性值\r\n                            propName = re;\r\n                            handleProp();\r\n                        }\r\n                    }else if(propName){ //属性值\r\n                        handleProp(re);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //异常情况\r\n        if(domArr.length>1 || exprCount!==0){\r\n            throw new NError('wrongTemplate');\r\n        }\r\n        return domArr[0];\r\n\r\n        /**\r\n         * 标签结束\r\n         * @param ftag      结束标签\r\n         */\r\n        function finishTag(ftag?:string){\r\n            if(ftag){\r\n                let finded = false;\r\n                const tag = ftag.substring(2,ftag.length-1).trim().toLowerCase();\r\n                //反向查找\r\n                for(let i=domArr.length-1;i>=0;i--){\r\n                    if(!closedTag[i] && domArr[i].tagName === tag){\r\n                        domArr[i].children = domArr.slice(i+1);\r\n                        //设置parent\r\n                        for(let d of domArr[i].children){\r\n                            d.parent = domArr[i];\r\n                            extraHandle(d);\r\n                        }\r\n                        //删除后续节点\r\n                        domArr.splice(i+1);\r\n                        //标注该节点已闭合\r\n                        closedTag.splice(i+1);\r\n                        finded = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!finded){\r\n                    throw new NError('wrongTemplate');\r\n                }\r\n            }\r\n            \r\n            //设置标签关闭\r\n            let ele = domArr[domArr.length-1];\r\n            if(ele === me.root){\r\n                extraHandle(ele);\r\n            }\r\n            closedTag[closedTag.length-1] = true;\r\n            dom = undefined;\r\n            propName = undefined;\r\n            txtStartIndex = regWhole.lastIndex;\r\n            exprCount = 0;\r\n            exprStartIndex = 0;\r\n            // ele.allModelField = allModelField;    \r\n        }\r\n\r\n        /**\r\n         * 特殊处理\r\n         * @param dom   待处理节点 \r\n         */\r\n        function extraHandle(dom:VirtualDom){\r\n            //文本不处理\r\n            if(!dom.tagName){\r\n                return;\r\n            }\r\n            me.postHandleNode(dom);\r\n            dom.sortDirective();\r\n            me.handleSlot(dom);\r\n        }\r\n\r\n        /**\r\n         * 标签头结束\r\n         */\r\n        function finishTagHead(){\r\n            if(dom){\r\n                txtStartIndex = regWhole.lastIndex;\r\n            }\r\n            dom = undefined;\r\n            propName = undefined;\r\n            exprCount = 0;\r\n            exprStartIndex = 0;\r\n        }\r\n\r\n        /**\r\n         * 处理属性\r\n         * @param value     属性值\r\n         */\r\n        function handleProp(value?:any){\r\n            if(!dom || !propName){\r\n                return;\r\n            }\r\n            if(value){\r\n                let r;\r\n                //去掉字符串两端\r\n                if(['\"',\"'\",'`'].includes(value[0]) && ['\"',\"'\",'`'].includes(value[value.length-1])){\r\n                    value = value.substring(1,value.length-1).trim();\r\n                }\r\n            }\r\n            //指令\r\n            if (propName.startsWith(\"x-\")) {\r\n                //不排序\r\n                dom.addDirective(new Directive(propName.substring(2), value));\r\n            } else if (propName.startsWith(\"e-\")) { //事件\r\n                dom.addEvent(new NEvent(me.module,propName.substring(2), value));\r\n            } else { //普通属性\r\n                dom.setProp(propName, value);\r\n            }\r\n            propName = undefined;\r\n            \r\n        }\r\n\r\n        /**\r\n         * 处理表达式\r\n         */\r\n        function handleExpr(){\r\n            //处理表达式前的文本\r\n            if(txtStartIndex>0 && exprStartIndex>txtStartIndex){\r\n                handleText(srcStr.substring(txtStartIndex,exprStartIndex));\r\n            }\r\n            const s = srcStr.substring(exprStartIndex+2,regWhole.lastIndex-2);\r\n            exprCount = 0;\r\n            exprStartIndex = 0;\r\n            //新建表达式\r\n            let expr = new Expression(s);\r\n            if(dom && dom.tagName){ //标签\r\n                handleProp(expr);\r\n            }else{ //文本节点\r\n                setTxtDom(expr);\r\n                //文本节点，移动txt节点开始位置\r\n                txtStartIndex = regWhole.lastIndex;\r\n            }\r\n            //设置所有字段都在model内标识\r\n            dom.allModelField = expr.allModelField;\r\n        }\r\n\r\n        /**\r\n         * 处理txt为文本节点\r\n         * @param txt 文本串\r\n         */\r\n        function handleText(txt:string):VirtualDom {\r\n            if(txt === '' || !isPreTag && regSpace.test(txt)){ //非pre 标签且全为不可见字符，不处理\r\n                return;\r\n            }\r\n            txt = me.preHandleText(txt);\r\n            setTxtDom(txt);\r\n        }\r\n\r\n        /**\r\n         * 新建文本节点\r\n         * @param txt   文本串\r\n         */\r\n        function setTxtDom(txt){\r\n            if(!dom){\r\n                dom = new VirtualDom(null,me.genKey());\r\n                domArr.push(dom);\r\n                closedTag.push(false);\r\n            }\r\n            if(dom.expressions){\r\n                dom.expressions.push(txt);\r\n            }else{\r\n                if(typeof txt === 'string'){ //字符串\r\n                    dom.textContent = txt;\r\n                }else{ //表达式\r\n                    if(dom.textContent){ //之前的文本进数组\r\n                        dom.expressions = [dom.textContent,txt];\r\n                        delete dom.textContent;\r\n                    }else{\r\n                        dom.expressions = [txt];\r\n                    }\r\n                }  \r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * 处理模块子节点为slot节点\r\n     * @param dom   dom节点\r\n     */\r\n    private handleSlot(dom:VirtualDom){\r\n        if(!dom.children || dom.children.length === 0 || !dom.hasDirective('module')){\r\n            return;\r\n        }\r\n        let slotCt:VirtualDom;\r\n        for(let j=0;j<dom.children.length;j++){\r\n            let c = dom.children[j];\r\n            if(c.hasDirective('slot')){ //带slot的不处理\r\n                continue;\r\n            }\r\n            if(!slotCt){//第一个直接被slotCt替换\r\n                slotCt = new VirtualDom('div',this.genKey());\r\n                slotCt.addDirective(new Directive('slot',null));\r\n                //当前位置，用slot替代\r\n                dom.children.splice(j,1,slotCt);\r\n            }else{\r\n                //直接删除\r\n                dom.children.splice(j--,1);\r\n            }\r\n            slotCt.add(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 后置处理\r\n     * 包括：模块类元素、自定义元素\r\n     * @param node  虚拟dom节点\r\n     */\r\n    private postHandleNode(node:VirtualDom){\r\n        // 自定义元素判断\r\n        let clazz = DefineElementManager.get(node.tagName);\r\n        if(clazz){ //自定义元素\r\n            Reflect.construct(clazz,[node,this.module]);\r\n        }\r\n        // 模块类判断\r\n        if (ModuleFactory.hasClass(node.tagName)) {\r\n            const dir:Directive = new Directive('module',node.tagName);\r\n            dir.params = {srcId:this.module.id};\r\n            node.addDirective(dir);\r\n            node.tagName = 'div';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 预处理html保留字符 如 &nbsp;,&lt;等\r\n     * @param str   待处理的字符串\r\n     * @returns     解析之后的串\r\n     */\r\n    private preHandleText(str: string): string {\r\n        let reg = /&[a-z]+;/;\r\n        if(reg.test(str)){\r\n            let div = document.createElement('div');\r\n            div.innerHTML = str;\r\n            return div.textContent;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 产生dom key\r\n     * @returns   dom key\r\n     */\r\n    private genKey():string{\r\n        return this.module.getDomKeyId() + '';\r\n    }\r\n}\r\n","import { IRenderedDom } from \"./types\";\r\n/**\r\n * 比较器\r\n */\r\nexport class DiffTool{\r\n    /**\r\n     * 比较节点\r\n     * @param src           待比较节点（新树节点）\r\n     * @param dst \t        被比较节点 (旧树节点)\r\n     * @param changeArr     增删改的节点数组\r\n     * @returns\t            [[type(add 1, upd 2,del 3,move 4 ,rep 5),dom(操作节点),dom1(被替换或修改节点),parent(父节点),loc(位置)]]\r\n     */\r\n    public static compare(src:IRenderedDom,dst:IRenderedDom,changeArr:Array<any>) {\r\n        if (!src.tagName) { //文本节点\r\n            if (!dst.tagName) {\r\n                if ((src.staticNum || dst.staticNum) && src.textContent !== dst.textContent) {\r\n                    addChange(2,src,null,dst.parent);\r\n                }\r\n            } else { //节点类型不同\r\n                addChange(5,src,null, dst.parent);\r\n            }\r\n        } else { \r\n            //相同子模块节点不比较\r\n            if(src.subModuleId && src.subModuleId === dst.subModuleId){\r\n                return;\r\n            }\r\n            //element节点\r\n            if (src.tagName !== dst.tagName) { //节点类型不同\r\n                addChange(5,src,null, dst.parent);\r\n            }else if(src.staticNum || dst.staticNum){ //节点类型相同，但有一个不是静态节点，进行属性和asset比较\r\n                let change = false;\r\n                for(let p of ['props','assets']){\r\n                    //属性比较\r\n                    if(!src[p] && dst[p] || src[p] && !dst[p]){\r\n                        change = true;\r\n                    }else if(src[p] && dst[p]){\r\n                        let keys = Object.keys(src[p]);\r\n                        let keys1 = Object.keys(dst[p]);\r\n                        if(keys.length !== keys1.length){\r\n                            change = true;\r\n                        }else{\r\n                            for(let k of keys){\r\n                                if(src[p][k] !== dst[p][k]){\r\n                                    change = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(change){\r\n                    addChange(2,src,null,dst.parent);    \r\n                }\r\n            }\r\n        }\r\n        if(src.staticNum>0){\r\n            src.staticNum--;\r\n        }\r\n        \r\n        //子节点处理\r\n        if (!src.children || src.children.length === 0) {\r\n            // 旧节点的子节点全部删除\r\n            if (dst.children && dst.children.length > 0) {\r\n                dst.children.forEach(item => addChange(3,item,null,dst));\r\n            }\r\n        } else {\r\n            //全部新加节点\r\n            if (!dst.children || dst.children.length === 0) {\r\n                src.children.forEach(item => addChange(1, item,null, dst));\r\n            } else { //都有子节点\r\n                //存储比较后需要add的key\r\n                let addObj={};\r\n                //子节点对比策略\r\n                let [oldStartIdx, oldStartNode, oldEndIdx, oldEndNode] = [0, dst.children[0], dst.children.length - 1, dst.children[dst.children.length - 1]];\r\n                let [newStartIdx, newStartNode, newEndIdx, newEndNode] = [0, src.children[0], src.children.length - 1, src.children[src.children.length - 1]];\r\n                while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n                    if (sameKey(oldStartNode, newStartNode)) {\r\n                        DiffTool.compare(newStartNode,oldStartNode, changeArr);\r\n                        newStartNode = src.children[++newStartIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    } else if (sameKey(oldEndNode, newEndNode)) {\r\n                        DiffTool.compare(newEndNode,oldEndNode, changeArr);\r\n                        newEndNode = src.children[--newEndIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    } else if (sameKey(newStartNode, oldEndNode)) {\r\n                        //新前旧后\r\n                        DiffTool.compare(newStartNode,oldEndNode, changeArr);\r\n                       //跳过插入点会提前移动的节点\r\n                        while(addObj.hasOwnProperty(oldStartNode.key)){\r\n                            changeArr[addObj[oldStartNode.key]][0] = 4;\r\n                            delete addObj[oldStartNode.key];\r\n                            oldStartNode = dst.children[++oldStartIdx];\r\n                        }\r\n                         //接在待操作老节点前面\r\n                        addChange(4,oldEndNode,  oldStartNode,dst);\r\n                        newStartNode = src.children[++newStartIdx];\r\n                        oldEndNode = dst.children[--oldEndIdx];\r\n                    } else if (sameKey(newEndNode, oldStartNode)) {\r\n                        DiffTool.compare(newEndNode,oldStartNode, changeArr);\r\n                         //跳过插入点会提前移动的节点\r\n                        while(addObj.hasOwnProperty(oldEndNode.key)){\r\n                            changeArr[addObj[oldEndNode.key]][0] = 4;\r\n                            delete addObj[oldEndNode.key];\r\n                            oldEndNode = dst.children[--oldEndIdx];\r\n                        }\r\n                        //接在 oldEndIdx 之后，但是再下一个节点可能移动位置，所以记录oldEndIdx节点\r\n                        addChange(4, oldStartNode, oldEndNode,dst,1);\r\n                        newEndNode = src.children[--newEndIdx];\r\n                        oldStartNode = dst.children[++oldStartIdx];\r\n                    } else {\r\n                        //跳过插入点会提前移动的节点\r\n                        if(addObj.hasOwnProperty(oldStartNode.key)){\r\n                            while(addObj.hasOwnProperty(oldStartNode.key)){\r\n                                   changeArr[addObj[oldStartNode.key]][0] = 4;\r\n                                   delete addObj[oldStartNode.key];\r\n                                oldStartNode = dst.children[++oldStartIdx];\r\n                            }\r\n                            continue;//继续diff，暂不add\r\n                        }\r\n                       //加入到addObj\r\n                        addObj[newStartNode.key]= addChange(1, newStartNode, oldStartNode,dst)-1;\r\n                        newStartNode = src.children[++newStartIdx];\r\n                    }\r\n                }\r\n                //有新增或删除节点\r\n                if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n                    if (oldStartIdx > oldEndIdx) {\r\n                        //没有老节点\r\n                        for (let i = newStartIdx; i <= newEndIdx; i++) {\r\n                            // 添加到dst.children[i]前面\r\n                            addChange(1,src.children[i], i ,dst);\r\n                        }\r\n                    } else {\r\n                        //有老节点，需要删除\r\n                        for (let i = oldStartIdx; i <= oldEndIdx; i++) {\r\n                            let ch=dst.children[i];\r\n                            //如果要删除的节点在addArr中，则表示move，否则表示删除\r\n                            if(!addObj.hasOwnProperty(ch.key)){ \r\n                                addChange(3,ch,null,dst);\r\n                            }else{\r\n                                changeArr[addObj[ch.key]][0] = 4;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 是否有相同key\r\n         * @param src   源节点\r\n         * @param dst   目标节点\r\n         * @returns     相同key为true，否则为false\r\n         */\r\n        function sameKey(src:IRenderedDom, dst:IRenderedDom):boolean {\r\n            return src.key === dst.key;\r\n        }\r\n        \r\n        /**\r\n         * 添加刪除替換\r\n        * @param type       类型 add 1, upd 2,del 3,move 4 ,rep 5\r\n        * @param dom        虚拟节点    \r\n        * @param dom1       相对节点\r\n        * @param parent     父节点\r\n        * @param extra      move时 0:相对节点前，1:相对节点后\r\n        */\r\n        function addChange(type:number,dom: IRenderedDom, dom1?: IRenderedDom|number,parent?:IRenderedDom,loc?:number) {\r\n            return changeArr.push([type,dom,dom1,parent,loc]);\r\n        }\r\n    }\r\n}","import { VirtualDom } from \"./virtualdom\";\r\nimport { Module } from \"./module\";\r\n/**\r\n * 自定义元素\r\n * 用于扩充定义，主要对ast obj进行前置处理\r\n */\r\nexport class DefineElement {\r\n    /**\r\n     * 构造器，在dom编译后执行\r\n     * @param node \r\n     * @param module \r\n     */\r\n    constructor(node:VirtualDom){\r\n        if (node.hasProp('tag')) {\r\n            node.tagName = node.getProp('tag');\r\n            node.delProp('tag');\r\n        } else {\r\n            node.tagName = 'div';\r\n        }\r\n    }\r\n}\r\n","import { NEvent } from \"./event\";\r\nimport { Module } from \"./module\";\r\n\r\n/**\r\n * 事件工厂\r\n * 每个模块一个事件工厂，用于管理模块内虚拟dom对应的事件对象\r\n */\r\nexport class EventFactory{\r\n    /**\r\n     * 所属模块\r\n     */\r\n    private module:Module;\r\n    /**\r\n     * 事件map\r\n     * 键 虚拟domkey，值 {eventName1:{own:[event对象,...],delg:[{key:被代理key,event:event对象},...],toDelg:[event对象],capture:useCapture,bindMap:{}}\r\n     * own表示自己的事件，delg表示代理事件（代理子对象），capture表示是否使用capture，toDelg 表示需要被代理的对象\r\n     * 其中 eventName为事件名，如click等，event对象为NEvent对象，\r\n     * bindMap为已绑定事件map，其中键为 事件名，值为{handler:handler}，解绑时需要\r\n     * 在own和delg都存在时，如果capture为true，则先执行own，在执行delg，为false时则相反。如果只有own，则和传统的cature事件处理机制相同\r\n     */\r\n    private eventMap:Map<string,any>;\r\n\r\n    /**\r\n     * 构造器\r\n     * @param module 模块\r\n     */\r\n    constructor(module:Module){\r\n        this.module = module;\r\n        this.eventMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * 保存事件\r\n     * @param key       dom key \r\n     * @param event     事件对象\r\n     * @param key1      当key1存在时，表示代理子dom事件\r\n     */\r\n    public addEvent(key:string,event: NEvent,key1?:string){\r\n        let eobj;\r\n        if(!this.eventMap.has(key)){\r\n            this.eventMap.set(key,new Map());\r\n        }\r\n        eobj = this.eventMap.get(key);\r\n        if(!eobj.has(event.name)){\r\n            eobj.set(event.name,{});\r\n        }\r\n        let obj = eobj.get(event.name);\r\n        if(key1){ //代理事件\r\n            if(!obj.delg){\r\n                obj.delg = [{key:key1,event:event}];\r\n            }else{\r\n                let arr = obj.delg;\r\n                \r\n                //事件不重复添加\r\n                if(!arr.find(item=>item.key===key1 && item.event===event)){\r\n                    arr.push({key:key1,event:event});\r\n                }\r\n            }\r\n        }else{\r\n            if(event.delg){ //需要被代理的对象\r\n                if(!obj.toDelg){\r\n                    obj.toDelg = [event];\r\n                }else{\r\n                    let arr = obj.toDelg;\r\n                    //事件不重复添加\r\n                    if(arr.findIndex(item=>item === event) === -1){\r\n                        arr.push(event);\r\n                    }\r\n                }\r\n            }else{\r\n                if(!obj.own){\r\n                    obj.own = [event];\r\n                }else{\r\n                    let arr = obj.own;\r\n                    //事件不重复添加\r\n                    if(arr.findIndex(item=>item === event) === -1){\r\n                        arr.push(event);\r\n                    }\r\n                }\r\n            }\r\n            // 设置事件capture\r\n            obj.capture = event.capture;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取事件对象\r\n     * @param key   dom key\r\n     * @returns     事件对象\r\n     */\r\n    public getEvent(key:string):any{\r\n        return this.eventMap.get(key);\r\n    }\r\n\r\n    /**\r\n     * 删除事件\r\n     * @param event     事件对象\r\n     * @param key       对应dom keys\r\n     * @param key1      被代理的dom key\r\n     * @param toDelg    从待代理的数组移除（针对虚拟dom自己）\r\n     */\r\n    public removeEvent(key:string,event: NEvent,key1?:string,toDelg?:boolean) {\r\n        if(!this.eventMap.has(key)){\r\n            return;\r\n        }\r\n        let eobj = this.eventMap.get(key);\r\n        if(!eobj.has(event.name)){\r\n            return;\r\n        }\r\n        let obj = eobj.get(event.name);\r\n        if(key1){ //代理事件\r\n            if(!obj.delg){\r\n                return;\r\n            }else{\r\n                let index = obj.delg.findIndex(item=>item.key===key1 && item.event===event);\r\n                if(index !== -1){\r\n                    obj.delg.splice(index,1);\r\n                    if(obj.delg.length===0){\r\n                        delete obj.delg;\r\n                    }\r\n                }\r\n            }\r\n        }else if(toDelg && obj.toDelg){\r\n            let index = obj.toDelg.findIndex(item=>item===event);\r\n            if(index !== -1){\r\n                obj.toDelg.splice(index,1);\r\n                if(obj.toDelg.length === 0){\r\n                    delete obj.toDelg;\r\n                }\r\n            }\r\n        }else if(obj.own){\r\n            let index = obj.own.findIndex(item=>item===event);\r\n            if(index !== -1){\r\n                obj.own.splice(index,1);\r\n                if(obj.own.length === 0){\r\n                    delete obj.own;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定事件记录\r\n     * 当绑定到html element时，需要记录\r\n     * @param key           dom key\r\n     * @param eventName     事件名\r\n     * @param handler       事件处理器\r\n     * @param capture       useCapture\r\n     * @returns             是否绑定成功，如果已绑定或不存在，则返回false，否则返回true\r\n     */\r\n    bind(key:string,eventName:string,handler:any,capture:boolean):boolean{\r\n        if(!this.eventMap.has(key)){\r\n            return false;\r\n        }\r\n        const eobj = this.eventMap.get(key);\r\n        \r\n        if(!eobj.has(eventName)){\r\n            return false;\r\n        }\r\n        \r\n        if(!eobj.bindMap){\r\n            eobj.bindMap = new Map();\r\n        }else if(eobj.bindMap.has(eventName)){   //已绑定，不再绑\r\n            return false;\r\n        }\r\n        const el = this.module.getNode(key);\r\n        \r\n        if(el){\r\n            el.addEventListener(eventName,handler,capture);\r\n        }\r\n        eobj.bindMap.set(eventName,{\r\n            handler:handler,\r\n            capture:capture\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 从eventfactory解绑所有事件\r\n     * @param key           dom key\r\n     * @param eventName     事件名\r\n     */\r\n     unbind(key:string,eventName:string){\r\n        if(!this.eventMap.has(key)){\r\n            return;\r\n        }\r\n        const eobj = this.eventMap.get(key);\r\n        if(!eobj.bindMap || !eobj.has(eventName)){\r\n            return;\r\n        }\r\n        const el = this.module.getNode(key);\r\n        const cfg = eobj.bindMap.get(eventName);\r\n        //从html element解绑\r\n        if(el && cfg){\r\n            el.removeEventListener(eventName,cfg.handler,cfg.capture);\r\n        }\r\n        eobj.bindMap.delete(eventName);\r\n    }\r\n\r\n    /**\r\n     * 从eventfactory解绑事件\r\n     * @param key           dom key\r\n     */\r\n    unbindAll(key:string){\r\n        if(!this.eventMap.has(key)){\r\n            return;\r\n        }\r\n        const eobj = this.eventMap.get(key);\r\n        if(!eobj.bindMap){\r\n            return;\r\n        }\r\n        const el = this.module.getNode(key);\r\n        if(el){\r\n            for(let evt of eobj.bindMap){\r\n                el.removeEventListener(evt[0],evt[1].handler,evt[1].capture);\r\n            }\r\n        }\r\n        eobj.bindMap.clear();\r\n    }\r\n\r\n    /**\r\n     * 是否拥有key对应的事件对象\r\n     * @param key   dom key\r\n     * @returns     如果key对应事件存在，返回true，否则返回false\r\n     */\r\n    hasEvent(key:string):boolean{\r\n        return this.eventMap.has(key);\r\n    }\r\n\r\n    /**\r\n     * 克隆事件对象\r\n     * @param srcKey    源dom key \r\n     * @param dstKey    目标dom key\r\n     */\r\n    cloneEvent(srcKey:string,dstKey:string){\r\n        if(srcKey === dstKey){\r\n            return;\r\n        }\r\n        let eObj = this.eventMap.get(srcKey);\r\n        if(!eObj){\r\n            return;\r\n        }\r\n        let map = new Map();\r\n        for(let evt of eObj){\r\n            if(evt[0] === 'bindMap'){ //bindMap不复制\r\n                continue;\r\n            }\r\n            let obj = {capture:evt[1].capture};\r\n            if(evt[1].own){\r\n                obj['own'] = evt[1].own.slice(0);    \r\n            }\r\n            if(evt[1].delg){\r\n                obj['delg'] = evt[1].delg.slice(0);\r\n            }\r\n            if(evt[1].toDelg){\r\n                obj['toDelg'] = evt[1].toDelg.slice(0);\r\n            }\r\n            map.set(evt[0],obj);\r\n        }\r\n        this.eventMap.set(dstKey,map);\r\n    }\r\n}","import { Module } from \"./module\";\r\n\r\n/**\r\n * NCache模块-存储在内存中\r\n */\r\nexport class NCache{\r\n    private cacheData:any;\r\n    /**\r\n     * 订阅map，格式为 {key:[{module:订阅模块,handler:},...]}\r\n     */\r\n    private subscribeMap = new Map();\r\n    \r\n    constructor(){\r\n        this.cacheData = {};\r\n    }\r\n\r\n    /**\r\n     * 通过提供的键名从内存中拿到对应的值\r\n     * @param key   键，支持\".\"（多级数据分割）\r\n     * @reutrns     值或undefined\r\n     */\r\n    public get(key:string){\r\n        let p = this.cacheData;\r\n        if(key.indexOf('.') !== -1){\r\n            let arr = key.split('.');\r\n            if(arr.length>1){\r\n                for(let i=0;i<arr.length-1 && p;i++){\r\n                    p = p[arr[i]];\r\n                }\r\n                if(p){\r\n                    key = arr[arr.length-1];\r\n                }\r\n            }\r\n        }\r\n        if(p){\r\n            return p[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过提供的键名和值将其存储在内存中\r\n     * @param key       键 \r\n     * @param value     值\r\n     */\r\n    public set(key:string,value:any){\r\n        let p = this.cacheData;\r\n        let key1 = key;\r\n        if(key.indexOf('.') !== -1){\r\n            let arr = key.split('.');\r\n            if(arr.length>1){\r\n                for(let i=0;i<arr.length-1;i++){\r\n                    if(!p[arr[i]] || typeof p[arr[i]] !== 'object'){\r\n                        p[arr[i]] = {};\r\n                    }\r\n                    p = p[arr[i]];        \r\n                }\r\n                key = arr[arr.length-1];\r\n            }\r\n        }\r\n        \r\n        if(p){\r\n            p[key] = value;\r\n        }\r\n\r\n        //处理订阅\r\n        if(this.subscribeMap.has(key1)){\r\n            let arr = this.subscribeMap.get(key1);\r\n            for(let a of arr){\r\n                this.invokeSubscribe(a.module,a.handler,value);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过提供的键名将其移除\r\n     * @param key   键 \r\n     */\r\n    public remove(key:string){\r\n        let p = this.cacheData;\r\n        if(key.indexOf('.') !== -1){\r\n            let arr = key.split('.');\r\n            if(arr.length>1){\r\n                for(let i=0;i<arr.length-1 && p;i++){\r\n                    p = p[arr[i]];\r\n                }\r\n                if(p){\r\n                    key = arr[arr.length-1];\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(p){\r\n            delete p[key];\r\n        }       \r\n    }\r\n    /**\r\n     * 订阅\r\n     * @param module    订阅的模块\r\n     * @param key       字段key\r\n     * @param handler   回调函数 参数为key对应value \r\n     */\r\n    public subscribe(module:Module,key:string,handler:Function|string){\r\n        if(!this.subscribeMap.has(key)){\r\n            this.subscribeMap.set(key,[{module:module,handler:handler}]);\r\n        }else{\r\n            let arr = this.subscribeMap.get(key);\r\n            if(!arr.find(item=>item.module === module && item.handler === handler)){\r\n                arr.push({module:module,handler:handler});\r\n            }\r\n        }\r\n        //如果存在值，则执行订阅回调\r\n        let v = this.get(key);\r\n        if(v){\r\n            this.invokeSubscribe(module,handler,v);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用订阅方法\r\n     * @param module    模块\r\n     * @param foo       方法或方法名\r\n     * @param v         值\r\n     */\r\n    private invokeSubscribe(module:Module,foo:Function|string,v:any){\r\n        if(typeof foo === 'string'){\r\n            module.invokeMethod(<string>foo,v);\r\n        }else{\r\n            foo.call(module,v);\r\n        }\r\n    }\r\n}","import { NCache } from \"./cache\";\r\nimport { Module } from \"./module\";\r\n\r\n/**\r\n * 全局缓存\r\n */\r\nexport class GlobalCache{\r\n    //NCache实例\r\n    private static cache:NCache = new NCache();\r\n\r\n    /**\r\n     * 保存到cache\r\n     * @param key       键，支持\".\"（多级数据分割）\r\n     * @param value     值\r\n     */\r\n    public static set(key:string,value:any){\r\n        this.cache.set(key,value);\r\n    }\r\n\r\n    /**\r\n     * 从cache读取\r\n     * @param key   键，支持\".\"（多级数据分割）\r\n     * @returns     缓存的值或undefined\r\n     */\r\n    public static get(key){\r\n        return this.cache.get(key);\r\n    }\r\n\r\n    /**\r\n     * 订阅\r\n     * @param module    订阅的模块\r\n     * @param key       字段key\r\n     * @param handler   回调函数 参数为key对应value\r\n     */\r\n    public static subscribe(module:Module,key:string,handler:Function){\r\n        this.cache.subscribe(module,key,handler);\r\n    }\r\n\r\n    /**\r\n     * 从cache移除\r\n     * @param key   键，支持\".\"（多级数据分割）\r\n     */\r\n    public static remove(key){\r\n        this.cache.remove(key);\r\n    }\r\n\r\n}","import { Module } from \"./module\";\r\n\r\n/**\r\n * 工厂基类\r\n */\r\nexport class NFactory {\r\n    /**\r\n     * 模块名\r\n     */\r\n    private moduleId:number;\r\n    /**\r\n     * 工厂item对象\r\n     */\r\n    private items:Map<number|string,any> = new Map();\r\n    \r\n    /**\r\n     * @param module 模块\r\n     */\r\n    constructor(module?:Module) {\r\n        if (module !== undefined) {\r\n            this.moduleId = module.id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加到工厂\r\n     * @param name \titem name\r\n     * @param item\titem\r\n     */\r\n    public add(name:string|number, item:any) {\r\n        this.items.set(name,item);\r\n    }\r\n\r\n    /**\r\n     * 获得item\r\n     * @param name \titem name\r\n     * @returns     item\r\n     */\r\n    public get(name:string|number):any{\r\n        return this.items.get(name);\r\n    }\r\n\r\n    \r\n    /**\r\n     * 从容器移除\r\n     * @param name \titem name\r\n     */\r\n    public remove(name:string|number) {\r\n        this.items.delete(name);\r\n    }\r\n\r\n    /**\r\n     * 是否拥有该项\r\n     * @param name  item name\r\n     * @return      true/false\r\n     */\r\n    public has(name:string|number):boolean{\r\n        return this.items.has(name);\r\n    }\r\n}\r\n","/*\r\n * 消息js文件 中文文件\r\n */\r\nexport const NodomMessage_zh = {\r\n    /**\r\n     * 提示单词\r\n     */\r\n    TipWords: {\r\n        application: \"应用\",\r\n        system: \"系统\",\r\n        module: \"模块\",\r\n        moduleClass: '模块类',\r\n        model: \"模型\",\r\n        directive: \"指令\",\r\n        directiveType: \"指令类型\",\r\n        expression: \"表达式\",\r\n        event: \"事件\",\r\n        method: \"方法\",\r\n        filter: \"过滤器\",\r\n        filterType: \"过滤器类型\",\r\n        data: \"数据\",\r\n        dataItem: '数据项',\r\n        route: '路由',\r\n        routeView: '路由容器',\r\n        plugin: '插件',\r\n        resource: '资源',\r\n        root: '根',\r\n        element: '元素'\r\n    },\r\n    /**\r\n     * 异常信息\r\n     */\r\n    ErrorMsgs: {\r\n        unknown: \"未知错误\",\r\n        paramException: \"{0}'{1}'方法参数错误，请参考api\",\r\n        invoke: \"{0}方法调用参数{1}必须为{2}\",\r\n        invoke1: \"{0}方法调用参数{1}必须为{2}或{3}\",\r\n        invoke2: \"{0}方法调用参数{1}或{2}必须为{3}\",\r\n        invoke3: \"{0}方法调用参数{1}不能为空\",\r\n        exist: \"{0}已存在\",\r\n        exist1: \"{0}'{1}'已存在\",\r\n        notexist: \"{0}不存在\",\r\n        notexist1: \"{0}'{1}'不存在\",\r\n        notupd: \"{0}不可修改\",\r\n        notremove: \"{0}不可删除\",\r\n        notremove1: \"{0}{1}不可删除\",\r\n        namedinvalid: \"{0}{1}命名错误，请参考用户手册对应命名规范\",\r\n        initial: \"{0}初始化参数错误\",\r\n        jsonparse: \"JSON解析错误\",\r\n        timeout: \"请求超时\",\r\n        config: \"{0}配置参数错误\",\r\n        config1: \"{0}配置参数'{1}'错误\",\r\n        itemnotempty: \"{0} '{1}' 配置项 '{2}' 不能为空\",\r\n        itemincorrect: \"{0} '{1}' 配置项 '{2}' 错误\",\r\n        compile1: \"{0}标签未闭合\",\r\n        compile2: \"结束标签{0}未找到与之匹配的开始标签\",\r\n        compile3: \"请检查模板标签闭合情况，模板需要有一个闭合的根节点\",\r\n        wrongTemplate:\"模版格式错误\"\r\n\r\n    },\r\n\r\n    /**\r\n     * 表单信息\r\n     */\r\n    FormMsgs: {\r\n        type: \"请输入有效的{0}\",\r\n        unknown: \"输入错误\",\r\n        required: \"不能为空\",\r\n        min: \"最小输入值为{0}\",\r\n        max: \"最大输入值为{0}\"\r\n    },\r\n    WeekDays: {\r\n        \"0\": \"日\",\r\n        \"1\": \"一\",\r\n        \"2\": \"二\",\r\n        \"3\": \"三\",\r\n        \"4\": \"四\",\r\n        \"5\": \"五\",\r\n        \"6\": \"六\"\r\n    }\r\n}\r\n","import { VirtualDom } from \"./virtualdom\";\r\nimport { Model } from \"./model\";\r\nimport { Module } from \"./module\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { Renderer } from \"./renderer\";\r\n\r\n/**\r\n * 模型工厂\r\n */\r\nexport class ModelManager {\r\n    \r\n    /**\r\n     * 模型map\r\n     * 样式为 {modelKey:{data:data,model:model,modules:[]}，\r\n     * 其中：\r\n     *      modelkey表示model对应key，\r\n     *      data为原始数据，\r\n     *      model为代理对象,\r\n     *      modules为该数据对象绑定的模块id数组\r\n     */\r\n    private static modelMap: Map<number, any> = new Map();\r\n\r\n    /**\r\n     * 添加到 dataNModelMap\r\n     * @param data      数据对象\r\n     * @param model     模型\r\n     */\r\n    public static addToMap(data: Object, model: Model) {\r\n        this.modelMap.set(model.$key,{data:data,model:model});\r\n    }\r\n\r\n    /**\r\n     * 删除从 dataNModelMap\r\n     * @param key       model key\r\n     */\r\n    public static delFromMap(key: number) {\r\n        if(!this.modelMap.has(key)){\r\n            return;\r\n        }\r\n        let o = this.modelMap.get(key);\r\n        this.modelMap.delete(key);\r\n    }\r\n\r\n    /**\r\n     * 从dataNModelMap获取model\r\n     * @param data      数据对象\r\n     * @returns         model\r\n     */\r\n    public static getModel(key:number): Model {\r\n        if(this.modelMap.has(key)){\r\n            return this.modelMap.get(key)['model'];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取数据对象\r\n     * @param key   model key\r\n     * @returns     data\r\n     */\r\n    public static getData(key:number):any{\r\n        if(this.modelMap.has(key)){\r\n            return this.modelMap.get(key)['data'];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 绑定model到module\r\n     * @param model     模型 \r\n     * @param module    模块\r\n     * @returns \r\n     */\r\n    public static bindToModule(model:Model,module:Module|number){\r\n        if(!model || !this.modelMap.has(model.$key)){\r\n            return;\r\n        }\r\n        let obj = this.modelMap.get(model.$key);\r\n        let mid = typeof module === 'number'?module:module.id;\r\n        if(!obj.modules){\r\n            obj.modules = [mid];\r\n        }else{\r\n            let arr = obj.modules;\r\n            if(arr.indexOf(mid) === -1){\r\n                arr.push(mid);\r\n            }\r\n        }\r\n        //级联设置\r\n        Object.getOwnPropertyNames(model).forEach(item=>{\r\n            if(model[item] && typeof model[item] === 'object' && model[item].$key){\r\n                ModelManager.bindToModule(model[item],module);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 绑定model到多个module\r\n     * @param model     模型 \r\n     * @param ids       模块id数组\r\n     * @returns \r\n     */\r\n     public static bindToModules(model:Model,ids:number[]){\r\n        if(!this.modelMap.has(model.$key)){\r\n            return;\r\n        }\r\n        let obj = this.modelMap.get(model.$key);\r\n        \r\n        if(!obj.modules){\r\n            obj.modules = ids;\r\n        }else{\r\n            let arr = obj.modules;\r\n            for(let mid of ids){\r\n                if(arr.indexOf(mid) === -1){\r\n                    arr.push(mid);\r\n                }\r\n            }\r\n        }\r\n\r\n        //级联设置\r\n        Object.getOwnPropertyNames(model).forEach(item=>{\r\n            if(typeof model[item] === 'object' && model[item].$key){\r\n                ModelManager.bindToModules(model[item],ids);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * model从module解绑\r\n     * @param model     模型 \r\n     * @param module    模块\r\n     * @returns \r\n     */\r\n     public static unbindFromModule(model:Model,module:Module|number){\r\n        if(!this.modelMap.has(model.$key)){\r\n            return;\r\n        }\r\n        let obj = this.modelMap.get(model.$key);\r\n        if(!obj.modules){\r\n            return;\r\n        }\r\n        let mid = typeof module === 'number'?module:module.id;\r\n        let arr = obj.modules;\r\n        let ind;\r\n        if((ind=arr.indexOf(mid)) === -1){\r\n            arr.splice(ind);\r\n        }\r\n        \r\n        //级联解绑\r\n        Object.getOwnPropertyNames(model).forEach(item=>{\r\n            if(typeof model[item] === 'object' && model[item].$key){\r\n                ModelManager.unbindFromModule(model[item],module);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取model绑定的moduleId\r\n     * @param model     模型\r\n     * @returns model绑定的模块id数组\r\n     */\r\n    public static getModuleIds(model:Model):number[]{\r\n        if(!this.modelMap.has(model.$key)){\r\n            return;\r\n        }\r\n        return this.modelMap.get(model.$key).modules;\r\n    }\r\n\r\n    /**\r\n     * 更新导致渲染\r\n     * 如果不设置oldValue和newValue，则直接强制渲染\r\n     * @param model     model\r\n     * @param key       属性\r\n     * @param oldValue  旧值\r\n     * @param newValue  新值\r\n     * @param force     强制渲染\r\n     */\r\n    public static update(model: Model, key: string, oldValue?: any, newValue?: VirtualDom, force?:boolean) {\r\n        const modules = this.getModuleIds(model);\r\n        if(!modules){\r\n            return;\r\n        }\r\n        //第一个module为watcher对应module\r\n        for(let mid of modules){\r\n            const m:Module = ModuleFactory.get(mid);\r\n            if(m){\r\n                Renderer.add(m);\r\n            }\r\n        }\r\n\r\n        //监听器\r\n        if(model.$watchers){\r\n            //对象监听器\r\n            if(model.$watchers.$this){\r\n                for(let cfg of model.$watchers.$this){\r\n                    for(let mid of cfg.modules){\r\n                        const m:Module = ModuleFactory.get(mid);\r\n                        if(m){\r\n                            cfg.f.call(m,model,oldValue,newValue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //属性监听器\r\n            if(model.$watchers[key]){\r\n                for(let cfg of model.$watchers[key]){\r\n                    for(let mid of cfg.modules){\r\n                        const m:Module = ModuleFactory.get(mid);\r\n                        if(m){\r\n                            cfg.f.call(m,model,oldValue,newValue);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ModelManager } from \"./modelmanager\";\r\nimport { Module } from \"./module\";\r\nimport { Util } from \"./util\";\r\n/**\r\n * 模型类\r\n */\r\nexport class Model {\r\n    /**\r\n     * model key\r\n     */\r\n    public $key:number;\r\n\r\n    /**\r\n     * 监听器\r\n     * 存储样式{\r\n     *      $this: [listener1,listener2,...]，对象改变监听器,允许多个监听\r\n     *      keyName: [listener1,listener2,...]，属性名监听器，允许多个监听\r\n     * }\r\n     */\r\n    public $watchers:any;\r\n\r\n    /**\r\n     * @param data \t\t数据\r\n     * @param module \t模块对象\r\n     * @returns         模型代理对象\r\n     */\r\n    constructor(data: any, module?: Module) {\r\n        //模型管理器\r\n        let proxy = new Proxy(data, {\r\n            set(src: any, key: string, value: any, receiver: any){\r\n                //值未变,proxy 不处理\r\n                if (src[key] === value) {\r\n                    return true;\r\n                }\r\n                //不处理原型属性\r\n                if (['__proto__'].includes(<string>key)) {\r\n                    return true;\r\n                }\r\n                let ov = src[key];\r\n                let r = Reflect.set(src, key, value, receiver); \r\n                //非对象，null，非model更新渲染\r\n                if(value && typeof value === 'object' && !value.$key){\r\n                    value = new Model(value,module);\r\n                }\r\n                ModelManager.update(receiver, key, ov, value);\r\n                return r;\r\n            },\r\n            get(src: any, key: string | symbol, receiver){\r\n                let res = Reflect.get(src, key, receiver);\r\n                if(res && typeof res === 'object'){\r\n                    if(res.$key){\r\n                        return ModelManager.getModel(res.$key);\r\n                    }else{ //未代理对象，需要创建模型\r\n                        return new Model(res, module);\r\n                    }  \r\n                }\r\n                return res;\r\n            },\r\n            deleteProperty(src: any, key: any){\r\n                //如果删除对象且不为数组元素，从modelmanager中同步删除\r\n                if (src[key]&& src[key].$key && !(Array.isArray(src)&& /^\\d+$/.test(key))) {\r\n                    ModelManager.delFromMap(src[key].$key);\r\n                }\r\n                delete src[key];\r\n                ModelManager.update(src,key,null,null,true);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        for(let k of ['$watch','$unwatch','$get','$set']){\r\n            proxy[k] = this[k];\r\n        }\r\n        proxy.$key = Util.genId();\r\n        \r\n        ModelManager.addToMap(data, proxy);\r\n        //绑定到模块\r\n        if(module){\r\n            ModelManager.bindToModule(proxy,module);\r\n        }\r\n\r\n        if(Array.isArray(data)){\r\n            this.arrayOverload(proxy);   \r\n        }\r\n        return proxy;\r\n    }\r\n\r\n    /**\r\n     * 重载数组删除元素方法\r\n     * 用于处理从数组中移除的model，从modelmap移除\r\n     * @param data  数组\r\n     */\r\n    private arrayOverload(data){\r\n        data.splice = function(){\r\n            const count = arguments[1];\r\n            let r = Array.prototype['splice'].apply(data,arguments);\r\n            if(count > 0){\r\n                for(let i=0;i<r.length;i++){\r\n                    if(r[i].$key){\r\n                        ModelManager.delFromMap(r[i].$key);\r\n                        delete r[i].$key;\r\n                    }\r\n                }\r\n            }\r\n            return r;\r\n        }\r\n        data.shift = function(){\r\n            let d = data[0];\r\n            Array.prototype['shift'].apply(data);\r\n            if(d && d.$key){\r\n                ModelManager.delFromMap(d.$key);\r\n                delete d.$key;\r\n            }\r\n            return d;\r\n        }\r\n        \r\n        data.pop = function(){\r\n            let d = data[data.length-1];\r\n            Array.prototype['pop'].apply(data);\r\n            if(d && d.$key){\r\n                ModelManager.delFromMap(d.$key);\r\n                delete d.$key;\r\n            }\r\n            return d;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 观察(取消观察)某个数据项\r\n     * @param key       数据项名或数组\r\n     * @param operate   数据项变化时执行方法\r\n     * @param deep      是否深度观察，如果是深度观察，则子对象更改，也会触发观察事件\r\n     */\r\n    public $watch(key: string|string[], operate: Function,deep?:boolean):Function {\r\n        let mids = ModelManager.getModuleIds(this);\r\n        let arr = [];\r\n        if(Array.isArray(key)){\r\n            for(let k of key){\r\n                watchOne(this,k,operate);\r\n            }\r\n        }else{\r\n            watchOne(this,key,operate);\r\n        }\r\n\r\n        //返回取消watch函数\r\n        return ()=>{\r\n            for(let f of arr){\r\n                const foos = f.m.$watchers[f.k];\r\n                if(foos){\r\n                    for(let i=0;i<foos.length;i++){\r\n                        //方法相同则撤销watch\r\n                        if(foos[i].f === f.f){\r\n                            foos.splice(i,1);\r\n                            if(foos.length === 0){\r\n                                delete f.m.$watchers[f.k];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            //释放arr\r\n            arr = null;\r\n        }\r\n        \r\n        function watchOne(model:Model,key:string,operate:Function){\r\n            let index = -1;\r\n            //如果带'.'，则只取最里面那个对象\r\n            if ((index = key.lastIndexOf('.')) !== -1) {\r\n                model = this.$get(key.substring(0, index));\r\n                key = key.substring(index + 1);\r\n            }\r\n            if (!model) {\r\n                return;\r\n            }\r\n            const listener = {modules:mids,f:operate};\r\n\r\n            if(!model.$watchers){\r\n                model.$watchers = {};\r\n            }\r\n            if(!model.$watchers[key]){\r\n                model.$watchers[key] = [listener];\r\n            }else{\r\n                model.$watchers[key].push(listener);\r\n            }\r\n            //保存用于撤销watch\r\n            arr.push({m:model,k:key,f:operate});\r\n\r\n            //对象，监听整个对象\r\n            if(deep && typeof model[key] === 'object'){\r\n                for(let k of Object.keys(model[key])){\r\n                    if(k !== '$key' && typeof model[key][k] !== 'function'){\r\n                        watchOne(model[key],k,operate);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查询子属性\r\n     * @param key   子属性，可以分级，如 name.firstName\r\n     * @returns     属性对应model proxy\r\n     */\r\n    $get(key: string) {\r\n        let model: Model = this;\r\n        if (key.indexOf('.') !== -1) {    //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                model = model[arr[i]];\r\n                if (!model) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!model) {\r\n                return;\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        return model[key];\r\n    }\r\n\r\n    /**\r\n     * 设置值\r\n     * @param key       子属性，可以分级，如 name.firstName\r\n     * @param value     属性值\r\n     * @param module    需要绑定的新模块\r\n     */\r\n    $set(key:string,value:any,module?:Module){\r\n        let model: Model = this;\r\n        let mids = ModelManager.getModuleIds(this);\r\n        if (key.indexOf('.') !== -1) {    //层级字段\r\n            let arr = key.split('.');\r\n            for (let i = 0; i < arr.length - 1; i++) {\r\n                //不存在，则创建新的model\r\n                if (!model[arr[i]]) {\r\n                    let m = new Model({});\r\n                    ModelManager.bindToModules(m,mids);\r\n                    model[arr[i]] = m;\r\n                }\r\n                model = model[arr[i]];\r\n            }\r\n            key = arr[arr.length - 1];\r\n        }\r\n        //绑定model到模块\r\n        if(typeof value === 'object' && module){\r\n            ModelManager.bindToModule(value,module);\r\n        }\r\n        model[key] = value;\r\n    }\r\n}","import { NCache } from \"./cache\";\r\nimport { Directive } from \"./directive\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\nimport { NEvent } from \"./event\";\r\nimport { Expression } from \"./expression\";\r\nimport { GlobalCache } from \"./globalcache\";\r\nimport { Module } from \"./module\";\r\nimport { IRenderedDom } from \"./types\";\r\n\r\n/**\r\n * 指令管理器\r\n * $directives  指令集\r\n * $expressions 表达式集\r\n * $events      事件集\r\n * $savedoms    dom相关缓存 包括 html dom 和 参数\r\n * $doms        渲染树\r\n */\r\nexport  class ObjectManager {\r\n    /**\r\n     * NCache\r\n     */\r\n    public cache:NCache;\r\n\r\n    /**\r\n     * 模块\r\n     */\r\n    public module:Module;\r\n\r\n    /**\r\n     * module   模块\r\n     * @param module \r\n     */\r\n    constructor(module:Module){\r\n        this.module = module;\r\n        this.cache = new NCache();\r\n    }\r\n\r\n    /**\r\n     * 保存到cache\r\n     * @param key       键，支持\".\"（多级数据分割）\r\n     * @param value     值\r\n     */\r\n     public set(key:string,value:any){\r\n        this.cache.set(key,value);\r\n    }\r\n\r\n    /**\r\n     * 从cache读取\r\n     * @param key   键，支持\".\"（多级数据分割）\r\n     * @returns     缓存的值或undefined\r\n     */\r\n    public get(key){\r\n        return this.cache.get(key);\r\n    }\r\n\r\n    /**\r\n     * 从cache移除\r\n     * @param key   键，支持\".\"（多级数据分割）\r\n     */\r\n    public remove(key){\r\n        this.cache.remove(key);\r\n    }\r\n\r\n    /**\r\n     * 设置事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     * @param name      参数名  \r\n     * @param value     参数值\r\n     */\r\n    public setEventParam(id:number,key:String,name:string,value:any){\r\n        this.cache.set('$events.' + id + '.$params.' + key + '.' + name,value);\r\n    }\r\n\r\n    /**\r\n     * 获取事件参数值\r\n     * @param id        事件id\r\n     * @param key       dom key \r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    public getEventParam(id:number,key:string,name:string){\r\n        return this.get('$events.' + id + '.$params.' + key + '.' + name);\r\n    }\r\n\r\n    /**\r\n     * 移除事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     */\r\n    public removeEventParam(id:number,key:string,name:string){\r\n        this.remove('$events.' + id + '.$params.' + key + '.' + name);\r\n    }\r\n\r\n    /**\r\n     * 清空事件参数\r\n     * @param id        事件id\r\n     * @param key       dom key \r\n     */\r\n    public clearEventParam(id:number,key?:string){\r\n        if(key){    //删除对应dom的事件参数\r\n            this.remove('$events.' + id + '.$params.' + key);    \r\n        }else{      //删除所有事件参数\r\n            this.remove('$events.' + id + '.$params');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置dom参数值\r\n     * @param key       dom key \r\n     * @param name      参数名\r\n     * @param value     参数值\r\n     */\r\n    public setDomParam(key:string,name:string,value:any){\r\n        this.set('$domparam.' + key + '.' + name ,value);\r\n    }\r\n\r\n    /**\r\n     * 获取dom参数值\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     * @returns         参数值\r\n     */\r\n    public getDomParam(key:string,name:string):any{\r\n        return this.get('$domparam.' + key + '.' + name);\r\n    }\r\n\r\n    /**\r\n     * 移除dom参数值\r\n     * @param key       dom key\r\n     * @param name      参数名\r\n     */\r\n    public removeDomParam(key:string,name:string){\r\n        this.remove('$domparam.' + key + '.' + name);\r\n    }\r\n\r\n    /**\r\n     * 清除element 参数集\r\n     * @param key   dom key\r\n     */\r\n    public clearDomParams(key:string){\r\n        this.remove('$domparam.' + key);\r\n    }\r\n    \r\n    /**\r\n     * 清除缓存dom对象集\r\n     */\r\n    public clearAllDomParams(){\r\n        this.remove('$domparam');\r\n    }\r\n}\r\n","import { Compiler } from \"./compiler\";\r\nimport { CssManager } from \"./cssmanager\";\r\nimport { VirtualDom } from \"./virtualdom\";\r\nimport { Model } from \"./model\";\r\nimport { ModuleFactory } from \"./modulefactory\";\r\nimport { ObjectManager } from \"./objectmanager\";\r\nimport { Renderer } from \"./renderer\";\r\nimport { Util } from \"./util\";\r\nimport { DiffTool } from \"./difftool\";\r\nimport { ModelManager } from \"./modelmanager\";\r\nimport { EModuleState, IRenderedDom } from \"./types\";\r\nimport { EventFactory } from \"./eventfactory\";\r\n\r\n/**\r\n * 模块类\r\n * 模块方法说明：模版内使用的方法，包括事件，都直接在模块内定义\r\n *      方法this：指向module实例\r\n *      事件参数: model(当前按钮对应model),dom(事件对应虚拟dom),eventObj(事件对象),e(实际触发的html event)\r\n *      表达式方法：参数按照表达式方式给定即可\r\n */\r\nexport class Module {\r\n    /**\r\n     * 模块id(全局唯一)\r\n     */\r\n    public id: number;\r\n\r\n    /**\r\n     * 模型，代理过的data\r\n     */\r\n    public model:Model;\r\n\r\n    /**\r\n     * 子模块类集合，模版中引用的模块类需要声明\r\n     * 如果类已经通过registModule注册过，这里不再需要定义，只需import即可\r\n     */\r\n    public modules: any;\r\n\r\n    /**\r\n     * 父模块通过dom节点传递的属性\r\n     */\r\n    public props:any;\r\n\r\n    /**\r\n     * 编译后的dom树\r\n     */\r\n    public originTree:VirtualDom;\r\n\r\n    /**\r\n     * 渲染树\r\n     */\r\n    public renderTree: IRenderedDom;\r\n\r\n    /**\r\n     * 父模块 id\r\n     */\r\n    public parentId: number;\r\n\r\n    /**\r\n     * 子模块id数组\r\n     */\r\n    public children: Array<number> = [];\r\n\r\n    /**\r\n     * 模块状态\r\n     */\r\n    public state: EModuleState;\r\n\r\n    /**\r\n     * 放置模块的容器\r\n     */\r\n    private container: HTMLElement;\r\n\r\n    /**\r\n     * 后置渲染序列\r\n     */\r\n    private preRenderOps:any[] = [];\r\n\r\n    /**\r\n     * 后置渲染序列\r\n     */\r\n    private postRenderOps:any[] = [];\r\n\r\n    /**\r\n     * 对象管理器，用于管理虚拟dom节点、指令、表达式、事件对象及其运行时参数\r\n     */\r\n    public objectManager:ObjectManager;\r\n\r\n    /**\r\n     * 事件工厂\r\n     */\r\n    public eventFactory:EventFactory;\r\n\r\n    /**\r\n     * 更改model的map，用于记录增量渲染时更改的model\r\n     */\r\n    public changedModelMap:Map<number,boolean>;\r\n\r\n    /**\r\n     * 用于保存每个key对应的html node\r\n     */\r\n    private keyNodeMap:Map<string,Node> = new Map();\r\n\r\n    /**\r\n     * 用户自定义key htmlelement映射\r\n     */\r\n    private keyElementMap:Map<string,HTMLElement> = new Map();\r\n\r\n    /**\r\n     * key virtualdom map \r\n     */\r\n    private keyVDomMap:Map<string,IRenderedDom> = new Map();\r\n\r\n    /**\r\n     * 不允许加入渲染队列标志，在renderdom前设置，避免render前修改数据引发二次渲染\r\n     */\r\n    public dontAddToRender:boolean;\r\n\r\n    /**\r\n     * 来源dom，子模块对应dom\r\n     */\r\n    public srcDom:IRenderedDom;\r\n\r\n    /**\r\n     * 生成dom时的keyid，每次编译置0\r\n     */\r\n    private domKeyId:number;\r\n\r\n    /**\r\n     * 旧模版串\r\n     */\r\n    private oldTemplate:string;\r\n\r\n    /**\r\n     * 源节点对应的html element\r\n     */\r\n    private srcElement:Node;\r\n\r\n    /**\r\n     * 编译来源模块id\r\n     */\r\n    public compileMid:number;\r\n    /**\r\n     * 构造器\r\n     */\r\n    constructor() {\r\n        this.id = Util.genId();\r\n        this.objectManager = new ObjectManager(this);\r\n        this.changedModelMap = new Map();\r\n        this.eventFactory = new EventFactory(this);\r\n        //加入模块工厂\r\n        ModuleFactory.add(this);\r\n    }\r\n\r\n    /**\r\n     * 初始化\r\n     */\r\n    public init() {\r\n        // 设置状态为初始化\r\n        this.state = EModuleState.INITED;\r\n        //初始化model\r\n        this.model = new Model(this.data()||{} , this);\r\n        //注册子模块\r\n        if(this.modules && Array.isArray(this.modules)){\r\n            for (let cls of this.modules) {\r\n                ModuleFactory.addClass(cls);\r\n            }\r\n            delete this.modules;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 模版串方法，使用时重载\r\n     * @param props     props对象，在模版容器dom中进行配置，从父模块传入\r\n     * @returns         模版串\r\n     */\r\n    public template(props?:any):string{\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 数据方法，使用时重载\r\n     * @returns      model数据\r\n     */\r\n    public data():any{\r\n        return {};\r\n    }\r\n    \r\n    /**\r\n     * 模型渲染\r\n     */\r\n    public render(): boolean {\r\n        if(this.state === EModuleState.UNACTIVE){\r\n            return;\r\n        }\r\n        \r\n        this.dontAddToRender = true;\r\n        //检测模版并编译\r\n        let templateStr = this.template(this.props);\r\n        \r\n        if(templateStr !== this.oldTemplate){\r\n            this.oldTemplate = templateStr;\r\n            this.compile();\r\n        }\r\n        //不存在，不渲染\r\n        if(!this.originTree){\r\n            return;\r\n        }\r\n        //执行前置方法\r\n        this.doRenderOps(0);\r\n        //渲染前事件返回true，则不进行渲染\r\n        if(this.doModuleEvent('onBeforeRender')){\r\n            this.dontAddToRender = false;\r\n            return;\r\n        }\r\n        if (!this.renderTree) {\r\n            this.doFirstRender();\r\n        } else { //增量渲染\r\n            //执行每次渲染前事件\r\n            if (this.model) {\r\n                let oldTree = this.renderTree;\r\n                this.renderTree = Renderer.renderDom(this,this.originTree,this.model);\r\n                this.doModuleEvent('onBeforeRenderToHtml');\r\n                let changeDoms = [];\r\n                // 比较节点\r\n                DiffTool.compare(this.renderTree,oldTree, changeDoms);\r\n                //执行更改\r\n                if(changeDoms.length>0){\r\n                    Renderer.handleChangedDoms(this,changeDoms);\r\n                }\r\n            }\r\n        }\r\n        \r\n        //设置已渲染状态\r\n        this.state = EModuleState.RENDERED;\r\n        //执行后置方法\r\n        this.doRenderOps(1);\r\n        //执行每次渲染后事件\r\n        this.doModuleEvent('onRender');\r\n        this.changedModelMap.clear();\r\n        this.dontAddToRender = false;\r\n    }\r\n\r\n    /**\r\n     * 执行首次渲染\r\n     * @param root \t根虚拟dom\r\n     */\r\n    private doFirstRender() {\r\n        \r\n        this.doModuleEvent('onBeforeFirstRender');\r\n        //渲染树\r\n        this.renderTree = Renderer.renderDom(this,this.originTree,this.model);\r\n        this.doModuleEvent('onBeforeFirstRenderToHTML');\r\n        //渲染为html element\r\n        let el:any = Renderer.renderToHtml(this,this.renderTree,null,true);\r\n        if(this.srcDom){  //子模块\r\n            this.srcElement = this.getParent().getNode(this.srcDom.key);\r\n            this.exchange();\r\n        }else if(this.container){  //路由\r\n            this.container.appendChild(el);\r\n        }\r\n        //执行首次渲染后事件\r\n        this.doModuleEvent('onFirstRender');\r\n    }\r\n\r\n    /**\r\n     * 添加子模块\r\n     * @param module    模块id或模块\r\n     */\r\n    public addChild(module: number|Module) {\r\n        let mid;\r\n        if(typeof module === 'number'){\r\n            mid = module;\r\n            module = ModuleFactory.get(mid);\r\n        }else{\r\n            mid = module.id;\r\n        }\r\n        if (!this.children.includes(mid)) {\r\n            this.children.push(mid);\r\n            module.parentId = this.id;\r\n            //首次添加，激活\r\n            module.active();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除子模块\r\n     * @param module    子模块\r\n     */\r\n     public removeChild(module: Module) {\r\n        let ind=this.children.indexOf(module.id);\r\n        if (ind !== -1) {\r\n            module.unactive();\r\n            this.children.splice(ind,1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 激活模块(添加到渲染器)\r\n     * @param type  0 手动， 1父节点setProps激活，默认0\r\n     */\r\n    public active(type?:number) {\r\n        //如果为手动active，srcdom存在且不在renderTree中，则不active\r\n        if(!type && this.srcDom){\r\n            const pm = this.getParent();\r\n            if(pm && !pm.findRenderedDom(this.srcDom.key)){\r\n                return;\r\n            }\r\n        }\r\n        this.state = EModuleState.INITED;\r\n        Renderer.add(this);\r\n    }\r\n\r\n    /**\r\n     * 取消激活\r\n     */\r\n    public unactive() {\r\n        if (ModuleFactory.getMain() === this) {\r\n            return;\r\n        }\r\n        this.doModuleEvent('beforeUnActive');\r\n        //设置状态\r\n        this.state = EModuleState.UNACTIVE;\r\n        if(this.renderTree){\r\n            if(this.container){\r\n                const el = this.getNode(this.renderTree.key);\r\n                if(el){\r\n                    this.container.removeChild(el);\r\n                }\r\n            }else{\r\n                this.exchange(1);\r\n            }\r\n        }\r\n        // delete this.srcDom;\r\n        //删除渲染树\r\n        delete this.renderTree;\r\n\r\n        // 清理dom key map\r\n        this.keyNodeMap.clear();\r\n        this.keyElementMap.clear();\r\n        this.keyVDomMap.clear();\r\n        \r\n        //清空event factory\r\n        this.eventFactory = new EventFactory(this);\r\n        //unactive事件\r\n        this.doModuleEvent('unActive');\r\n\r\n        //处理子模块\r\n        if(this.children){\r\n            //处理子模块\r\n            for(let id of this.children){\r\n                let m = ModuleFactory.get(id);\r\n                if(m){\r\n                    m.unactive();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取父模块\r\n     * @returns     父模块   \r\n     */\r\n    public getParent(): Module {\r\n        if (!this.parentId) {\r\n            return;\r\n        }\r\n        return ModuleFactory.get(this.parentId);\r\n    }\r\n\r\n    /**\r\n     * 执行模块事件\r\n     * @param eventName \t事件名\r\n     * @returns             执行结果，各事件返回值如下：\r\n     *                          onBeforeRender：如果为true，表示不进行渲染\r\n     */\r\n    private doModuleEvent(eventName: string):boolean{\r\n        let foo = this[eventName];\r\n        if(foo && typeof foo==='function'){\r\n            return foo.apply(this,[this.model]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取模块方法\r\n     * @param name  方法名\r\n     * @returns     方法\r\n     */\r\n    public getMethod(name: string): Function {\r\n        return this[name];\r\n    }\r\n\r\n    /**\r\n     * 设置渲染容器\r\n     * @param el        容器\r\n     */\r\n    public setContainer(el:HTMLElement){\r\n        this.container = el;\r\n    }\r\n\r\n    /**\r\n     * 调用方法\r\n     * @param methodName    方法名\r\n     */\r\n    public invokeMethod(methodName: string,arg1?:any,arg2?:any,arg3?:any) {\r\n        let m:Module = this;\r\n        let foo = m[methodName];\r\n        if(!foo && this.compileMid){\r\n            m = ModuleFactory.get(this.compileMid);\r\n            if(m){\r\n                foo = m[methodName];\r\n            }\r\n        }\r\n        \r\n        if (foo && typeof foo === 'function') {\r\n            let args = [];\r\n            for(let i=1;i<arguments.length;i++){\r\n                args.push(arguments[i]);\r\n            }\r\n            return foo.apply(m, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加渲染方法\r\n     * @param foo   方法函数    \r\n     * @param flag  标志 0:渲染前执行 1:渲染后执行\r\n     * @param args  参数\r\n     * @param once  是否只执行一次，如果为true，则执行后删除\r\n     */\r\n    public addRenderOps(foo:Function,flag:number,args?:any[],once?:boolean){\r\n        if(typeof foo !== 'function'){\r\n            return;\r\n        }\r\n        let arr = flag===0?this.preRenderOps:this.postRenderOps;\r\n        arr.push({\r\n            foo:foo,\r\n            args:args,\r\n            once:once\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 执行渲染方法\r\n     * @param flag 类型 0:前置 1:后置\r\n     */\r\n    private doRenderOps(flag:number){\r\n        let arr = flag===0?this.preRenderOps:this.postRenderOps;\r\n        if(arr){\r\n            for(let i=0;i<arr.length;i++){\r\n                let o = arr[i];\r\n                o.foo.apply(this,o.args);\r\n                // 执行后删除\r\n                if(o.once){\r\n                    arr.splice(i--,1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置props\r\n     * @param props     属性值\r\n     * @param dom       子模块对应节点\r\n     */\r\n    public setProps(props:any,dom:IRenderedDom){\r\n        let dataObj = props.$data;\r\n        delete props.$data;\r\n        //props数据复制到模块model\r\n        if(dataObj){\r\n            for(let d in dataObj){\r\n                let o = dataObj[d];\r\n                //如果为对象，需要绑定到模块\r\n                if(typeof o === 'object' && this.model[d] !== o){\r\n                    ModelManager.bindToModule(o,this);\r\n                }\r\n                this.model[d] = o;\r\n            }\r\n        }\r\n        this.srcDom = dom;\r\n        if(this.state === EModuleState.INITED || this.state === EModuleState.UNACTIVE){\r\n            this.active(1);\r\n        }else {  //计算template，如果导致模版改变，需要激活\r\n            let change = false;\r\n            if(!this.props){\r\n                change = true;\r\n            }else{\r\n                const keys = Object.getOwnPropertyNames(props);\r\n                let len1 = keys.length;\r\n                const keys1 = this.props?Object.getOwnPropertyNames(this.props):[];\r\n                let len2 = keys1.length;\r\n                if(len1 !== len2){\r\n                    change = true;\r\n                }else{\r\n                    for(let k of keys){\r\n                        // object 默认改变\r\n                        if(props[k] !== this.props[k]){\r\n                            change = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(change){  //props 发生改变，计算模版，如果模版改变，激活模块\r\n                \r\n                // let propChanged = false;\r\n                // if(this.originTree){\r\n                //     propChanged = this.mergeProps(this.originTree,props);\r\n                // }\r\n                // if(propChanged){\r\n                    this.active(1);\r\n                // }\r\n            } \r\n        }\r\n        this.props = props;\r\n    }\r\n\r\n    /**\r\n     * 编译\r\n     */\r\n    public compile(){\r\n        this.domKeyId = 0;\r\n        //清空孩子节点\r\n        this.children = [];\r\n        //清理css url\r\n        CssManager.clearModuleRules(this);\r\n        //清理dom参数\r\n        this.objectManager.clearAllDomParams();\r\n\r\n        if(!this.oldTemplate){\r\n            return;\r\n        }\r\n        this.originTree = new Compiler(this).compile(this.oldTemplate);\r\n        if(this.props){\r\n            this.mergeProps(this.originTree,this.props);\r\n        }\r\n        \r\n        //源事件传递到子模块根dom\r\n        let parentModule = this.getParent();\r\n        if(parentModule){\r\n            const eobj = parentModule.eventFactory.getEvent(this.srcDom.key);\r\n            if(eobj){\r\n                for(let evt of eobj){\r\n                    if(evt[1].own){  //子模块不支持代理事件\r\n                        for(let ev of evt[1].own){\r\n                            this.originTree.addEvent(ev);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //增加编译后事件\r\n        this.doModuleEvent('onCompile');\r\n    }\r\n\r\n    /**\r\n    * 合并属性\r\n    * @param dom       dom节点 \r\n    * @param props     属性集合\r\n    * @returns         是否改变\r\n    */\r\n    private mergeProps(dom:VirtualDom,props:any):boolean{\r\n        let change = false;\r\n        for(let k of Object.keys(props)){\r\n            //如果dom自己有k属性，则处理为数组\r\n            if(dom.hasProp(k)){ \r\n                let pv = dom.getProp(k);\r\n                if(Array.isArray(pv)){  //是数组，表示已传值，此次进行修改\r\n                    if(pv[1] !== props[k]){\r\n                        dom.setProp(k,[pv[0],props[k]]);    \r\n                        change = true;\r\n                    }\r\n                }else{  //首次传值\r\n                    dom.setProp(k,[pv,props[k]]);\r\n                    change = true;\r\n                }\r\n            }else{  //dom自己无此属性\r\n                dom.setProp(k,props[k]);\r\n                change = true;\r\n            }\r\n        }\r\n        //修改staticNum\r\n        if(change){\r\n            dom.staticNum = 1;\r\n        }\r\n        return change;\r\n    }\r\n\r\n    /**\r\n     * 获取node\r\n     * @param key   dom key \r\n     * @returns     html node\r\n     */\r\n    public getNode(key:string):Node{\r\n        return this.keyNodeMap.get(key);\r\n    }\r\n\r\n    /**\r\n     * save node\r\n     * @param key   dom key\r\n     * @param node  html node\r\n     */\r\n    public saveNode(key:string,node:Node){\r\n        this.keyNodeMap.set(key,node);\r\n    }\r\n\r\n    /**\r\n     * 获取用户key定义的html\r\n     * @param key   用户自定义key\r\n     * @returns     html element\r\n     */\r\n    public getElement(key:string):HTMLElement{\r\n        return this.keyElementMap.get(key);\r\n    }\r\n\r\n    /**\r\n     * 保存用户key对应的htmlelement\r\n     * @param key   自定义key\r\n     * @param node  htmlelement\r\n     */\r\n    public saveElement(key:string,node:HTMLElement){\r\n        this.keyElementMap.set(key,node);\r\n    }\r\n\r\n    /**\r\n     * 获取key对应的virtual dom\r\n     * @param key   vdom key\r\n     * @returns     virtual dom\r\n     */\r\n    public getVirtualDom(key:string):IRenderedDom{\r\n        return this.keyVDomMap.get(key);\r\n    }\r\n\r\n    /**\r\n     * 保存key对应的virtual dom\r\n     * @param dom   virtual dom\r\n     * @param key   vdom key\r\n     */\r\n    public saveVirtualDom(dom:IRenderedDom,key?:string){\r\n        this.keyVDomMap.set(key || dom.key,dom);\r\n    }\r\n\r\n    /**\r\n     * 从keyNodeMap移除\r\n     * @param dom   虚拟dom\r\n     * @param deep  深度清理\r\n     */\r\n    public removeNode(dom:IRenderedDom,deep?:boolean){\r\n        if(dom.subModuleId){  //子模块\r\n            let m = ModuleFactory.get(dom.subModuleId);\r\n            if(m){\r\n                m.unactive();\r\n            }\r\n        }else{  //非子模块\r\n            //从map移除\r\n            this.keyNodeMap.delete(dom.key);\r\n            this.keyElementMap.delete(dom.key);\r\n            this.keyVDomMap.delete(dom.key);\r\n            //解绑所有事件\r\n            this.eventFactory.unbindAll(dom.key);\r\n            if(deep){\r\n                if(dom && dom.children){\r\n                    for(let d of dom.children){\r\n                        this.removeNode(d,true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除 dom cache\r\n     * @param key   dom key\r\n     * @param deep  深度清理\r\n     */\r\n    public clearDomCache(dom:IRenderedDom,deep?:boolean){\r\n        if(deep){\r\n            if(dom.children){\r\n                for(let d of dom.children){\r\n                    this.clearDomCache(d,true);\r\n                }\r\n            }\r\n        }\r\n        //从缓存移除节点\r\n        this.objectManager.clearDomParams(dom.key);\r\n        //从key node map移除\r\n        this.keyNodeMap.delete(dom.key);\r\n        //从virtual dom map移除\r\n        this.keyVDomMap.delete(dom.key);\r\n    }\r\n\r\n    /**\r\n     * 从origin tree 获取虚拟dom节点\r\n     * @param key   dom key\r\n     */\r\n    public getOrginDom(key:string):VirtualDom{\r\n        if(!this.originTree){\r\n            return null;\r\n        }\r\n        return find(this.originTree);\r\n        function find(dom:VirtualDom){\r\n            if(dom.key === key){\r\n                return dom;\r\n            }\r\n            if(dom.children){\r\n                for(let d of dom.children){\r\n                    let d1 = find(d);\r\n                    if(d1){\r\n                        return d1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取dom key id\r\n     * @returns     key id\r\n     */\r\n    public getDomKeyId():number{\r\n        return ++this.domKeyId;\r\n    }\r\n\r\n    /**\r\n     * 子模块节点和源节点相互交换\r\n     * @param flag  0 子模块替换源节点  1源节点替换子模块\r\n     */\r\n    private exchange(flag?:number){\r\n        if(!this.renderTree || !this.srcElement){\r\n            return;\r\n        }\r\n        const el = this.getNode(this.renderTree.key);\r\n        if(!el){\r\n            return;\r\n        }\r\n        const pm = this.getParent();\r\n        if(!flag){  //子模块替换源节点\r\n            if(this.srcElement.parentElement){\r\n                this.srcElement.parentElement.replaceChild(el,this.srcElement);\r\n                pm.saveNode(this.srcDom.key,el);\r\n            }\r\n        }else{ //源节点替换子模块\r\n            if(el.parentElement){\r\n                el.parentElement.replaceChild(this.srcElement,el);\r\n                pm.saveNode(this.srcDom.key,this.srcElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从查询树中查找key对应的渲染节点\r\n     * @param key   dom key\r\n     */\r\n    public findRenderedDom(key:string):IRenderedDom{\r\n        if(!this.renderTree){\r\n            return;\r\n        }\r\n        const d = find(this.renderTree,key);\r\n        return d;\r\n        /**\r\n         * 递归查找\r\n         * @param dom   渲染dom  \r\n         * @param key   待查找key\r\n         * @returns     key对应renderdom 或 undefined\r\n         */\r\n        function find(dom:IRenderedDom,key:string):IRenderedDom{\r\n            if(dom.key === key){\r\n                return dom;\r\n            }\r\n            if(dom.children){\r\n                for(let d of dom.children){\r\n                    let d1 = find(d,key);\r\n                    if(d1){\r\n                        return d1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { DefineElement } from \"../core/defineelement\";\r\nimport { DefineElementManager } from \"../core/defineelementmanager\";\r\nimport { NError } from \"../core/error\";\r\nimport { NodomMessage } from \"../core/nodom\";\r\nimport { VirtualDom } from \"../core/virtualdom\";\r\nimport { Directive } from \"../core/directive\";\r\nimport { Module } from \"../core/module\";\r\n\r\n/**\r\n * module 元素\r\n */\r\nclass MODULE extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //类名\r\n        let clazz = node.getProp('name');\r\n        if (!clazz) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'MODULE', 'className');\r\n        }\r\n        node.delProp('name');\r\n        node.addDirective(new Directive('module',clazz));\r\n    }\r\n}\r\n\r\n/**\r\n * for 元素\r\n */\r\nclass FOR extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //条件\r\n        let cond = node.getProp('cond');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'FOR', 'cond');\r\n        }\r\n        node.delProp('cond');\r\n        node.addDirective(new Directive('repeat',cond));\r\n    }\r\n}\r\n/**\r\n * 递归元素\r\n */\r\nclass RECUR extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //条件\r\n        let cond = node.getProp('cond');\r\n        node.delProp('cond');\r\n        node.addDirective(new Directive('recur',cond));\r\n    }\r\n}\r\n\r\n/**\r\n * IF 元素\r\n */\r\nclass IF extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //条件\r\n        let cond = node.getProp('cond');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'IF', 'cond');\r\n        }\r\n        node.delProp('cond');\r\n        node.addDirective(new Directive('if',cond));\r\n    }\r\n}\r\n\r\nclass ELSE extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        node.addDirective(new Directive('else',null));\r\n    }\r\n}\r\n/**\r\n * ELSEIF 元素\r\n */\r\nclass ELSEIF extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //条件\r\n        let cond = node.getProp('cond');\r\n        if (!cond) {\r\n            throw new NError('itemnotempty', NodomMessage.TipWords['element'], 'ELSEIF', 'cond');\r\n        }\r\n        node.delProp('cond');\r\n        node.addDirective(new Directive('elseif',cond));\r\n    }\r\n}\r\n/**\r\n * ENDIF 元素\r\n */\r\nclass ENDIF extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        node.addDirective(new Directive('endif',null));\r\n    }\r\n}\r\n\r\n/**\r\n * 替代器\r\n */\r\nclass SLOT extends DefineElement{\r\n    constructor(node: VirtualDom,module:Module){\r\n        super(node);\r\n        //条件\r\n        let cond = node.getProp('name') || 'default';\r\n        node.delProp('name');\r\n        node.addDirective(new Directive('slot',cond));\r\n    }\r\n}\r\n\r\nDefineElementManager.add([MODULE,FOR,IF,RECUR,ELSE,ELSEIF,ENDIF,SLOT]);","import { NEvent } from \"../core/event\";\r\nimport { GlobalCache } from \"../core/globalcache\";\r\nimport { Model } from \"../core/model\";\r\nimport { ModelManager } from \"../core/modelmanager\";\r\nimport { Module } from \"../core/module\";\r\nimport { ModuleFactory } from \"../core/modulefactory\";\r\nimport { createDirective } from \"../core/nodom\";\r\nimport { Renderer } from \"../core/renderer\";\r\nimport { Router } from \"../core/router\";\r\nimport { IRenderedDom } from \"../core/types\";\r\nimport { Util } from \"../core/util\";\r\nimport { VirtualDom } from \"../core/virtualdom\";\r\n\r\nexport default (function () {\r\n\r\n    /**\r\n     * 指令类型初始化\r\n     * 每个指令类型都有一个名字、处理函数和优先级，处理函数不能用箭头函数\r\n     * 处理函数在渲染时执行，包含两个参数 module(模块)、dom(目标虚拟dom)、src(源虚拟dom)\r\n     * 处理函数的this指向指令\r\n     * 处理函数的返回值 true 表示继续，false 表示后续指令不再执行 \r\n     */\r\n\r\n    /**\r\n     * module 指令\r\n     * 用于指定该元素为模块容器，表示子模块\r\n     * 用法 x-module='模块类名'\r\n     */\r\n    createDirective(\r\n        'module',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            let m: Module;\r\n            //存在moduleId，表示已经渲染过，不渲染\r\n            let mid = module.objectManager.getDomParam(dom.key, 'moduleId');\r\n            let handle: boolean = true;\r\n            if (mid) {\r\n                m = ModuleFactory.get(mid);\r\n                handle = !dom.props['renderOnce'];\r\n            } else {\r\n                m = ModuleFactory.get(this.value);\r\n                if (!m) {\r\n                    return true;\r\n                }\r\n                //设置编译源id\r\n                if(this.params && this.params.srcId){\r\n                    m.compileMid = this.params.srcId;\r\n                }\r\n                mid = m.id;\r\n                //保留modelId\r\n                module.objectManager.setDomParam(dom.key, 'moduleId', mid);\r\n                module.addChild(m);\r\n                //共享当前dom的model给子模块\r\n                if (src.hasProp('useDomModel')) {\r\n                    m.model = dom.model;\r\n                    //绑定model到子模块，共享update,watch方法\r\n                    ModelManager.bindToModule(m.model, m);\r\n                    delete dom.props['useDomModel'];\r\n                }\r\n            }\r\n            //保存到dom上，提升渲染性能\r\n            dom.subModuleId = mid;\r\n            //变成文本节点，作为子模块占位符，子模块渲染后插入到占位符前面\r\n            delete dom.tagName;\r\n            \r\n            if (handle) { //需要处理\r\n                //设置props，如果改变了props，启动渲染\r\n                let o: any = {};\r\n                if (dom.props) {\r\n                    for (let p of Object.keys(dom.props)) {\r\n                        let v = dom.props[p];\r\n                        if (p[0] === '$') { //数据\r\n                            if (!o.$data) {\r\n                                o.$data = {};\r\n                            }\r\n                            o.$data[p.substring(1)] = v;\r\n                            //删除属性\r\n                            delete dom.props[p];\r\n                        } else {\r\n                            o[p] = v;\r\n                        }\r\n                    }\r\n                }\r\n                //传递给模块\r\n                m.setProps(o, dom);\r\n            }\r\n            return true;\r\n        },\r\n        8\r\n    );\r\n\r\n    /**\r\n     *  model指令\r\n     */\r\n    createDirective(\r\n        'model',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            let model: Model = dom.model.$get(this.value);\r\n            if (model) {\r\n                dom.model = model;\r\n            }\r\n            return true;\r\n        },\r\n        1\r\n    );\r\n\r\n    /**\r\n     * 指令名 repeat\r\n     * 描述：重复指令\r\n     */\r\n    createDirective(\r\n        'repeat',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            let rows = this.value;\r\n            // 无数据，不渲染\r\n            if (!Util.isArray(rows) || rows.length === 0) {\r\n                return false;\r\n            }\r\n            //索引名\r\n            const idxName = src.getProp('$index');\r\n            const parent = dom.parent;\r\n            //禁用该指令\r\n            this.disabled = true;\r\n            \r\n            //避免在渲染时对src设置了model，此处需要删除\r\n            delete src.model;\r\n            for (let i = 0; i < rows.length; i++) {\r\n                if (idxName) {\r\n                    rows[i][idxName] = i;\r\n                }\r\n                //渲染一次-1，所以需要+1\r\n                src.staticNum++;\r\n                let d = Renderer.renderDom(module, src, rows[i], parent, rows[i].$key + '');\r\n                //删除$index属性\r\n                if (idxName) {\r\n                    delete d.props['$index'];\r\n                }\r\n            }\r\n            //启用该指令\r\n            this.disabled = false;\r\n            return false;\r\n        },\r\n        2\r\n    );\r\n\r\n    /**\r\n     * 递归指令\r\n     * 作用：在dom内部递归，用于具有相同数据结构的节点递归生成\r\n     * 递归指令不允许嵌套\r\n     * name表示递归名字，必须与内部的recur标签的ref保持一致，名字默认为default\r\n     * 典型模版\r\n     * ```\r\n     * <recur name='r1'>\r\n     *      <div>...</div>\r\n     *      <p>...</p>\r\n     *      <recur ref='r1' />\r\n     * </recur>\r\n     * ```\r\n     */\r\n    createDirective(\r\n        'recur',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            //当前节点是递归节点存放容器\r\n            if (dom.props.hasOwnProperty('ref')) {\r\n                //如果出现在repeat中，src为单例，需要在使用前清空子节点，避免沿用上次的子节点\r\n                src.children = [];\r\n                //递归存储名\r\n                const name = '$recurs.' + (dom.props['ref'] || 'default');\r\n                let node = module.objectManager.get(name);\r\n                if (!node) {\r\n                    return true;\r\n                }\r\n                let model = dom.model;\r\n                let cond = node.getDirective('recur');\r\n                let m = model[cond.value];\r\n                //不存在子层数组，不再递归\r\n                if (!m) {\r\n                    return true;\r\n                }\r\n\r\n                //克隆，后续可以继续用\r\n                let node1 = node.clone();\r\n                //recur子节点不为数组，依赖子层数据，否则以来repeat数据\r\n                if (!Array.isArray(m)) {  \r\n                    node1.model = m;\r\n                    Util.setNodeKey(node1, m.$key, true);\r\n                }\r\n                src.children = [node1];\r\n                node1.parent = src;\r\n            } else { //递归节点\r\n                let data = dom.model[this.value];\r\n                if (!data) {\r\n                    return true;\r\n                }\r\n                //递归名，默认default\r\n                const name = '$recurs.' + (dom.props['name'] || 'default');\r\n                if (!module.objectManager.get(name)) {\r\n                    module.objectManager.set(name, src);\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        2\r\n    );\r\n\r\n    /**\r\n     * 指令名 if\r\n     * 描述：条件指令\r\n     */\r\n    createDirective('if',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            module.objectManager.setDomParam(dom.parent.key, '$if', this.value);\r\n            return this.value;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * 指令名 else\r\n     * 描述：else指令\r\n     */\r\n    createDirective(\r\n        'else',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            return module.objectManager.getDomParam(dom.parent.key, '$if') === false;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * elseif 指令\r\n     */\r\n    createDirective('elseif',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            let v = module.objectManager.getDomParam(dom.parent.key, '$if');\r\n            if (v === true) {\r\n                return false;\r\n            } else {\r\n                if (!this.value) {\r\n                    return false;\r\n                } else {\r\n                    module.objectManager.setDomParam(dom.parent.key, '$if', true);\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * elseif 指令\r\n     */\r\n    createDirective(\r\n        'endif',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            module.objectManager.removeDomParam(dom.parent.key, '$if');\r\n            return true;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * 指令名 show\r\n     * 描述：显示指令\r\n     */\r\n    createDirective(\r\n        'show',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            if (this.value) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * 指令名 field\r\n     * 描述：字段指令\r\n     */\r\n    createDirective('field',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            const type: string = dom.props['type'] || 'text';\r\n            const tgname = dom.tagName.toLowerCase();\r\n            const model = dom.model;\r\n            if (!model) {\r\n                return true;\r\n            }\r\n            let dataValue = model.$get(this.value);\r\n            if (type === 'radio') {\r\n                let value = dom.props['value'];\r\n                if (dataValue == value) {\r\n                    dom.props['checked'] = 'checked';\r\n                    Util.setDomAsset(dom, 'checked', true);\r\n                } else {\r\n                    delete dom.props['checked'];\r\n                    Util.setDomAsset(dom, 'checked', false);\r\n                }\r\n            } else if (type === 'checkbox') {\r\n                //设置状态和value\r\n                let yv = dom.props['yes-value'];\r\n                //当前值为yes-value\r\n                if (dataValue == yv) {\r\n                    dom.props['value'] = yv;\r\n                    Util.setDomAsset(dom, 'checked', true);\r\n                } else { //当前值为no-value\r\n                    dom.props['value'] = dom.props['no-value'];\r\n                    Util.setDomAsset(dom, 'checked', false);\r\n                }\r\n            } else if (tgname === 'select') { //下拉框\r\n                dom.props['value'] = dataValue;\r\n                Util.setDomAsset(dom, 'value', dataValue);\r\n            } else {\r\n                let v = (dataValue !== undefined && dataValue !== null) ? dataValue : '';\r\n                dom.props['value'] = v;\r\n                Util.setDomAsset(dom, 'value', v);\r\n            }\r\n            let event: NEvent = GlobalCache.get('$fieldChangeEvent');\r\n            if (!event) {\r\n                event = new NEvent(null, 'change',\r\n                    function (model, dom) {\r\n                        let el = <any>this.getNode(dom.key);\r\n                        if (!el) {\r\n                            return;\r\n                        }\r\n                        let directive = dom.vdom.getDirective('field');\r\n                        let type = dom.props['type'];\r\n                        let field = directive.value;\r\n                        let v = el.value;\r\n\r\n                        //根据选中状态设置checkbox的value\r\n                        if (type === 'checkbox') {\r\n                            if (dom.props['yes-value'] == v) {\r\n                                v = dom.props['no-value'];\r\n                            } else {\r\n                                v = dom.props['yes-value'];\r\n                            }\r\n                        } else if (type === 'radio') {\r\n                            if (!el.checked) {\r\n                                v = undefined;\r\n                            }\r\n                        }\r\n\r\n                        //修改字段值,需要处理.运算符\r\n                        let arr = field.split('.')\r\n                        if (arr.length === 1) {\r\n                            model[field] = v;\r\n                        } else {\r\n                            let temp = model;\r\n                            field = arr.pop();\r\n                            for (let i = 0; i < arr.length && temp; i++) {\r\n                                temp = temp[arr[i]];\r\n                            }\r\n                            if (temp) {\r\n                                temp[field] = v;\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n                GlobalCache.set('$fieldChangeEvent', event);\r\n            }\r\n            src.addEvent(event);\r\n            return true;\r\n        },\r\n        10\r\n    );\r\n\r\n    /**\r\n     * route指令\r\n     */\r\n    createDirective('route',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            //a标签需要设置href\r\n            if (dom.tagName.toLowerCase() === 'a') {\r\n                dom.props['href'] = 'javascript:void(0)';\r\n            }\r\n            dom.props['path'] = this.value;\r\n            //有激活属性\r\n            if (dom.props['active']) {\r\n                let acName = dom.props['active'];\r\n                delete dom.props['active'];\r\n                //active 转expression\r\n                Router.addActiveField(module, this.value, dom.model, acName);\r\n                if (this.value.startsWith(Router.currentPath) && dom.model[acName]) {\r\n                    Router.go(this.value);\r\n                }\r\n            }\r\n\r\n            //添加click事件,避免重复创建事件对象，创建后缓存\r\n            let event: NEvent = GlobalCache.get('$routeClickEvent');\r\n            if (!event) {\r\n                event = new NEvent(null, 'click',\r\n                    function (model, dom, evObj, e) {\r\n                        let path = dom.props['path'];\r\n                        if (Util.isEmpty(path)) {\r\n                            return;\r\n                        }\r\n                        Router.go(path);\r\n                    }\r\n                );\r\n                GlobalCache.set('$routeClickEvent', event);\r\n            }\r\n            src.addEvent(event);\r\n            return true;\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 增加router指令\r\n     */\r\n    createDirective('router',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            Router.routerKeyMap.set(module.id, dom.key);\r\n            return true;\r\n        }\r\n    );\r\n\r\n    /**\r\n     * 插头指令\r\n     * 用于模块中，可实现同名替换\r\n     */\r\n    createDirective('slot',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n            this.value = this.value || 'default';\r\n            let mid = dom.parent.subModuleId;\r\n            //父dom有module指令，表示为替代节点，替换子模块中的对应的slot节点；否则为子模块定义slot节点\r\n            if (mid) {\r\n                let m = ModuleFactory.get(mid);\r\n                if (m) {\r\n                    //缓存当前替换节点\r\n                    m.objectManager.set('$slots.' + this.value, { dom: src, model: dom.model });\r\n                    //只需添加一次，用后即删除\r\n                    if(src.parent){\r\n                        src.parent.remove(src);\r\n                    }\r\n                }\r\n            } else { //源slot节点\r\n                //获取替换节点进行替换\r\n                const cfg = module.objectManager.get('$slots.' + this.value);\r\n                if (cfg) {\r\n                    //避免key重复，更新key\r\n                    for (let d of cfg.dom.children) {\r\n                        let model;\r\n                        if (src.hasProp('innerRender')) {  //内部数据渲染\r\n                            model = dom.model;\r\n                        }else{      //外部数据渲染\r\n                            model = cfg.model;\r\n                            //对象绑定到当前模块\r\n                            ModelManager.bindToModule(cfg.model, module);\r\n                        }\r\n                        //key以s结尾，避免重复，以dom key作为附加key\r\n                        Renderer.renderDom(module, d, model, dom.parent, dom.key+'s');\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        5\r\n    );\r\n\r\n    /**\r\n     * 指令名 \r\n     * 描述：动画指令\r\n     */\r\n    createDirective('animation',\r\n        function (module: Module, dom: IRenderedDom, src: VirtualDom) {\r\n\r\n            const confObj = this.value\r\n            if (!Util.isObject(confObj)) {\r\n                return new Error('未找到animation配置对象');\r\n            }\r\n\r\n            // 获得tigger\r\n            const tigger = confObj.tigger == false ? false : true;\r\n\r\n            // 用于判断是动画还是过渡\r\n            const type = confObj.type || \"transition\";\r\n            // 用于判断是否是 进入/离开动画 \r\n            const isAppear = confObj.isAppear == false ? false : true;\r\n\r\n            // 提取 动画/过渡 名\r\n            const nameEnter = confObj.name?.enter || confObj.name;\r\n            const nameLeave = confObj.name?.leave || confObj.name;\r\n\r\n            // 提取 动画/过渡 持续时间\r\n            const durationEnter = confObj.duration?.enter || confObj.duration || '';\r\n            const durationLeave = confObj.duration?.leavr || confObj.duration || '';\r\n\r\n            // 提取 动画/过渡 延迟时间\r\n            const delayEnter = confObj.delay?.enter || confObj.delay || '0s';\r\n            const delayLeave = confObj.delay?.leave || confObj.delay || '0s';\r\n\r\n            // 提取 动画/过渡 时间函数\r\n            const timingFunctionEnter = confObj.timingFunction?.enter || confObj.timingFunction || 'ease';\r\n            const timingFunctionLeave = confObj.timingFunction?.leave || confObj.timingFunction || 'ease';\r\n\r\n            // 提取动画/过渡 钩子函数\r\n            const beforeEnter =\r\n                confObj.hooks?.enter?.before ? confObj.hooks.enter.before : confObj.hooks?.before || undefined;\r\n            const afterEnter =\r\n                confObj.hooks?.enter?.after ? confObj.hooks.enter.after : confObj.hooks?.after || undefined;\r\n            const beforeLeave =\r\n                confObj.hooks?.leave?.before ? confObj.hooks.leave.before : confObj.hooks?.before || undefined;\r\n            const afterLeave =\r\n                confObj.hooks?.leave?.after ? confObj.hooks.leave.after : confObj.hooks?.after || undefined;\r\n\r\n            // 定义动画或者过渡结束回调。\r\n            let handler = () => {\r\n                const el: HTMLElement = <HTMLElement>module.getNode(dom.key)\r\n                // 离开动画结束之后隐藏元素\r\n                if (!tigger) {\r\n                    if (isAppear) {\r\n                        // 离开动画结束之后 把元素隐藏\r\n                        el.style.display = 'none';\r\n                    }\r\n                    if (afterLeave) {\r\n                        afterLeave.apply(module.model, [module]);\r\n                    }\r\n                    // 这里如果style里面写了width和height 那么给他恢复成他写的，不然\r\n                    [el.style.width, el.style.height] = getOriginalWidthAndHeight(dom);\r\n                    // 结束之后删除掉离开动画相关的类\r\n                    el.classList.remove(nameLeave + '-leave-active')\r\n                    if (type == 'animation') {\r\n                        el.classList.add(nameLeave + '-leave-to')\r\n                    }\r\n                } else {\r\n                    if (afterEnter) {\r\n                        afterEnter.apply(module.model, [module]);\r\n                    }\r\n                    // 进入动画结束之后删除掉相关的类\r\n                    el.classList.remove(nameEnter + '-enter-active')\r\n                    if (type == 'animation') {\r\n                        el.classList.add(nameEnter + '-enter-to')\r\n                    }\r\n                }\r\n                // 清除事件监听\r\n                el.removeEventListener('animationend', handler);\r\n                el.removeEventListener('transitionend', handler);\r\n            }\r\n\r\n            // 获得真实dom\r\n            let el: HTMLElement = <HTMLElement>module.getNode(dom.key);\r\n\r\n            if (!tigger) {\r\n                // tigger为false 播放Leave动画\r\n                if (el) {\r\n                    if (el.getAttribute('class').indexOf(`${nameLeave}-leave-to`) != -1) {\r\n                        // 当前已经处于leave动画播放完成之后，若是进入离开动画，这时候需要他保持隐藏状态。\r\n                        dom.props['class'] += ` ${nameLeave}-leave-to`;\r\n                        if (isAppear) {\r\n                            dom.props[\"style\"]\r\n                                ? (dom.props[\"style\"] += \";display:none;\")\r\n                                : (dom.props[\"style\"] = \"display:none;\");\r\n                        }\r\n                        return true;\r\n                    }\r\n                    // // 确保在触发动画之前还是隐藏状态\r\n                    // 调用函数触发 Leave动画/过渡\r\n                    changeStateFromShowToHide(el);\r\n                    return true;\r\n                } else {\r\n                    // el不存在，第一次渲染\r\n                    if (isAppear) {\r\n                        // 是进入离开动画，管理初次渲染的状态，让他隐藏\r\n                        dom.props[\"style\"]\r\n                            ? (dom.props[\"style\"] += \";display:none;\")\r\n                            : (dom.props[\"style\"] = \"display:none;\");\r\n                    }\r\n\r\n                    // 下一帧\r\n                    setTimeout(() => {\r\n                        // el已经渲染出来，取得el 根据动画/过渡的类型来做不同的事\r\n                        let el: HTMLElement = <HTMLElement>module.getNode(dom.key)\r\n                        if (isAppear) {\r\n                            // 动画/过渡 是进入离开动画/过渡，并且当前是需要让他隐藏所以我们不播放动画，直接隐藏。\r\n                            el.classList.add(`${nameLeave}-leave-to`)\r\n                            // 这里必须将这个属性加入到dom中,否则该模块其他数据变化触发增量渲染时,diff会将这个节点重新渲染,导致显示异常\r\n                            // 这里添加添加属性是为了避免diff算法重新渲染该节点\r\n                            dom.props['class'] += ` ${nameLeave}-leave-to`;\r\n                            el.style.display = 'none'\r\n                        } else {\r\n                            //  动画/过渡 是 **非进入离开动画/过渡** 我们不管理元素的隐藏，所以我们让他播放一次Leave动画。\r\n                            changeStateFromShowToHide(el);\r\n                        }\r\n                    }, 0);\r\n                }\r\n                // 通过虚拟dom将元素渲染出来\r\n                return true\r\n            } else {\r\n                // tigger为true 播放Enter动画\r\n                if (el) {\r\n                    if (el.getAttribute('class').indexOf(`${nameEnter}-enter-to`) != -1) {\r\n                        // 这里不需要像tigger=false时那样处理，这时候他已经处于进入动画播放完毕状态，\r\n                        // 模块内其他数据变化引起该指令重新执行，这时候需要他保持现在显示的状态，直接返回true\r\n                        dom.props['class'] += ` ${nameEnter}-enter-to`;\r\n                        return true;\r\n                    }\r\n                    if (isAppear) {\r\n                        // 如果是进入离开动画，在播放enter动画之前确保该元素是隐藏状态\r\n                        // 确保就算diff更新了该dom还是有隐藏属性\r\n                        dom.props[\"style\"]\r\n                            ? (dom.props[\"style\"] += \";display:none;\")\r\n                            : (dom.props[\"style\"] = \"display:none;\");\r\n                    }\r\n                    // 调用函数触发Enter动画/过渡\r\n                    changeStateFromHideToShow(el);\r\n                } else {\r\n                    // el不存在，是初次渲染\r\n                    if (isAppear) {\r\n                        // 管理初次渲染元素的隐藏显示状态\r\n                        dom.props[\"style\"]\r\n                            ? (dom.props[\"style\"] += \";display:none;\")\r\n                            : (dom.props[\"style\"] = \"display:none;\");\r\n                    }\r\n                    // 下一帧\r\n                    setTimeout(() => {\r\n                        // 等虚拟dom把元素更新上去了之后，取得元素\r\n                        let el: HTMLElement = <HTMLElement>module.getNode(dom.key)\r\n                        if (isAppear) {\r\n                            // 这里必须将这个属性加入到dom中,否则该模块其他数据变化触发增量渲染时,diff会将这个节点重新渲染,导致显示异常\r\n                            // 这里添加添加属性是为了避免diff算法重新渲染该节点\r\n                            dom.props['class'] += ` ${nameEnter}-enter-to`;\r\n                            el.style.display = 'none';\r\n                        }\r\n                        // Enter动画与Leave动画不同，\r\n                        // 不管动画是不是进入离开动画，在初次渲染的时候都要执行一遍动画\r\n                        // Leave动画不一样，如果是开始离开动画，并且初次渲染的时候需要隐藏，那么我们没有必要播放一遍离开动画\r\n                        changeStateFromHideToShow(el);\r\n                    }, 0);\r\n                }\r\n                // 通过虚拟dom将元素渲染出来\r\n                return true\r\n            }\r\n            /**\r\n             * 播放Leave动画\r\n             * @param el 真实dom\r\n             */\r\n            function changeStateFromShowToHide(el: HTMLElement) {\r\n                // 动画类型是transitiojn\r\n                if (type == 'transition') {\r\n                    // 前面已经对transition的初始状态进行了设置，我们需要在下一帧设置结束状态才能触发过渡\r\n\r\n                    // 获得宽高的值 因为 宽高的auto 百分比 calc计算值都无法拿来触发动画或者过渡。\r\n                    let [width, height] = getElRealSzie(el);\r\n                    // setTimeout(() => {\r\n                    requestAnimationFrame(() => {\r\n                        // 移除掉上一次过渡的最终状态\r\n                        el.classList.remove(nameEnter + '-enter-to')\r\n\r\n                        // 设置过渡的类名\r\n                        el.classList.add(nameLeave + '-leave-active');\r\n\r\n                        // 设置离开过渡的开始类\r\n                        el.classList.add(nameLeave + '-leave-from');\r\n\r\n                        // fold过渡的开始状态\r\n                        if (nameLeave == 'fold-height') {\r\n                            el.style.height = height;\r\n                        } else if (nameLeave == 'fold-width') {\r\n                            el.style.width = width;\r\n                        }\r\n\r\n                        // 处理离开过渡的延时\r\n                        el.style.transitionDelay = delayEnter;\r\n                        // 处理过渡的持续时间\r\n                        if (durationEnter != '') {\r\n                            el.style.transitionDuration = durationEnter;\r\n                        }\r\n                        // 处理过渡的时间函数\r\n                        if (timingFunctionEnter != 'ease') {\r\n                            el.style.transitionTimingFunction = timingFunctionEnter;\r\n                        }\r\n                        // 在触发过渡之前执行hook\r\n                        if (beforeLeave) {\r\n                            beforeLeave.apply(module.model, [module]);\r\n                        }\r\n                        requestAnimationFrame(() => {\r\n                            // 添加结束状态\r\n                            el.classList.add(nameLeave + '-leave-to');\r\n                            // 在动画或者过渡开始之前移除掉初始状态\r\n                            el.classList.remove(nameLeave + '-leave-from');\r\n\r\n                            if (nameLeave == 'fold-height') {\r\n                                el.style.height = '0px';\r\n                            } else if (nameLeave == 'fold-width') {\r\n                                el.style.width = '0px';\r\n                            }\r\n                            // 添加过渡结束事件监听\r\n                            el.addEventListener('transitionend', handler);\r\n                        })\r\n\r\n                    });\r\n                } else {\r\n                    requestAnimationFrame(() => {\r\n                        // 动画类型是aniamtion\r\n                        el.classList.remove(nameEnter + '-enter-to');\r\n\r\n                        // 动画延时时间\r\n                        el.style.animationDelay = delayLeave;\r\n\r\n                        // 动画持续时间\r\n                        if (durationLeave != '') {\r\n                            el.style.animationDuration = durationLeave;\r\n                        }\r\n\r\n                        if (timingFunctionLeave != 'ease') {\r\n                            el.style.animationTimingFunction = timingFunctionLeave;\r\n                        }\r\n                        // 在触发动画之前执行hook\r\n                        if (beforeLeave) {\r\n                            beforeLeave.apply(module.model, [module]);\r\n                        }\r\n                        // 触发一次回流reflow\r\n                        void el.offsetWidth;\r\n                        // 添加动画类名\r\n                        el.classList.add(nameLeave + '-leave-active');\r\n                        //添加动画结束时间监听\r\n                        el.addEventListener('animationend', handler);\r\n                        // })\r\n                    })\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 播放Enter动画\r\n             * @param el 真实dom\r\n             */\r\n            function changeStateFromHideToShow(el: HTMLElement) {\r\n                // 动画类型是transition\r\n                if (type == 'transition') {\r\n                    // 对于进入/离开动画\r\n                    // Enter过渡的延迟时间与Leave过渡的延迟时间处理不一样\r\n                    // 我们这里把延迟统一设置成0s，然后通过定时器来设置延时，\r\n                    // 这样可以避免先渲染一片空白区域占位，然后再延时一段时间执行过渡效果。\r\n\r\n                    el.style.transitionDelay = '0s';\r\n                    let delay = parseFloat(delayEnter) * 1000;\r\n                    setTimeout(() => {\r\n\r\n                        let [width, height] = getElRealSzie(el);\r\n                        // 在第一帧设置初始状态\r\n                        // 移除掉上一次过渡的最终状态\r\n                        el.classList.remove(nameLeave + '-leave-to');\r\n                        // 添加过渡的类名\r\n                        el.classList.add(nameEnter + '-enter-active');\r\n                        // 给进入过渡设置开始类名\r\n                        el.classList.add(nameEnter + '-enter-from');\r\n                        // 获得元素的真实尺寸\r\n                        if (nameEnter == 'fold-height') {\r\n                            el.style.height = '0px'\r\n                        } else if (nameEnter == 'fold-width') {\r\n                            el.style.width = '0px'\r\n                        }\r\n                        // 设置过渡持续时间\r\n                        if (durationEnter != '') {\r\n                            el.style.transitionDuration = durationEnter;\r\n                        }\r\n                        // 设置过渡时间函数\r\n                        if (timingFunctionEnter != 'ease') {\r\n                            el.style.transitionTimingFunction = timingFunctionEnter;\r\n                        }\r\n                        // 第二帧将带有初始状态的元素显示出来,如果不开这一帧那么fade的进入过渡在初次渲染的时候会被当作离开过渡触发。\r\n                        requestAnimationFrame(() => {\r\n                            // 下一帧请求过渡效果\r\n                            // 过渡开始之前先将元素显示\r\n                            if (isAppear) {\r\n                                el.style.display = '';\r\n                            }\r\n                            // 第三帧触发过渡\r\n                            requestAnimationFrame(() => {\r\n                                if (beforeEnter) {\r\n                                    beforeEnter.apply(module.model, [module]);\r\n                                }\r\n                                // 增加 过渡 结束类名\r\n                                el.classList.add(nameEnter + '-enter-to');\r\n                                // 移除过渡的开始类名\r\n                                el.classList.remove(nameEnter + '-enter-from');\r\n\r\n                                if (nameEnter == 'fold-height') {\r\n                                    el.style.height = height;\r\n                                } else if (nameEnter == 'fold-width') {\r\n                                    el.style.width = width;\r\n                                }\r\n                                el.addEventListener('transitionend', handler);\r\n                            })\r\n                        })\r\n                    }, delay);\r\n                } else {\r\n                    // 动画类型是aniamtion\r\n                    // 这里动画的延迟时间也与过渡类似的处理方式。\r\n                    el.style.animationDelay = \"0s\";\r\n                    let delay = parseFloat(delayEnter) * 1000;\r\n                    setTimeout(() => {\r\n                        // 动画开始之前先将元素显示\r\n                        requestAnimationFrame(() => {\r\n                            el.classList.remove(nameLeave + '-leave-to');\r\n\r\n                            // 设置动画的持续时间\r\n                            if (durationEnter != '') {\r\n                                el.style.animationDuration = durationEnter;\r\n                            }\r\n\r\n                            // 设置动画的时间函数\r\n                            if (timingFunctionEnter != 'ease') {\r\n                                el.style.animationTimingFunction = durationEnter;\r\n                            }\r\n                            if (isAppear) {\r\n                                el.style.display = '';\r\n                            }\r\n                            // 在触发过渡之前执行hook \r\n                            if (beforeEnter) {\r\n                                beforeEnter.apply(module.model, [module]);\r\n                            }\r\n                            // 触发一次回流reflow\r\n                            void el.offsetWidth;\r\n                            // 重新添加类名\r\n                            el.classList.add(nameEnter + '-enter-active');\r\n                            el.addEventListener('animationend', handler);\r\n                        })\r\n                    }, delay);\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 获取真实dom绘制出来之后的宽高\r\n             * @param el 真实dom\r\n             * @returns 真实dom绘制出来之后的宽高\r\n             */\r\n            function getElRealSzie(el: HTMLElement) {\r\n                if (el.style.display == 'none') {\r\n                    // 获取原先的\r\n                    const position = window.getComputedStyle(el).getPropertyValue(\"position\")\r\n                    const vis = window.getComputedStyle(el).getPropertyValue(\"visibility\")\r\n\r\n                    // 先脱流\r\n                    el.style.position = 'absolute';\r\n                    // 然后将元素变为\r\n                    el.style.visibility = 'hidden';\r\n\r\n                    el.style.display = '';\r\n\r\n                    let width = window.getComputedStyle(el).getPropertyValue(\"width\");\r\n                    let height = window.getComputedStyle(el).getPropertyValue(\"height\");\r\n\r\n                    // 还原样式\r\n                    el.style.position = position;\r\n                    el.style.visibility = vis;\r\n                    el.style.display = 'none';\r\n\r\n                    return [width, height]\r\n                } else {\r\n                    let width = window.getComputedStyle(el).getPropertyValue(\"width\");\r\n                    let height = window.getComputedStyle(el).getPropertyValue(\"height\");\r\n                    return [width, height]\r\n                }\r\n            }\r\n\r\n            /**\r\n             * 如果dom上得style里面有width/height\r\n             * @param dom 虚拟dom\r\n             * @returns 获得模板上的width/height 如果没有则返回空字符串\r\n             */\r\n            function getOriginalWidthAndHeight(dom: IRenderedDom): Array<string> {\r\n                const oStyle = dom.vdom.getProp('style');\r\n                let width: string;\r\n                let height: string;\r\n                if (oStyle) {\r\n                    let arr = oStyle.trim().split(/;\\s*/);\r\n                    for (const a of arr) {\r\n                        if (a.startsWith('width')) {\r\n                            width = a.split(\":\")[1];\r\n                        }\r\n                        if (a.startsWith('height')) {\r\n                            height = a.split(':')[1];\r\n                        }\r\n                    }\r\n                }\r\n                width = width || '';\r\n                height = height || '';\r\n                return [width, height];\r\n            }\r\n        },\r\n        9\r\n    );\r\n}());\r\n","import { NEvent } from \"../core/event\";\r\nimport { Module } from \"../core/module\";\r\nimport { EventManager } from \"../core/eventmanager\";\r\nimport { IRenderedDom } from \"../core/types\";\r\n\r\n/**\r\n * tap事件\r\n */\r\nEventManager.regist('tap',{\r\n    touchstart(dom:IRenderedDom,module:Module,evtObj:NEvent,e: TouchEvent) {\r\n        let tch = e.touches[0];\r\n        evtObj.dependEvent.setParam(module,dom,'pos', { sx: tch.pageX, sy: tch.pageY, t: Date.now() });\r\n    },\r\n    touchmove(dom:IRenderedDom,module:Module,evtObj:NEvent,e: TouchEvent) {\r\n        let pos = evtObj.dependEvent.getParam(module,dom,'pos');\r\n        if(!pos){\r\n            return;\r\n        }\r\n        let tch = e.touches[0];\r\n        let dx = tch.pageX - pos.sx;\r\n        let dy = tch.pageY - pos.sy;\r\n        //判断是否移动\r\n        if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n            pos.move = true;\r\n        }\r\n    },\r\n    touchend(dom:IRenderedDom,module:Module,evtObj:NEvent,e: TouchEvent) {\r\n        let pos = evtObj.dependEvent.getParam(module,dom,'pos');\r\n        if(!pos){\r\n            return;\r\n        }\r\n        evtObj.dependEvent.removeParam(module,dom,'pos');\r\n        let dt = Date.now() - pos.t;\r\n        \r\n        //点下时间不超过200ms,触发事件\r\n        if (!pos.move && dt < 200) {\r\n            let foo = evtObj.dependEvent.handler;\r\n            if(typeof foo === 'string'){\r\n                foo = module.getMethod(foo);\r\n            }\r\n            if(foo){\r\n                foo.apply(module,[dom.model, dom,evtObj.dependEvent, e]); \r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * swipe事件\r\n */\r\n EventManager.regist('swipe',{\r\n    touchstart(dom:IRenderedDom,module:Module,evtObj:NEvent,e: TouchEvent){\r\n        let tch = e.touches[0];\r\n        let t = Date.now();\r\n        evtObj.dependEvent.setParam(module,dom,'swipe', {\r\n            oldTime: [t, t],\r\n            speedLoc: [{ x: tch.pageX, y: tch.pageY }, { x: tch.pageX, y: tch.pageY }],\r\n            oldLoc: { x: tch.pageX, y: tch.pageY }\r\n        });\r\n    },\r\n    touchmove(dom:IRenderedDom,module:Module,evtObj:NEvent,e: TouchEvent){\r\n        let nt = Date.now();\r\n        let tch = e.touches[0];\r\n        let mv = evtObj.dependEvent.getParam(module,dom,'swipe');\r\n        //50ms记录一次\r\n        if (nt - mv.oldTime[1] > 50) {\r\n            mv.speedLoc[0] = { x: mv.speedLoc[1].x, y: mv.speedLoc[1].y };\r\n            mv.speedLoc[1] = { x: tch.pageX, y: tch.pageY };\r\n            mv.oldTime[0] = mv.oldTime[1];\r\n            mv.oldTime[1] = nt;\r\n        }\r\n        mv.oldLoc = { x: tch.pageX, y: tch.pageY };\r\n    },\r\n    touchend(dom:IRenderedDom,module:Module,evtObj:NEvent,e: any){\r\n        let mv = evtObj.dependEvent.getParam(module,dom,'swipe');\r\n        let nt = Date.now();\r\n\r\n        //取值序号 0 或 1，默认1，如果释放时间与上次事件太短，则取0\r\n        let ind = (nt - mv.oldTime[1] < 30) ? 0 : 1;\r\n        let dx = mv.oldLoc.x - mv.speedLoc[ind].x;\r\n        let dy = mv.oldLoc.y - mv.speedLoc[ind].y;\r\n        let s = Math.sqrt(dx * dx + dy * dy);\r\n        let dt = nt - mv.oldTime[ind];\r\n        //超过300ms 不执行事件\r\n        if (dt > 300 || s < 10) {\r\n            return;\r\n        }\r\n        let v0 = s / dt;\r\n        //速度>0.1,触发swipe事件\r\n        if (v0 > 0.05) {\r\n            let sname = '';\r\n            if (dx < 0 && Math.abs(dy / dx) < 1) {\r\n                e.v0 = v0; //添加附加参数到e\r\n                sname = 'swipeleft';\r\n            }\r\n            if (dx > 0 && Math.abs(dy / dx) < 1) {\r\n                e.v0 = v0;\r\n                sname = 'swiperight';\r\n            }\r\n            if (dy > 0 && Math.abs(dx / dy) < 1) {\r\n                e.v0 = v0;\r\n                sname = 'swipedown';\r\n            }\r\n            if (dy < 0 && Math.abs(dx / dy) < 1) {\r\n                e.v0 = v0;\r\n                sname = 'swipeup';\r\n            }\r\n            //处理swipe\r\n            if (evtObj.dependEvent.name === sname) {\r\n                let foo = evtObj.dependEvent.handler;\r\n                if(typeof foo === 'string'){\r\n                    foo = module.getMethod(foo);\r\n                }\r\n                if(foo){\r\n                    foo.apply(module,[dom.model, dom,evtObj.dependEvent, e]); \r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n//把swpie注册到4个方向\r\nEventManager.regist('swipeleft',EventManager.get('swipe'));\r\nEventManager.regist('swiperight',EventManager.get('swipe'));\r\nEventManager.regist('swipeup',EventManager.get('swipe'));\r\nEventManager.regist('swipedown',EventManager.get('swipe'));\r\n"],"names":["NodomMessage"],"mappings":"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"}